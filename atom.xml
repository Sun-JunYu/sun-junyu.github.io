<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LanAn Blog</title>
  
  
  <link href="http://sunjunyu.cn/atom.xml" rel="self"/>
  
  <link href="http://sunjunyu.cn/"/>
  <updated>2022-11-01T02:07:00.360Z</updated>
  <id>http://sunjunyu.cn/</id>
  
  <author>
    <name>蓝桉</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>测试高频面试题-功能测试</title>
    <link href="http://sunjunyu.cn/2022/09/12/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <id>http://sunjunyu.cn/2022/09/12/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/</id>
    <published>2022-09-11T16:00:00.000Z</published>
    <updated>2022-11-01T02:07:00.360Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-app和web测试的相同点和不同点"><a href="#1-app和web测试的相同点和不同点" class="headerlink" title="1.app和web测试的相同点和不同点 ***"></a>1.app和web测试的相同点和不同点 ***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">相同点：</span><br><span class="line">A.测试用例相同。</span><br><span class="line">B.同样的测试方法：都会依据效果图来检查UI,根据需求文档测试功能。</span><br><span class="line">C.都需要兼容性测试</span><br><span class="line">D.都需要测试应用系统的稳定性。</span><br><span class="line">不同点：</span><br><span class="line">A.App的安装卸载测试（全新安装，升级安装，第三方工具安装，第三方工具卸载，直接卸载删除）,web没有安装卸载一说</span><br><span class="line">B.app消息推送测试，手机授权测试，前后台切换。</span><br><span class="line">C.App的中断测试：来电中断，短信中断，蓝牙，闹钟，拔插数据线，手机锁定，手机断电，手机问题（系统死机重启）。</span><br><span class="line">D.兼容性测试：Web项目考虑不同内核的浏览器兼容，app需要考虑手机不同的操作系统（android/ios），不同的操作系统版本,不同机型，不同屏幕分辨率等。</span><br><span class="line">E.网路测试：不同网络与运营商，目前我国有三大运营商如：电信，移动，联通，不同的网络制式，如：GSM,CDMA,3G，4G，5G等，在不好或无网络的情况下的APP行为。</span><br><span class="line">F.app测试如果设备不足，可以考虑使用云测平台（百度云测，testin云测等）。</span><br></pre></td></tr></table></figure><h3 id="2-app测试的关注点-x2F-app测试一般测哪些东西"><a href="#2-app测试的关注点-x2F-app测试一般测哪些东西" class="headerlink" title="2.app测试的关注点&#x2F;app测试一般测哪些东西 ***"></a>2.app测试的关注点&#x2F;app测试一般测哪些东西 ***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">功能测试，安装卸载测试，升级测试，安全性测试，消息推送，前后台切换，ui测试，兼容性测试，网络环境测试，性能测试，中断测试</span><br></pre></td></tr></table></figure><h3 id="3-web测试的关注点"><a href="#3-web测试的关注点" class="headerlink" title="3.web测试的关注点 ***"></a>3.web测试的关注点 ***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">功能测试，兼容性测试，ui测试 ,安全性测试</span><br></pre></td></tr></table></figure><h3 id="4-如何确保测试用例覆盖所有需求点-x2F-如何保证产品的质量"><a href="#4-如何确保测试用例覆盖所有需求点-x2F-如何保证产品的质量" class="headerlink" title="4.如何确保测试用例覆盖所有需求点 &#x2F;如何保证产品的质量**"></a>4.如何确保测试用例覆盖所有需求点 &#x2F;如何保证产品的质量**</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">测试用例覆盖率很难达到100%，越复杂的功能越难保证，只能说尽量提高测试覆盖率。</span><br><span class="line"></span><br><span class="line">通过以下手段可以提高覆盖率：</span><br><span class="line">1、编写测试用例前，检查相关需求、设计文档是否有问题（功能描述不清，设计逻辑缺陷），如有问题找相关设计或者开发问清楚。</span><br><span class="line">2、然后整理成需要覆盖的功能列表或者思维导图，功能列表包含新增和修改功能点，性能需求也要列出来（因为要整理对应的性能测试用例）</span><br><span class="line">3、需要对既有功能进行一个梳理（显性需求和隐形需求都要分析），还需要检查是否会与其他功能有交互，整理出影响点。</span><br><span class="line">4、把功能列表发给组员，并找时间进行会议评审，主要对功能等进行查漏补缺。</span><br><span class="line">5、最后才行进测试用例编写，注意编写规范。</span><br><span class="line">6、编写完毕后，把测试用例发给组员，开会进行评审，主要对检查点、用例规范进行查漏补缺。</span><br><span class="line">7、执行测试用例过程中，发现用例不完善或者错误，需对测试用例进行及时的修改与调优</span><br><span class="line">8、测试完毕后对漏测的bug进行测试用例补充。</span><br></pre></td></tr></table></figure><h3 id="5-你提交bug的时候提交哪些内容？"><a href="#5-你提交bug的时候提交哪些内容？" class="headerlink" title="5.你提交bug的时候提交哪些内容？***"></a>5.你提交bug的时候提交哪些内容？***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">标题，复现步骤，预期结果，实际结果，测试环境，优先级，严重程度，指派给谁，所属模块，附件，缺陷类型</span><br></pre></td></tr></table></figure><h3 id="6-bug状态-x2F-bug流转过程"><a href="#6-bug状态-x2F-bug流转过程" class="headerlink" title="6.bug状态&#x2F;bug流转过程 **"></a>6.bug状态&#x2F;bug流转过程 **</h3><p><img src="https://sunjunyu.cn/images/Bug%E7%9A%84%E6%B5%81%E8%BD%AC%E7%8A%B6%E6%80%81.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">新建：刚发现的缺陷</span><br><span class="line">已指派：已经由测试人员将缺陷指派给开发人员进行处理</span><br><span class="line">已打开：开发人员正在修复缺陷</span><br><span class="line">已修复：开发人员完成缺陷修复，还未进行回归测试</span><br><span class="line">已拒绝：发开人员拒绝修复</span><br><span class="line">已延期：对缺陷进行延缓处理</span><br><span class="line">已关闭：由测试人员回归测试后，缺陷不存在了</span><br><span class="line">重新打开：由测试人员回归测试后，发现缺陷任然存在</span><br></pre></td></tr></table></figure><h3 id="7-开发不认bug-x2F-如果你发现了一个bug，开发不认，怎么办？"><a href="#7-开发不认bug-x2F-如果你发现了一个bug，开发不认，怎么办？" class="headerlink" title="7.开发不认bug&#x2F;如果你发现了一个bug，开发不认，怎么办？***"></a>7.开发不认bug&#x2F;如果你发现了一个bug，开发不认，怎么办？***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.找开发沟通，看他为什么不认,可能有两种情况</span><br><span class="line">2.第一种情况：开发可能说，产品改需求了，</span><br><span class="line">----我们需要找产品确认，如果是改了，根据新需求改用例，改完重新测试</span><br><span class="line">----                如果产品说没有改，把他们叫到一起，确认</span><br><span class="line">3.第二种情况：需求没有改，双方理解的需求不一致，一起找产品确定，</span><br><span class="line">----开发理解的正确，根据新的理解改用例，改完重新测试</span><br><span class="line">----我们理解的正确，让开发改bug</span><br></pre></td></tr></table></figure><h3 id="8-bug不能复现咋办？"><a href="#8-bug不能复现咋办？" class="headerlink" title="8.bug不能复现咋办？ **"></a>8.bug不能复现咋办？ **</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">A.首先考虑环境问题，看是否能够还原原来的环境</span><br><span class="line">B.尽量回想发生问题时的复现步骤，不要漏掉任何一个细节，按照步骤的组合尝试复现</span><br><span class="line">C.与开发人员配合，让开发人员对相应的代码检查，看是否通过代码层面检查出问题</span><br><span class="line">D.保留发生bug时的log，附加到提交的Bug中，希望可以通过log中找到一些蛛丝马迹。</span><br><span class="line">E.查看代码，也许是代码变更，引起的Bug</span><br><span class="line">F.遇到问题就要提，不能放过任何一个Bug，在提交的Bug描述中加上一句话，那就是复现概率，尝试20次，出现一次或尝试10次，交给开发，开发会根据Bug的复现概率，调整改Bug的优先级。</span><br></pre></td></tr></table></figure><h3 id="9-你在项目中最经典的BUG是什么？-x2F-你印象最深的一个bug"><a href="#9-你在项目中最经典的BUG是什么？-x2F-你印象最深的一个bug" class="headerlink" title="9.你在项目中最经典的BUG是什么？&#x2F;你印象最深的一个bug ***"></a>9.你在项目中最经典的BUG是什么？&#x2F;你印象最深的一个bug ***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">开放题，可以说涉及到前后端的问题,将定位饭分析的过程,之前讲过两个业务逻辑（processon上画过图）</span><br><span class="line">比如</span><br><span class="line">小明在淘宝app 商品详情中 点击了添加购物车 ,然后进入购物车后发现购物车中没有该条商品.</span><br><span class="line">或者</span><br><span class="line">小明在淘宝app中 支付了一笔订单(微信支付), 然后发现 本应该订单依然还在 待支付中, 待发货中没有该笔订单, 而小明的账户上的钱已经被扣除了.</span><br><span class="line"></span><br><span class="line">自己编类似的bug，然后给出分析和定位问题的过程</span><br><span class="line"></span><br><span class="line">最终问题是哪里的，你是怎么定位出来的</span><br></pre></td></tr></table></figure><h3 id="10-用例评审的流程，通过的规则-x2F-审核内容是什么"><a href="#10-用例评审的流程，通过的规则-x2F-审核内容是什么" class="headerlink" title="10.用例评审的流程，通过的规则&#x2F;审核内容是什么 *"></a>10.用例评审的流程，通过的规则&#x2F;审核内容是什么 *</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">两轮：内部评审，外部评审（产品，开发）</span><br><span class="line"></span><br><span class="line">评审内容：</span><br><span class="line">1.用例设计的结构安排是否清晰、合理,是否利于高效对需求进行覆盖。</span><br><span class="line">2.优先级安排是否合理。</span><br><span class="line">3.是否覆盖测试需求上的所有功能点</span><br><span class="line">4.用例是否具有很好可执行性.例如用例的前提条件、执行步骤、输入数据和期待结果是否清晰、正确；期待结果是否有明显的验证方法</span><br><span class="line">5.是否已经删除了冗余的用例</span><br><span class="line">6.是否包含充分的负面测试用例（反例）。充分的定义，如果在这里使用2/8法则，那就是4倍于正面用例的量，毕竟一个健壮的软件,其中80％的代码都是在“保护”20％的功能实现</span><br><span class="line">7.是否从用户层面来设计用户使用场景和使用流程的测试用例</span><br><span class="line">8.是否简洁，复用性强。例如，可将重复度高的步骤或过程抽取出来定义为一些可复用标准步骤。</span><br><span class="line">9.用例是否按照公司规定模板进行编写</span><br><span class="line"></span><br><span class="line">用例评审的检查项（不用背）：</span><br><span class="line">1.用例是否按照公司定义的模板进行编写</span><br><span class="line">2.用例的本身描述是否清晰，是否存在歧义</span><br><span class="line">3.用例内容是否正确，是否与需求目标一致</span><br><span class="line">4.用例的期望结果是否确定，唯一</span><br><span class="line">5.操作步骤应与描述一致</span><br><span class="line">6.是否覆盖了所有需求 **</span><br><span class="line">7.用例是否冗余 ** </span><br><span class="line">8.是否具有可执行性</span><br><span class="line">9.是否是从用户层面来设计用户使用场景和使用流程的测试用例</span><br><span class="line">10.场景测试用例是否覆盖最复杂的业务流程</span><br><span class="line">11.是否包含正面，反面的用例  **</span><br><span class="line">12.对于系统自动生成的输出项是否注明了生成规则</span><br><span class="line">13.测试用例应包含对中间和后台数据的检查</span><br><span class="line">14.是否有正确的名称和编号</span><br><span class="line">15.是否标明优先级</span><br><span class="line">16.是否包含配置信息：测试环境，数据，前置条件，用户授权等</span><br><span class="line">17.测试步骤应具体，清晰</span><br><span class="line">18.自动化测试脚本必须带有注解（包括：目的，输入，期望结果等）</span><br><span class="line">19.非功能测试需求或不可测试需求是否再用例中列出并说明</span><br></pre></td></tr></table></figure><h3 id="11-你们公司测试计划谁写？有哪些内容"><a href="#11-你们公司测试计划谁写？有哪些内容" class="headerlink" title="11.你们公司测试计划谁写？有哪些内容 *"></a>11.你们公司测试计划谁写？有哪些内容 *</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一般是测试经理/测试组长写，</span><br><span class="line">测试目的，测试资源，测试范围，测试风险（重点），人员分工（重点），测试策略，测试准则，测试进度（重点），测试输出</span><br></pre></td></tr></table></figure><h3 id="12-v模型和w模型"><a href="#12-v模型和w模型" class="headerlink" title="12.v模型和w模型  **"></a>12.v模型和w模型  **</h3><p><img src="https://sunjunyu.cn/images/V%E6%A8%A1%E5%9E%8B.jpg"></p><p><img src="https://sunjunyu.cn/images/M%E6%A8%A1%E5%9E%8B.jpg"></p><h3 id="13-测试用例（case）-x2F-测试点该怎么写（给定业务说测试点，比如水杯测试点，抖音评论-x2F-发红包-x2F-转账-x2F-朋友圈点赞-x2F-登录测试点）"><a href="#13-测试用例（case）-x2F-测试点该怎么写（给定业务说测试点，比如水杯测试点，抖音评论-x2F-发红包-x2F-转账-x2F-朋友圈点赞-x2F-登录测试点）" class="headerlink" title="13.测试用例（case）&#x2F;测试点该怎么写（给定业务说测试点，比如水杯测试点，抖音评论&#x2F;发红包&#x2F;转账&#x2F;朋友圈点赞&#x2F;登录测试点）"></a>13.测试用例（case）&#x2F;测试点该怎么写（给定业务说测试点，比如水杯测试点，抖音评论&#x2F;发红包&#x2F;转账&#x2F;朋友圈点赞&#x2F;登录测试点）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br></pre></td><td class="code"><pre><span class="line">分析：可以从  功能，性能，ui，易用性，安全，兼容性，app专项测试（如果是移动端项目的话）  这七方面展开说，采用总分的形式说，先说可以从五方面考虑，再每个方面细说，结合设计测试用例的方法</span><br><span class="line"></span><br><span class="line">- 微信红包：</span><br><span class="line">--功能-单个红包：</span><br><span class="line">1、红包金额为空、0、0.01、200.00、200.01、199.99、200</span><br><span class="line">2、留言输入数字、字母、汉字、特殊字符</span><br><span class="line">3、留言长度</span><br><span class="line">4、留言复制粘贴</span><br><span class="line">5、表情选择收藏表情、其他表情</span><br><span class="line">6、删除表情、重新选择表情</span><br><span class="line">7、选择支付方式 零钱、银行卡、添加新卡支付。其中钱数&lt;红包钱数、其中钱数=红包钱数、其中钱数&gt;红包钱数</span><br><span class="line">8、使用指纹确认付款（正确的、错误的指纹）</span><br><span class="line">9、使用密码确认付款（正确的、错误的密码）</span><br><span class="line">10、红包成功发送后 相应支付方式中钱数减少（减少金额与红包金额一致）</span><br><span class="line">11、接受者能看到红包具体信息，红包金额、留言、表情均能正确显示</span><br><span class="line">12、红包被拆开后显示已领取，领取者零钱中增加正确金额，再次领取只能查看红包信息</span><br><span class="line">13、发红包者自己领红包</span><br><span class="line">14、红包24小时未被领取提示红包被退回，相应支付方式中钱数增加（增加金额与红包金额一致），对方不能领红包</span><br><span class="line"></span><br><span class="line">-- 功能-群发红包-普通红包：（只写了与单个红包不同的地方）</span><br><span class="line">1、红包个数 为空、0、001、100、99、101</span><br><span class="line">2、红包拆开每个金额一样 均为发红包时设置的单个金额对应的钱数</span><br><span class="line">3、红包被拆时，有相应提示</span><br><span class="line">4、发红包者自己领红包</span><br><span class="line">5、红包24小时内未被拆完，剩余钱被退回，相应支付方式中钱数增加</span><br><span class="line"></span><br><span class="line">-- 群发红包-拼手气红包：</span><br><span class="line">1、红包总额/红包个数&lt;0.01</span><br><span class="line">2、红包每个人拆开金额不同，总金额与发红包设置的总额一致</span><br><span class="line">3、红包24小时内拆完后显示最佳手气</span><br><span class="line">4、红包24小时内未被拆完不显示最佳手气</span><br><span class="line"></span><br><span class="line">兼容性：安卓、苹果 不同型号版本手机</span><br><span class="line">UI测试：界面无错别字，风格统一, 和设计图保持一致</span><br><span class="line">中断测试：不同应用之间切换、断网、来电、短信、低电量、手机没电</span><br><span class="line">网络测试：2g/3g/4g/5g  WiFi 移动联通电信  弱网  无网　　</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 朋友圈点赞：</span><br><span class="line">-- 功能测试</span><br><span class="line">1.点赞后是否显示结果；</span><br><span class="line">2.点赞后是否可以取消；</span><br><span class="line">3.点赞取消后是否可以重复点赞；</span><br><span class="line">4.共同好友点赞后，是否有消息提醒；</span><br><span class="line">5.非共同好友点赞后，是否有消息提醒；</span><br><span class="line">6.点击点赞人昵称，是否可以跳转到他/她的主页；</span><br><span class="line">7.自己能否给自己点赞；</span><br><span class="line">8.屏蔽了该用户，共同好友点赞是否提示；</span><br><span class="line">9.点赞人有备注时，是否展示备注昵称；</span><br><span class="line">10.点赞后删除好友，是否继续展示其点赞；</span><br><span class="line"></span><br><span class="line">-- UI界面测试</span><br><span class="line">1.界面是否简介美观；</span><br><span class="line">2.点赞后动态特效是否正常显示；</span><br><span class="line">3.朋友圈界面图片是否正常显示；</span><br><span class="line">4.朋友圈界面文字是否正常显示；</span><br><span class="line">-- 性能测试</span><br><span class="line">1.点赞人数过多是否能正常显示；</span><br><span class="line">2.同一时间点赞人数过多是否正常收到提示；、</span><br><span class="line">-- 安全测试</span><br><span class="line">1.发送部分可见的朋友圈，其余人不可见；</span><br><span class="line">2.发送部分可见的朋友圈，点赞后共同好友不可见；</span><br><span class="line">-- 弱网测试</span><br><span class="line">1.弱网环境下，点赞是否成功；</span><br><span class="line">2.弱网环境下，点赞的时间；</span><br><span class="line">-- 易用性测试</span><br><span class="line">发送部分可见，是否可以沿用上次的名单；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 淘宝搜索框：</span><br><span class="line">-- 功能测试：</span><br><span class="line">1.输入可查到结果的正常关键字，检索到的内容、链接准确性</span><br><span class="line">2.输入不可查到结果的关键字，有无错误信息提示</span><br><span class="line">3.输入一些特殊的内容，如空字符、特殊字符等，可引入等价类划分的方法等</span><br><span class="line">4.返回的商品结果排序：价格、销量、评价、综合</span><br><span class="line">5.返回结果庞大时，限制第一页的输出量，需支持翻页</span><br><span class="line">6.多选项搜索：关键字、品牌、产地、价格区间、 是否天猫、是否全国购</span><br><span class="line">7.是否支持模糊搜索，支持通配符的查询</span><br><span class="line">8.网速慢的情况下的搜索</span><br><span class="line">9.搜索结果为空的情况</span><br><span class="line">10.未登录情况和登录情况下的搜索（登录情况下，存储用户搜索的关键字、搜索习惯）</span><br><span class="line"></span><br><span class="line">-- 性能测试：</span><br><span class="line">1.压力测试：在不同开发用户数压力下的表现（评价指标如响应时间等）</span><br><span class="line">2.负载测试：看极限能承载多大用户量同时正常使用</span><br><span class="line">3.稳定性测试：常规压力下能保持多久持续稳定运行</span><br><span class="line">4.内存测试：有无内存泄露现象</span><br><span class="line">5.大数据量测试：如模拟从海量数据中搜索结果、搜索出的海量结果列示出来，如何表现等</span><br><span class="line"></span><br><span class="line">-- 易用性测试：</span><br><span class="line">1.交互界面的设计是否便于、易于使用</span><br><span class="line">2.依据不同的查询结果会有相关的人性化提示，查不到时告知，查到时统计条数并告知，有疑似输入条件错误时提示可能正确的输入项等等处理</span><br><span class="line">3.查询出的结果罗列有序，如按销量或其他排序综合，确保每次查询的结果位置按规则列示方便定位，显示字体、字号、色彩便于识别等等</span><br><span class="line">4.标题查询、全文检索、模糊查询、容错查询、多关键字组织查询（空格隔开）等实用检索方式是否正常</span><br><span class="line">5.输入搜索条件的空间风格设计、位置摆放是否醒目便于使用者注意到，有无快照等快捷查询方式等人性化设计</span><br><span class="line"></span><br><span class="line">-- 兼容性：</span><br><span class="line">1.Windows/Linux等各类操作系统下及各版本下的应用</span><br><span class="line">2.IE/Fireox/Goolge/360/QQ/edge等各类浏览器下及各版本下、各种显示分辨率条件下的应用</span><br><span class="line">3.SQL/ORACLE/MySQL等各类数据库存储下的兼容性测试</span><br><span class="line">4.简体中文、繁体中文、英文等各类语种软件平台下的兼容性测试</span><br><span class="line">5.iphone/ipad/安卓等各类移动应用平台下的兼容性测试</span><br><span class="line">6.与个相关的监控程序的兼容性测试，如输入法、杀毒、监控、防火墙等工具同时使用</span><br><span class="line"></span><br><span class="line">-- 安全性:</span><br><span class="line">1.被删除、加密、授权的数据，不允许被SQL注入等攻击方式查出，是否有安全控制设计</span><br><span class="line">2.录入一些数据库查询的保留字符，如单引号、%等，造成查询SQL拼接出来的语句产生漏洞，如可以查出所有数据等等，这方面要有一些黑客攻击的思想并引入一些工具和技术，如爬网等</span><br><span class="line">3.通过白盒测试技术，检查一下在程序设计上是否存在安全方面的隐患</span><br><span class="line">4.对涉及国家安全、法律禁止的内容是否进行了相关的过滤和控制</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 购物车：</span><br><span class="line">-- 界面测试</span><br><span class="line">1.打开淘宝购物车页面后，页面的布局是否合理，是否完整。</span><br><span class="line">2.不同卖家的商品在不同的table区域显示，区分明显。</span><br><span class="line">3.页面的功能按钮可以正常显示。</span><br><span class="line">4.商品的最下方显示失效宝贝。</span><br><span class="line">5.页面的最低端显示“你可能喜欢”</span><br><span class="line">6.向下滑动页面，在购物车顶端展示“购物车”。</span><br><span class="line">7.购物车中如果存在有商品降价、库存不足、限购件数等，在商品详情的下面，会有对应的字体展示。</span><br><span class="line"></span><br><span class="line">-- 基本功能</span><br><span class="line">1.购物车页面的所有连接是否正常。</span><br><span class="line">2.从商品信息页面添加的商品能显示在购物车中。</span><br><span class="line">3.若未登录，点击购物车中的商品直接进行结算，则提示用户输入用户名和密码，或者提示用户进行注册。</span><br><span class="line">4.若没有选择任何商品，点击结算，则提示用户“请添加要结算的商品”。</span><br><span class="line">5.勾选商品后，已选商品的总价（和优惠满减活动）会显示。</span><br><span class="line">6.勾选商品，点击结算按钮后，进去确认订单信息页面。</span><br><span class="line">7.购物车页面中，可以对添加商品信息做信息的修改，并自动保存成功。</span><br><span class="line">8.可以在购物车中重新修改商品规格。</span><br><span class="line">9.购物车能添加的商品种类是有数量上限的。</span><br><span class="line">10.结算的时候商品可以全选，选择底部的全选按钮。</span><br><span class="line">11.可以在购物车页面对宝贝进行管理。</span><br><span class="line"></span><br><span class="line">-- 性能功能易用安全界面</span><br><span class="line">1.是否能一件批量付款</span><br><span class="line">2.是否有全选、全不选的功能</span><br><span class="line">3.是否能删除商品</span><br><span class="line">4.能否把购物车了的商品移入收藏夹</span><br><span class="line">5.是否有商品规格、购买数量的显示</span><br><span class="line">6.是否有商品名称的显示</span><br><span class="line">7.是否有店铺活动、满减优惠、降价显示</span><br><span class="line">8.每个商品是否有店铺名称的提示</span><br><span class="line">9.点击商品店铺能否进入店铺查看商品</span><br><span class="line">10.点击商品名称能否进入商品详情页</span><br><span class="line">11.是否有领券的文字提示</span><br><span class="line">12.是否会显示领取优惠券之后的优惠价格</span><br><span class="line">13.失效的商品是否还会出现在购物车的历史记录中</span><br><span class="line">14.每件商品是否有对应商品图片的展示</span><br><span class="line">15.是否有凑单提示</span><br><span class="line">16.在购物车页面能否再次选择商品的种类</span><br><span class="line">17.划到购物车页面的底部，有没有推荐商品展示</span><br><span class="line">18.不支持发货的地区是否会有提示，商品前面的全选、全不选多选框是否会变灰色</span><br><span class="line">19.当没有全选、全不选的多选框，没有选择任何商品时，点击 结算 按钮是否会跳转页面</span><br><span class="line">20.是否有删除商品、批量删除的功能</span><br><span class="line">21.是否有寻找相似商品的功能</span><br><span class="line"></span><br><span class="line">-- 性能测试</span><br><span class="line">1.打开购物车时间是否在已定的用户可以棘手的时间范围内。</span><br><span class="line">2.编辑购物车：删除、添加商品需要的时间。</span><br><span class="line">3.在购物车页面选择需要购买的商品进行结算的时候，结算金额可不可以实时显示。</span><br><span class="line">4.清空失效商品需要的时间。</span><br><span class="line">5.打开购物车页面要多久</span><br><span class="line">6.快捷键功能知否支持</span><br><span class="line">-- 兼容性测试</span><br><span class="line">1.iOS：不同型号，不同的iOS系统。</span><br><span class="line">2.安卓：不同品牌，不同型号，不同的安卓系统。</span><br><span class="line">3.不同浏览器上的测试功能是否正常</span><br><span class="line"></span><br><span class="line">-- 网络环境</span><br><span class="line">1.3G、4G、WiFi网络环境下应用的各功能可正常运行。</span><br><span class="line">2.网络异常时，数据交换是否会有提醒。</span><br><span class="line">3.中途断网再很快连网，数据是否可以自动恢复，正常加载。</span><br><span class="line">4.只允许内网访问的APP，在连接到外网时是否会有提醒。</span><br><span class="line"></span><br><span class="line">-- 异常测试</span><br><span class="line">1.没有内存时，APP是否能够正常相应。</span><br><span class="line">2.横竖屏切换展示。</span><br><span class="line">3.APP运行时网络中断。</span><br><span class="line">4.反复操作某一个功能，不断点击和刷新，是否出现闪退。</span><br><span class="line">5.APP运行时接入电话、短信、社交软件的信息提示时，是否能够正常运行。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">登录测试用例设计：</span><br><span class="line">一. 界面测试设计要点:</span><br><span class="line">1. 界面的设计风格是否与UI的设计风格统一,布局是否合理, 按钮是否对齐</span><br><span class="line">2. web的话, 对页面缩放登录模块是否与缩放比例缩放</span><br><span class="line">3.界面中的文字简洁易懂,没有错别字</span><br><span class="line">二. 功能测试设计要点:</span><br><span class="line">1.  输入已注册的用户名和正确的密码，验证是否成功登录</span><br><span class="line">2.  输入已注册的用户名和不正确的密码，验证是否成功失败，且提示信息正确</span><br><span class="line">3.  输入未注册的用户名和任意密码，验证是否登录失败，且提示信息正确</span><br><span class="line">4.  使用未激活账户登录，验证是否登录失败</span><br><span class="line">5.  使用被停用用户登录，验证是否登录失败</span><br><span class="line">6.  用户名和密码两者都为空，验证是否登录失败，且提示信息正确</span><br><span class="line">7.  用户名和密码两者之一为空，验证是否登录失败，并且提示信息正确</span><br><span class="line">8.  如果登录功能启用了验证码功能，在用户名和密码正确的情况下，输入正确的验证码，验证是否登录成功</span><br><span class="line">9.  如果登录功能启用了验证码功能，在用户名和密码正确的情况下，输入错误的验证码，验证是否登录失败，且提示信息正确</span><br><span class="line">10.用户名和密码是否大小写敏感</span><br><span class="line">11.页面上的密码框是否加密显示、或者是否需要有明暗码切换按钮</span><br><span class="line">12.后台系统创建的用户第一次登录成功时，是否提示修改密码</span><br><span class="line">13.忘记用户名和忘记密码的功能是否可用</span><br><span class="line">14.前端页面是否根据设计需求限制用户名和密码长度</span><br><span class="line">15.如果登录功能需要验证码，点击验证码图片或者点击换一张是否可以更换验证码，更换后的验证码是否可用</span><br><span class="line">16.刷新页面是否会刷新验证码</span><br><span class="line">17.如果验证码有时效性，需要分别时效性内和时效性外验证码的有效性</span><br><span class="line">18.用户登录成功但是会话超时后，继续操作是否会重定向到用户登录界面</span><br><span class="line">19.不同级别的用户，比如管理员和普通用户，登录系统后权限是否正确</span><br><span class="line">20.页面默认焦点是否定位在用户输入框中</span><br><span class="line">21.快捷键Tab和Enter等，是否可以正常使用</span><br><span class="line">22.为空和输入空格字符串的校验是否一致</span><br><span class="line">23.使用中文键盘输入字母和使用英文键盘输入字母传入后端的字符长度是否一致</span><br><span class="line">24.成功登录后的session的时效设置</span><br><span class="line">25.输入栏是否设置快速删除按钮</span><br><span class="line">26.用户名和密码是否支持特殊字符和中文</span><br><span class="line">27.浏览器的前进后退按钮，是否有效</span><br><span class="line">28.成功登出后，点击浏览器回退按钮，是否可以继续操作系统</span><br><span class="line">29.需求中是否有登录时间限制，如果有验证时间限制是否有效</span><br><span class="line">30.验证不同登录方式的正确性：扫码、账号密码、第三方……</span><br><span class="line">31.若支持手机号+验证码登录，验证码是否有时间限制，移动设备是否可以直接获取验证码</span><br><span class="line">32.操作错误提示信息是否简单明了</span><br><span class="line">三. 性能测试设计要点:</span><br><span class="line">1.  单用户登录的响应时间是否小于3秒</span><br><span class="line">2.  单用户登录时，后台请求数量是否过多</span><br><span class="line">3.  高并发场景下用户登录的响应时间是否小于5秒</span><br><span class="line">4.  高并发场景下服务端的监控指标是否符合预期</span><br><span class="line">5.  高集合点并发场景下，是否存在资源死锁和不合理资源等待</span><br><span class="line">6.  长时间大量用户连续登录和登出，服务器是否存在内存泄露</span><br><span class="line">7.  输入内容校验是否加入了函数防抖</span><br><span class="line">四. 安全测试设计要点:</span><br><span class="line">1.  用户密码后台存储是否加密</span><br><span class="line">2.  用户密码在网络传输过程中是否加密</span><br><span class="line">3.  密码是否具有有效期，密码有效期到期后，是否提示需要修改密码</span><br><span class="line">4.  不登录的情况下，在浏览器中直接输入登录后的URL地址,验证是否会重新定向到用户登录界面</span><br><span class="line">5.  密码输入框是否不支持复制粘贴</span><br><span class="line">6.  密码输入框内输入的密码是否都可以在页面源码模式下被查看</span><br><span class="line">7.  用户名和密码输入框分别输入典型的“SQL注入攻击”字符串，验证系统的返回页面</span><br><span class="line">8.  用户名和密码输入框分别输入典型的“XSS跨站脚本攻击”字符串，验证系统行为是否被篡改</span><br><span class="line">9.  连续多次登录失败的情况下，系统是否会阻止后续的尝试以应对暴力破解</span><br><span class="line">10.同一用户在同一终端的多种浏览器上登录，验证登录功能的互斥性是否符合设计预期</span><br><span class="line">11.同一用户先后在多台终端的浏览器上登录，验证登录是否具有互斥性</span><br><span class="line">12.是否可以记住密码，记住的密码保存是否加密，记住的密码是否有有效期，过了有效期后是否清空密码</span><br><span class="line">13.是否支持第三方登录</span><br><span class="line">14.密码的强弱性，复杂度校验</span><br><span class="line">15.异地登录校验、更换设备登录校验、登陆信息异常是否考虑账户冻结停用、是否允许第三方平台存储密码</span><br><span class="line">16.是否可以使用登录的api发送登录请求，并绕开验证码校验</span><br><span class="line">17.是否可以用抓包工具抓到的请求包直接登录</span><br><span class="line">18.截取到的token等信息，是否可以在其他终端上直接使用，绕开登录，token过期时间校验</span><br><span class="line">19.登录错误后的提示是否存在安全隐患</span><br><span class="line">五. 兼容性测试要点:</span><br><span class="line">1.  不同浏览器下，验证登录页面的显示以及功能正确性</span><br><span class="line">2.  相同浏览器的不同版本下验证登录页面的显示以及功能正确性</span><br><span class="line">3.  不同移动设备终端的不同浏览器下，验证登录页面显示以及功能的正确性</span><br><span class="line">4.  不同分辨率的界面下，验证登录页面的显示以及功能正确性</span><br><span class="line">六. 用户体验设计要点:</span><br><span class="line">1. 输入框是否有一键清除功能</span><br><span class="line">2. 输入错误用户名/密码登录失败, 提示最好是密码或者用户名错误</span><br><span class="line">3. 输入的密码个数最好与输入框加密的个数不相同</span><br><span class="line">4. 如何验证码是纯数字, 点击验证码输入框弹出数字键盘</span><br><span class="line">5. 点击用户/密码字段可以鼠标焦点跳到对应的输入框中</span><br></pre></td></tr></table></figure><h3 id="14-设计测试用例的七个方法"><a href="#14-设计测试用例的七个方法" class="headerlink" title="14.设计测试用例的七个方法 *"></a>14.设计测试用例的七个方法 *</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">边界值分析法，等价类划分法，场景法，错误推断法，判定表，因果图，正交实验法（前3个最常用）</span><br><span class="line"></span><br><span class="line">确定上点内点离点：(0,18],[0,18),(0,18),[0,18]</span><br><span class="line">上点：边界上的点</span><br><span class="line">内点：域内的点</span><br><span class="line">离点：离上点最近的点，开内闭外</span><br><span class="line"></span><br><span class="line">有效等价类：符合需求说明书要求的数据</span><br><span class="line">无效等价类：不符合需求说明书要求的数据</span><br></pre></td></tr></table></figure><h3 id="15-你们公司测试工作的流程"><a href="#15-你们公司测试工作的流程" class="headerlink" title="15.你们公司测试工作的流程 ***"></a>15.你们公司测试工作的流程 ***</h3><p><img src="https://sunjunyu.cn/images/%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">原型图格式：.rp</span><br><span class="line">启动的软件：axure/蓝湖在线查看</span><br><span class="line">ui设计图：蓝湖/本地设计图</span><br><span class="line">ui还原度：软件和设计图之间的</span><br></pre></td></tr></table></figure><h3 id="16-测试报告内容"><a href="#16-测试报告内容" class="headerlink" title="16.测试报告内容*"></a>16.测试报告内容*</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">编写目的，测试人员（重点），测试环境，测试进度（重点），用例执行情况（是），缺陷统计（重点），缺陷分析（重点），测试总结（重点），风险分析（重点），遗留问题（重点）</span><br></pre></td></tr></table></figure><h3 id="17-上线相关"><a href="#17-上线相关" class="headerlink" title="17.上线相关"></a>17.上线相关</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Android安装包后缀：.apk(之前)，.aab(android app bundle)</span><br><span class="line">ios安装包后缀：.ipa(iphone app)</span><br><span class="line"></span><br><span class="line">是否参与上线工作？？？</span><br><span class="line">只做验收，后续工作不参与，他们大概这么做的</span><br><span class="line">后端/前端html：部署服务器</span><br><span class="line">Android上线： 开发/项目经理 将安装包提交到各个应用市场（应用宝，360应用市场，各个手机应用，goole应用市场），进行审核，审核通过就可以上线</span><br><span class="line">ios上线： 开发/项目经理 将安装包提交到app store，进行审核（比较严），审核通过就可以上线</span><br><span class="line"></span><br><span class="line">苹果税：是指苹果对于App Store的收费APP都会抽成30%（虚拟商品）的行为。</span><br></pre></td></tr></table></figure><h3 id="18-如果你是测试负责人，如果下个星期三上线，你发现测试任务完不成了，怎么办？"><a href="#18-如果你是测试负责人，如果下个星期三上线，你发现测试任务完不成了，怎么办？" class="headerlink" title="18.如果你是测试负责人，如果下个星期三上线，你发现测试任务完不成了，怎么办？"></a>18.如果你是测试负责人，如果下个星期三上线，你发现测试任务完不成了，怎么办？</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">分析：从两方面考虑，1.应对本次危机；2.反思为什么导致这次的危机</span><br><span class="line">第一方面：应对危机</span><br><span class="line">1.加班,其次找关系好的同事</span><br><span class="line">2.从其他组调人过来</span><br><span class="line">3.考虑延期</span><br><span class="line">4.砍掉一部分需求</span><br><span class="line">5.外包出去</span><br><span class="line">第二方面：反思</span><br><span class="line">1.测试：水平不行（换人，内部培训），人力不足（招人）</span><br><span class="line">2.产品：比如，频繁修改需求/新增需求</span><br><span class="line">3.UI：水平不行（换人，内部培训），人力不足（招人）</span><br><span class="line">4.开发：水平不行（换人，内部培训），人力不足（招人）</span><br></pre></td></tr></table></figure><h3 id="19-黑盒测试、白盒测试、灰盒测试"><a href="#19-黑盒测试、白盒测试、灰盒测试" class="headerlink" title="19.黑盒测试、白盒测试、灰盒测试 **"></a>19.黑盒测试、白盒测试、灰盒测试 **</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- 黑盒测试(Black Box -Test):把被测试的软件看做一个黑盒子，我们不去关心盒子里边的结构是什 么样子，只关心软件的输入数据和输出结果 有人把黑盒测试比作中医，通过“望闻问切”来判断是否有问题。</span><br><span class="line"></span><br><span class="line">  “望”:观察软件的行为是否正常。</span><br><span class="line">  “闻”:检查输出的结果是否正确。</span><br><span class="line">  “问”:输入各种信息，结合“望”，“闻”来观察软件的响应。</span><br><span class="line">  “切”:像中医一样给软件“把把脉”，敲击一下软件的某些“关节” </span><br><span class="line"></span><br><span class="line">- 白盒测试:是一种按照程序内部逻辑结构和编码结构设计测试数据并完成测试的测试方法 </span><br><span class="line"></span><br><span class="line">- 灰盒测试:一种基于程序运行时的外部表现同时又结合程序内部结构来设计测试数据的测试方法</span><br></pre></td></tr></table></figure><h3 id="20-按照测试阶段分类，测试分为哪几类"><a href="#20-按照测试阶段分类，测试分为哪几类" class="headerlink" title="20.按照测试阶段分类，测试分为哪几类  **"></a>20.按照测试阶段分类，测试分为哪几类  **</h3><p>​单元测试、集成测试、系统测试、验收测试</p><ul><li>单元测试:对一个模块、一个函数或者一个类来进行正确性检验的测试方法 </li><li>集成测试:单元测试后，将单独的模块按照设计要求组装成为子系统或系统，作为整体进行测试的 测试方法</li><li>系统测试:集成测试后，将硬件、软件看作一个整体,对系统的功能及性能的总体测试 </li><li>验收测试:系统测试后以用户测试为主，或有测试人员共同参与检验软件质量的测试方法</li></ul><p><img src="https://sunjunyu.cn/images/%E6%B5%8B%E8%AF%95%E9%98%B6%E6%AE%B5.jpg"></p><h3 id="21-冒烟测试和回归测试是什么"><a href="#21-冒烟测试和回归测试是什么" class="headerlink" title="21.冒烟测试和回归测试是什么  **"></a>21.冒烟测试和回归测试是什么  **</h3><ul><li>冒烟测试:验证系统的核心功能是否能够正常运行的测试方法 </li><li>回归测试:指开发修改bug后，重新进行测试以确认是否修复成功，修改有没有导致其他代码产生错误的测试方法</li></ul><h3 id="22-软件的分类"><a href="#22-软件的分类" class="headerlink" title="22.软件的分类"></a>22.软件的分类</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.根据应用场景分类：</span><br><span class="line">工具类软件、游戏型软件、媒体型软件、电商型软件等</span><br><span class="line">2.根据软件架构分类：</span><br><span class="line">单机版软件、分布式软件</span><br><span class="line">2.1单机版软件：office、红警等</span><br><span class="line">2.2分布式软件：</span><br><span class="line">C/S架构软件:客户端需安装专门软件，如QQ 微信等</span><br><span class="line">B/S架构软件:客户端为浏览器 ，如百度、hao123等</span><br></pre></td></tr></table></figure><h3 id="23-BS-x2F-CS架构的区别是什么？"><a href="#23-BS-x2F-CS架构的区别是什么？" class="headerlink" title="23.BS&#x2F;CS架构的区别是什么？*"></a>23.BS&#x2F;CS架构的区别是什么？*</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">概念：所谓的架构就是用来指导我们软件开发的一种思维，目前最长见的就是BS/CS.</span><br><span class="line">B---browser 浏览器</span><br><span class="line">C---client 客户端</span><br><span class="line">S---server 服务端</span><br><span class="line">区别：</span><br><span class="line">A.标准：相对于cs架构来说Bs架构的两端都是使用现成的成熟产品，bs会显示的标准一些。</span><br><span class="line">B.效率：相对于bs架构来说cs中的客户端可以分担一些数据的处理，执行效率会高一些。</span><br><span class="line">C.安全：bs架构当中得到数据的传输都是以Http协议进行传输的，而Http协议又是明文输出。可以被抓包，那么bs架构相比cs架构显得就不那么安全了，（其实都是相对的）。</span><br><span class="line">D.升级：bs架构只需要在服务器端将数据进行更新，前台只需要刷新页面就可以升级，而cs架构必须要将两端都进行更新才可以。</span><br><span class="line">E.开发成本：相对于bs架构来说cs当中的客户端需要自己开发，bs不用，所以说cs成本会高一些。</span><br></pre></td></tr></table></figure><h3 id="24-Android手机和IOS手机-系统有什么区别"><a href="#24-Android手机和IOS手机-系统有什么区别" class="headerlink" title="24.Android手机和IOS手机,系统有什么区别?**"></a>24.Android手机和IOS手机,系统有什么区别?**</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A.运行机制不同:IOS采用的是沙盒运行机制,安卓采用的是虚拟机运行机制</span><br><span class="line">B.两者后台制度不同:IOS中任何第三方程序都不能在后台运行,安卓中任何程序都能在后台运行,直到没有内存才会关闭</span><br><span class="line">C.IOS中用于UI指令权限最高,安卓中数据处理指令权限最高</span><br></pre></td></tr></table></figure><h3 id="25-你搭建过什么环境"><a href="#25-你搭建过什么环境" class="headerlink" title="25.你搭建过什么环境  ***"></a>25.你搭建过什么环境  ***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.安装JDK，配置环境变量</span><br><span class="line">2.安装测试需要的工具，像Jmeter，postman，抓包工具</span><br><span class="line">3.安装Android sdk，配置环境变量，方便使用monkey对Android软件测试</span><br><span class="line">4.安装Python环境和ide，写python脚本，做接口自动化和ui自动化</span><br><span class="line">5.服务器上安装ServerAgent，监测服务器性能</span><br></pre></td></tr></table></figure><h3 id="26-开发环境与测试环境有什么区别？"><a href="#26-开发环境与测试环境有什么区别？" class="headerlink" title="26.开发环境与测试环境有什么区别？"></a>26.开发环境与测试环境有什么区别？</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">开发环境：是在编码阶段，一般我们的代码基本上都是在开发环境中，不会在生产与测试环境，如操作系统，web服务器，语言环境，php,数据库等等。</span><br><span class="line">测试环境：项目完成后，供测试找Bug,以及修改Bug后调试的环境。</span><br><span class="line">生产环境： 项目数据前后端已经疏通，部署到阿里云上有客户去使用以及访问，供用户使用的环境</span><br></pre></td></tr></table></figure><h3 id="27-请描述下接口测试与UI测试是如何协同测试的？"><a href="#27-请描述下接口测试与UI测试是如何协同测试的？" class="headerlink" title="27.请描述下接口测试与UI测试是如何协同测试的？"></a>27.请描述下接口测试与UI测试是如何协同测试的？</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A.有一部分是重叠的，Ui测试是通过前端写的界面，是来调用接口的，而接口测试是直接调用接口。</span><br><span class="line">B.排除前端的处理逻辑与调用的正确性，在理论上接口测试是可以覆盖所有的Ui测试，但实际中，如接口层覆盖所有的业务流，在Ui上只测试前端的逻辑，而最终的结果会忽视很多原有的功能点，导致了Ui测试的不充分，那么会在人多且时间充分的时候，可以尝试接口去做业务流的全覆盖，否则不要轻易的去尝试。</span><br></pre></td></tr></table></figure><h3 id="28-App常见崩溃的原因？"><a href="#28-App常见崩溃的原因？" class="headerlink" title="28.App常见崩溃的原因？"></a>28.App常见崩溃的原因？</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A.设备碎片化：由于设备极具多样性，App在不同的设备上可能有不同表现形式。</span><br><span class="line">B.宽带限制：宽带不佳的的网络对APP所需的快速响应时间不够。</span><br><span class="line">C.网络的变化：不同网络间的切换可能会影响App的稳定性。</span><br><span class="line">D.内存管理：可能内存过低，或非是授权的内存位置的使用可能会导致App失败。</span><br><span class="line">E.用户过多：连续数量过多可能会导致App崩溃。</span><br><span class="line">F.代码错误：没有经过测试的新功能，可能会导致App在生产环境中失败。</span><br><span class="line">第三方服务：广告或弹出屏幕可能会导致App崩溃。   </span><br></pre></td></tr></table></figure><h3 id="30-如何提交高质量的软件缺陷记录（报告）？"><a href="#30-如何提交高质量的软件缺陷记录（报告）？" class="headerlink" title="30.如何提交高质量的软件缺陷记录（报告）？ *"></a>30.如何提交高质量的软件缺陷记录（报告）？ *</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">A.ui要统一、准确。</span><br><span class="line">B.尽量使用业界惯用的表达术语和表达方法</span><br><span class="line">C.每条缺陷报告只包括一个缺陷</span><br><span class="line">D.不可重现的缺陷也要报告</span><br><span class="line">E.明确指明缺陷类型</span><br><span class="line">F.明确指明缺陷严重等级和优先等级</span><br><span class="line">G.描述 (Description) ，简洁、准确，完整，揭示缺陷实质，记录缺陷或缺陷出现的位置</span><br><span class="line">短行之间使用自动数字序号，使用相同的字体、字号、行间距</span><br><span class="line">短行之间使用自动数字序号，使用相同的字体、字号、行间距，可以保证各条记录格式一致，做到规范专业。</span><br><span class="line">H.每一个步骤尽量只记录一个操作</span><br><span class="line">I.确认步骤完整，准确，简短</span><br><span class="line">J.根据缺陷，可选择是否进行图象捕捉</span><br></pre></td></tr></table></figure><h3 id="31-如果回归测试不通过怎么办"><a href="#31-如果回归测试不通过怎么办" class="headerlink" title="31.如果回归测试不通过怎么办?  **"></a>31.如果回归测试不通过怎么办?  **</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">说明未通过的原因,把bug打回去让开发重新修复</span><br></pre></td></tr></table></figure><h3 id="32-压力测试-负载测试-稳定性测试"><a href="#32-压力测试-负载测试-稳定性测试" class="headerlink" title="32.压力测试,负载测试,稳定性测试"></a>32.压力测试,负载测试,稳定性测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">压力测试: 在强负载下的测试,查看系统在峰值情况下是否有功能隐患,系统是否具有良好的容错能力和可恢复能力</span><br><span class="line">负载测试:通过逐渐增加系统负载,确定在满足系统的性能指标的情况下,找出系统能承受的最大负载和极限负载的测试</span><br><span class="line">稳定性测试:给定一个用户正常的业务负载,然后进行长时间的测试(1天-1周),并最终保证服务器能满足线上业务需求</span><br></pre></td></tr></table></figure><h3 id="33-项目迭代周期"><a href="#33-项目迭代周期" class="headerlink" title="33.项目迭代周期 **"></a>33.项目迭代周期 **</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一般是  2周- 1个月, 这个和新增功能的多少/难易有关</span><br><span class="line">另外 大版本更新的时候(比如1.x.x 升级到 2.0.0) , 所有功能都要重新测试</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="34-团队大小"><a href="#34-团队大小" class="headerlink" title="34.团队大小 **"></a>34.团队大小 **</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">产品经理:1,项目经理:1,ui:2,前端:2,后端:3,Android:2,ios:3,测试:2,</span><br><span class="line"></span><br><span class="line">可以说测试部门有挺多人,派到这个项目组的有2个</span><br><span class="line">自己编,合理就可以了,前端:后端:android:ios:测试 = 接近 1:1</span><br></pre></td></tr></table></figure><h3 id="35-sql语句"><a href="#35-sql语句" class="headerlink" title="35.sql语句 ***"></a>35.sql语句 ***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">-------了解---------</span><br><span class="line">显示数据库：show databases;</span><br><span class="line">数据库创建：create database 数据库名; </span><br><span class="line">数据库切换：use 数据库;</span><br><span class="line">查看当前库的所有表：show tables;</span><br><span class="line">创建表：create table 表名（ 列名 类型, 列名 类型 ）;</span><br><span class="line">查看表结构：desc 表名;</span><br><span class="line">删除表：drop table 表名；</span><br><span class="line">删除库：drop database 库名；</span><br><span class="line"></span><br><span class="line">-----掌握-------</span><br><span class="line">插入数据：insert into 表名 values(); </span><br><span class="line">删除数据：delete from 表名 where 条件;</span><br><span class="line">修改数据：update 表名 set 键=值，键=值 where 条件；（update student set name=’张三’ where name=’zhangsan’； ）</span><br><span class="line"></span><br><span class="line">-----查询  重点掌握-------</span><br><span class="line">查询所有：select * from 表名;</span><br><span class="line">条件查询：select * from 表名 where 条件; </span><br><span class="line">查询所有学生成绩，并输出效果为 姓名 语文 英语 数学： </span><br><span class="line">select name as 姓名,chinese as 语文,english as 英语,math as 数学 from student </span><br><span class="line">查询数学成绩在80-90之间的同学： </span><br><span class="line">select * from student where math between 80 and 90 </span><br><span class="line">查询数学语文英语都大于80的同学成绩 or或者 ，and 并且：</span><br><span class="line">select * from student where math&gt;80 and english&gt;80 and chinese &gt;80; </span><br><span class="line"></span><br><span class="line">模糊查询 ：_代表1个字符 ；%代表0个及其以上的字符</span><br><span class="line">查询所有姓名中包含张的同学：select * from student where name like ‘%张%’ </span><br><span class="line"></span><br><span class="line">升序：asc</span><br><span class="line">select * from 表名 order by 表中的字段 asc(MySQL中默认是升序排列，可不写) ；</span><br><span class="line">降序：desc</span><br><span class="line">select * from 表名 order by 表中的字段 desc ；</span><br><span class="line">（按照数学成绩从大到小查询：select * from student order by math desc;）</span><br><span class="line"></span><br><span class="line">分页查询：limit，</span><br><span class="line">select * from table limit m,n；其中m是指记录从m+1开始,，N代表取n条记录。</span><br><span class="line">取出第3条至第6条，4条记录 ：select * from student limit 2,4 </span><br><span class="line"></span><br><span class="line">分组查询：group by 字段</span><br><span class="line">根据性别分类，查出对应性别的人数（比如，男：20，女：19）：</span><br><span class="line">select sex，count(*) from employee group by sex;</span><br><span class="line">分组查询加条件 ：使用having，不使用where</span><br><span class="line">根据性别，查询大于18岁的人数</span><br><span class="line">select sex，count(*) from employee group by sex having age&gt;18;</span><br><span class="line"></span><br><span class="line">count 个数</span><br><span class="line">sum 总数</span><br><span class="line">avg 平均数</span><br><span class="line">max 最大值</span><br><span class="line">min 最小值</span><br><span class="line">语文的平均成绩：select avg(chinese) from student;</span><br><span class="line">统计一下班级语文最高分和最低分：</span><br><span class="line">select max(chinese) from student;</span><br><span class="line">select min(chinese) from student; </span><br><span class="line">班级里边有多少学生：select count(*)from student; </span><br><span class="line"></span><br><span class="line">子查询：一个查询的结果 作为另一个查询的条件</span><br><span class="line">先查括号里面的，查到kaifa班级的id，根据id去student表查到对应class_id的学生：</span><br><span class="line">select * from student where class_id=(select id from class where name=&quot;kaifa&quot;);</span><br><span class="line"></span><br><span class="line">内连接查询：inner join on 查询两张表，设定条件，将两张表中对应的数据查询出来</span><br><span class="line">select * from customer c inner join 、 o on c.id=o.customer_id; </span><br><span class="line"></span><br><span class="line">左外连接：left join on，将两张表对应的数据查询出来，同时**将左表自己没有关联的数据也查询出来（）</span><br><span class="line">select * from customer c left join orders o on c.id=o.customer_id;</span><br><span class="line"></span><br><span class="line">右外连接：right join on 设定条件，将两张表对应的数据查询出来，同时将右表自己没有关联的所有数据查询出来</span><br><span class="line">select * from customer c right join orders o on c.id=o.customer_id;</span><br><span class="line"></span><br><span class="line">去重：distinct</span><br><span class="line">SELECT distinct 字段1,字段2 FROM 表名</span><br></pre></td></tr></table></figure><h3 id="36-常用Linux命令"><a href="#36-常用Linux命令" class="headerlink" title="36.常用Linux命令 ***"></a>36.常用Linux命令 ***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">• 目录操作</span><br><span class="line">• cd usr/ 切换到该目录下usr目录</span><br><span class="line">• cd .. 切换到上一层目录</span><br><span class="line">• cd / 切换到系统根目录</span><br><span class="line">• mkdir 目录名称 创建目录 </span><br><span class="line">• ls 目录名称 查询该目录下所有的目录和文件 </span><br><span class="line">• ls [-a] 目录名称 查询该目录下所有的目录和文件,包含隐藏文件 </span><br><span class="line">• ls [-l] 目录名称 查询该目录下所有的目录和文件的详细信息 </span><br><span class="line">• find / -name 目录名称 查找/root下的目录(文件)   ****</span><br><span class="line">• mv 目录名称 新目录名称 修改目录名称</span><br><span class="line">• mv 目录名称 目录的新位置 剪切 </span><br><span class="line">• cp -r 目录名称 目录的目标位置 拷贝   ***</span><br><span class="line">• rm -rf 目录 强制删除目录 </span><br><span class="line"></span><br><span class="line">• 文件操作 </span><br><span class="line">• 创建空文件：touch 文件名称   ***</span><br><span class="line">• 查看文件内容：cat/more/less/tail 文件   ***</span><br><span class="line">• 动态查看/实时查看文件(日志)：tail -f 文件  ***</span><br><span class="line">• 查看文件前10行：head -n 10 文件名   ***</span><br><span class="line">• 查看文件后5行：tail -n 5 文件名    ***</span><br><span class="line">• 关键字搜索 ：grep 要搜索的字符串 要搜索的文件        ***</span><br><span class="line">• 修改文件内容：vi/vim 文件（--&gt;进入文件-----&gt;命令模式------&gt;按i进入编辑模式-----&gt;编辑文件 **-------&gt;按**Esc进入命令模式--输入：进入底行模式-**----&gt;**输入wq/q!）       ***</span><br><span class="line">• 强制删除文件：rm -rf 文件  ***</span><br><span class="line"></span><br><span class="line">• 文件的打包压缩 :tar -zcvf 文件名.tar 要打包的文件        ***</span><br><span class="line">• 文件的解压:tar -xvf 文件名.tar        ***</span><br><span class="line">• 扩充:将文件解压到固定位置 :tar -xvf 文件名.tar -C 指定解压的位置 </span><br><span class="line"></span><br><span class="line">• 查询当前所在位置 : pwd </span><br><span class="line"></span><br><span class="line">• 查看进程: ps -ef | grep 进程名称(tomcat/mysql)         ***</span><br><span class="line">• 杀死进程:kill -9 进程pid         ***</span><br><span class="line">• 查看端口号:netstat -an | grep 端口号(3306)    ***</span><br><span class="line">• 查看服务器ip : ifconfig        ***</span><br><span class="line">• 查看网络是否能正常使用 </span><br><span class="line">• ping 外网地址 查看是否能访问外网 </span><br><span class="line">• ping 内网ip 查看是否能访问内网          ***</span><br><span class="line"></span><br><span class="line">• 权限命令 :chmod 777 文件 赋权          ***</span><br><span class="line"></span><br><span class="line">• 查看cpu :top          ***</span><br><span class="line">• 查看磁盘信息 : df -h          ***</span><br><span class="line">• 查看内存信息: free          ***</span><br><span class="line">• 切换管理员账户：su，然后输入密码</span><br><span class="line">• 由root 切换到test用户：su test</span><br><span class="line"></span><br><span class="line">• 连接另一台服务器</span><br><span class="line">ssh 用户名@ip</span><br><span class="line"></span><br><span class="line">• 从一台服务器推数据到其他服务器</span><br><span class="line">scp -r  文件夹  用户名@ip:/opt/soft（目标文件夹）</span><br><span class="line"></span><br><span class="line">• 从当前服务器拉取目标服务器的数据</span><br><span class="line">scp 用户名@ip:/opt/soft/test.txt（目标文件、文件夹） /opt/sofeware(当前服务器存储地址）</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-app和web测试的相同点和不同点&quot;&gt;&lt;a href=&quot;#1-app和web测试的相同点和不同点&quot; class=&quot;headerlink&quot; title=&quot;1.app和web测试的相同点和不同点 ***&quot;&gt;&lt;/a&gt;1.app和web测试的相同点和不同点 ***&lt;/</summary>
      
    
    
    
    <category term="测试高频面试题-功能测试" scheme="http://sunjunyu.cn/categories/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="高频面试题" scheme="http://sunjunyu.cn/tags/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="测试" scheme="http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95/"/>
    
    <category term="功能测试" scheme="http://sunjunyu.cn/tags/%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>测试高频面试题-性能测试</title>
    <link href="http://sunjunyu.cn/2022/09/12/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <id>http://sunjunyu.cn/2022/09/12/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</id>
    <published>2022-09-11T16:00:00.000Z</published>
    <updated>2022-10-12T01:14:21.642Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-Jmeter做分布式压测的配置"><a href="#1-Jmeter做分布式压测的配置" class="headerlink" title="1.Jmeter做分布式压测的配置"></a>1.Jmeter做分布式压测的配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">压力机: </span><br><span class="line">在Jmeter bin/jmeter.properties中修改server.rmi.ssl.disable=false，改为true</span><br><span class="line">启动jmeter-server</span><br><span class="line">控制机:</span><br><span class="line">bin/jmeter.properties 中修改server.rmi.ssl.disable=false，改为true</span><br><span class="line">bin/jmeter.properties 中remote_hosts填入压力机的ip和端口号,多个使用&quot;,&quot;隔开</span><br><span class="line">点击运行–&gt;远程启动</span><br></pre></td></tr></table></figure><h4 id="2-性能测试怎么做的？"><a href="#2-性能测试怎么做的？" class="headerlink" title="2.性能测试怎么做的？***"></a>2.性能测试怎么做的？***</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.做性能需求分析，挑选了用户使用最频繁/核心功能的接口来做性能测试，比如：首页列表，搜索，提交订单等</span><br><span class="line">2.确定性能指标，比如：事务通过率为99.99%，90%的事务响应时间不超过3秒，错误率为0.01%，CPU和内存的使用率为80%以下，TPS。</span><br><span class="line">3.搭建性能测试环境，准备好性能测试数据。</span><br><span class="line">4.使用Jmeter开发脚本，包括:参数化，断言，关联,监听器等。</span><br><span class="line">5.设计性能测试场景，使用了分布式压测,我们这个项目做了50并发用户的单功能循环30min的基准测试，然后逐渐增加并发用户数（150/300/500...），执行1-2小时的负载测试，看系统有没有性能瓶颈；</span><br><span class="line">6.分析性能测试结果，如果有性能瓶颈，收集相关的日志提单给开发做性能调优。</span><br><span class="line">7.开发调优后，回归性能测试(可能需要来回优化回归多次)</span><br><span class="line">8.测出最大负载后 做稳定性测试（1天-7天）</span><br><span class="line">9.完成后输出负载测试和稳定性测试报告</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">怎么操作(不用背,有可能问细节的时候说)：</span><br><span class="line">1.服务器需要启动ServerAgent</span><br><span class="line">2.添加两个组件（ServerAgent组件，TPS）+监听器（聚合报告）+ 断言+关联</span><br><span class="line">3.线程数量（并发用户量），循环次数永久+调度器(设置持续时间)</span><br><span class="line">4.结果分析，整理报告</span><br></pre></td></tr></table></figure><h4 id="3-怎样分析性能测试结果？"><a href="#3-怎样分析性能测试结果？" class="headerlink" title="3.怎样分析性能测试结果？ *"></a>3.怎样分析性能测试结果？ *</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.查看聚合报告和服务器的资源使用图，检查响应时间，事务成功率，CPU，内存和IO使用率是否达到要求，如果出错率达到了总请求数的0.01%，我们会检查是什么原因导致的，修改好后，重新测试；</span><br><span class="line">2.如果出现了性能瓶颈，比如响应时间，或者CPU使用率不达标，我们会从服务器上导出日志，分析是哪个地方导致响应时间过长，如果分析不出来，就叫上开发一起讨论，确定问题后，就提单给开发修复，修复好了就进行回归测试。</span><br><span class="line"></span><br><span class="line">任何指标只要一小段时间不达标,都需要分析优化,比如cpu/内存 持续3分钟超过80%</span><br></pre></td></tr></table></figure><h4 id="4-性能测试关注的指标"><a href="#4-性能测试关注的指标" class="headerlink" title="4.性能测试关注的指标 ***"></a>4.性能测试关注的指标 ***</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">响应时间，并发用户数，吞吐量，TPS，错误率，资源使用率（CPU，内存，磁盘IO，网络）</span><br><span class="line"></span><br><span class="line">TPS和QPS区别：</span><br><span class="line">QPS：服务器每秒处理的请求数量</span><br><span class="line">TPS：服务器每秒处理的事务数量，1个事务包含1个或者多个请求</span><br></pre></td></tr></table></figure><h4 id="5-你们项目最佳的并发用户数是多少？"><a href="#5-你们项目最佳的并发用户数是多少？" class="headerlink" title="5.你们项目最佳的并发用户数是多少？*"></a>5.你们项目最佳的并发用户数是多少？*</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们当时做到1500（500-1500）个并发用户的时候，查询功能的响应时间超过了性能指标2秒多，吞吐量开始变小，也就是说吞吐量已经达到峰值，开始掉头向下了。</span><br></pre></td></tr></table></figure><h4 id="6-如何判断网络是否存在瓶颈？"><a href="#6-如何判断网络是否存在瓶颈？" class="headerlink" title="6.如何判断网络是否存在瓶颈？*"></a>6.如何判断网络是否存在瓶颈？*</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在性能测试结束之后，我们会根据性能测试的结果，查看在整个性能测试过程中，网络的吞吐量是多少，如果网络的吞吐量占到了服务器的70%以上，我们就认为网络存在瓶颈，通常会增加带宽或者压缩传输数据。</span><br></pre></td></tr></table></figure><h4 id="7-如何判断响应时间不达标"><a href="#7-如何判断响应时间不达标" class="headerlink" title="7.如何判断响应时间不达标 *"></a>7.如何判断响应时间不达标 *</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们90%响应时间要求是3s，响应时间不达标的话，我们会根据性能测试结果先检查看下是否是服务器带宽存在问题，如果带宽存在瓶颈，则会考虑增加带宽或者压缩传输数据，如果带宽没有问题的话，我们会从服务器上导出日志，开发一起讨论分析是哪个地方导致响应时间过长，确定问题后，就提单给开发修复，修复好了就进行回归测试。</span><br></pre></td></tr></table></figure><h4 id="8-如何判断CPU使用率不达标"><a href="#8-如何判断CPU使用率不达标" class="headerlink" title="8.如何判断CPU使用率不达标 *"></a>8.如何判断CPU使用率不达标 *</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们CPU使用率要求不超过80%，CPU使用率不达标，我们会从服务器上导出日志，分析是哪个地方导致CPU使用率不达标，如果分析不出来，就叫上开发一起讨论，确定问题后，就提单给开发修复，修复好了就进行回归测试。</span><br></pre></td></tr></table></figure><h4 id="9-日活，月活，下载量-不用背-了解即可"><a href="#9-日活，月活，下载量-不用背-了解即可" class="headerlink" title="9.日活，月活，下载量 (不用背,了解即可)"></a>9.日活，月活，下载量 (不用背,了解即可)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">日活（DAU，daily active user）：日活跃用户</span><br><span class="line">月活（MAU，month active user）：月活跃用户</span><br><span class="line">下载量：app的下载次数</span><br><span class="line">下载量&gt;=月活&gt;=日活</span><br><span class="line"></span><br><span class="line">UV（Unique visitor）</span><br><span class="line">是指通过互联网访问、浏览这个网页的自然人。访问您网站的一台电脑客户端为一个访客。00:00-24:00内相同的客户端只被计算一次。一天内同个访客多次访问仅计算一个UV。</span><br><span class="line"></span><br><span class="line">PV（Page View）</span><br><span class="line">即页面浏览量或点击量，用户每1次对网站中的每个网页访问均被记录1个PV。用户对同一页面的多次访问，访问量累计，用以衡量网站用户访问的网页数量。</span><br></pre></td></tr></table></figure><h4 id="10-服务器怎么优化-x2F-调优"><a href="#10-服务器怎么优化-x2F-调优" class="headerlink" title="10.服务器怎么优化&#x2F;调优*"></a>10.服务器怎么优化&#x2F;调优*</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">分为软件优化和硬件优化</span><br><span class="line">软件优化：架构重构，算法优化，编译优化，代码优化</span><br><span class="line">硬件优化：增加cpu，内存条，磁盘，提升宽带，分布式，负载均衡</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-Jmeter做分布式压测的配置&quot;&gt;&lt;a href=&quot;#1-Jmeter做分布式压测的配置&quot; class=&quot;headerlink&quot; title=&quot;1.Jmeter做分布式压测的配置&quot;&gt;&lt;/a&gt;1.Jmeter做分布式压测的配置&lt;/h4&gt;&lt;figure class</summary>
      
    
    
    
    <category term="测试高频面试题-性能测试" scheme="http://sunjunyu.cn/categories/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="高频面试题" scheme="http://sunjunyu.cn/tags/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="测试" scheme="http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95/"/>
    
    <category term="性能测试" scheme="http://sunjunyu.cn/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>测试高频面试题-接口测试</title>
    <link href="http://sunjunyu.cn/2022/09/12/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"/>
    <id>http://sunjunyu.cn/2022/09/12/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/</id>
    <published>2022-09-11T16:00:00.000Z</published>
    <updated>2022-10-12T01:14:34.753Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-网络基础"><a href="#一-网络基础" class="headerlink" title="一.网络基础"></a>一.网络基础</h2><h3 id="1-http和https的区别？"><a href="#1-http和https的区别？" class="headerlink" title="1.http和https的区别？*"></a>1.http和https的区别？*</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">简单来说，HTTPS协议是由SSL/TLS+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比http协议安 全。区别主要如下： </span><br><span class="line">​1、https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。 </span><br><span class="line">​2、http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。 </span><br><span class="line">​3、http和https使用的是完全不同的连接方式，用的默认端口也不一样，前者是80，后者是443。 </span><br><span class="line">​4、http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证 </span><br><span class="line">的网络协议，比http协议安全。</span><br></pre></td></tr></table></figure><h3 id="2-get和post请求的区别？"><a href="#2-get和post请求的区别？" class="headerlink" title="2.get和post请求的区别？*"></a>2.get和post请求的区别？*</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- GET后退按钮/刷新无害，POST数据会被重新提交（浏览器应该告知用户数据会被重新提交）。 </span><br><span class="line">- GET书签可收藏，POST为书签不可收藏。 </span><br><span class="line">- GET能被缓存，POST不能缓存 。</span><br><span class="line">- GET历史参数保留在浏览器历史中。POST参数不会保存在浏览器历史中 GET对数据长度有限制，当发送数据时，GET 方法向 URL 添加数据；URL 的长度是受限制的（URL 的最大 长度是 2048 个字符）。POST无限制。 </span><br><span class="line">- 与 POST 相比，GET 的安全性较差，因为所发送的数据是 URL 的一部分。在发送密码或其他敏感信息时绝 不要使用 GET ！ </span><br><span class="line">- POST 比 GET 更安全，因为参数不会被保存在浏览器历史或 web 服务器日志中。 </span><br><span class="line">- GET的数据在 URL 中对所有人都是可见的。POST的数据不会显示在 URL 中。</span><br></pre></td></tr></table></figure><h3 id="3-请求方式有哪些？"><a href="#3-请求方式有哪些？" class="headerlink" title="3.请求方式有哪些？"></a>3.请求方式有哪些？</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get，post，put，delete，</span><br></pre></td></tr></table></figure><h3 id="4-常见的状态码有哪些？"><a href="#4-常见的状态码有哪些？" class="headerlink" title="4.常见的状态码有哪些？***"></a>4.常见的状态码有哪些？***</h3><p><img src="https://sunjunyu.cn/images/%E7%8A%B6%E6%80%81%E7%A0%81.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">100：这个状态码是告诉客户端应该继续发送请求，这个临时响应是用来通知客户端的，部分的请求服务器已经接受，但是客户端应继续发送求请求的剩余部分，如果请求已经完成，就忽略这个响应，而且服务器会在请求完成后向客户发送一个最终的结果</span><br><span class="line">200：这个是最常见的http状态码，表示服务器已经成功接受请求，并将返回客户端所请求的最终结果</span><br><span class="line">202：表示服务器已经接受了请求，但是还没有处理，而且这个请求最终会不会处理还不确定</span><br><span class="line">204：服务器成功处理了请求，但没有返回任何实体内容 ，可能会返回新的头部元信息</span><br><span class="line">301:永久重定向，资源已永久分配新URI </span><br><span class="line">302:临时重定向，资源已临时分配新URI</span><br><span class="line">400:Bad Request 请求报文语法错误或参数错误 </span><br><span class="line">401:Unauthorized 需要通过HTTP认证，或认证失败 </span><br><span class="line">403:Forbidden 请求资源被拒绝 </span><br><span class="line">404:Not Found,户端请求的资源没有找到</span><br><span class="line">500：服务器遇到未知的错误，导致无法完成客户端当前的请求</span><br><span class="line">503:服务器超负载或停机维护</span><br></pre></td></tr></table></figure><h3 id="5-http请求的组成？"><a href="#5-http请求的组成？" class="headerlink" title="5.http请求的组成？"></a>5.http请求的组成？</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请求行：请求的第一行是“方法URI协议/版本”例如：GET/sample.jsp HTTP/1.1 </span><br><span class="line">请求头（消息报头）：包含许多有关的客户端环境和请求正文的有用信息。例如，请求头可以声明浏览器所用的语言，请求正 文的长度等。</span><br><span class="line">请求正文：请求头和请求正文之间是一个空行，这个行非常重要，它表示请求头已经结束，接下来的是请求正文。请求正 文中可以包含客户提交的查询字符串信息：username=jinqiao&amp;password=1234 </span><br></pre></td></tr></table></figure><h3 id="6-http响应的组成"><a href="#6-http响应的组成" class="headerlink" title="6.http响应的组成"></a>6.http响应的组成</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">状态行：由http版本协议，状态码，状态码描述组成，如 HTTP/1.1 200 OK </span><br><span class="line">响应头（消息报头）：服务器传递给客户端用于说明服务器的一些信息，以及将来继续访问该资源时的策略</span><br><span class="line">响应正文（响应体）：是服务端返回给客户端的HTML文本内容，或者其他格式的数据，比如：视频流、图片或者音频数据。</span><br></pre></td></tr></table></figure><h3 id="7-cookie，session，token区别"><a href="#7-cookie，session，token区别" class="headerlink" title="7.cookie，session，token区别*"></a>7.cookie，session，token区别*</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">token</span><br><span class="line">令牌，是用户身份的验证方式。</span><br><span class="line">最简单的token组成:uid(用户唯一的身份标识)、time（当前时间的时间戳）、sign（签名）。</span><br><span class="line"></span><br><span class="line">session</span><br><span class="line">会话，代表服务器与浏览器的一次会话过程，这个过程是连续的，也可以时断时续。</span><br><span class="line">session因为请求（request对象）而产生；session是一个容器，可以存放会话过程中的任何对象；session的创建与使用总是在服务端，浏览器从来都没有得到过session对象；session是一种http存储机制，目的是为武装的http提供持久机制。</span><br><span class="line"></span><br><span class="line">cookie</span><br><span class="line">储存在用户本地终端上的数据，服务器生成，发送给浏览器，下次请求统一网站给服务器。cookie中存放着一个sessionID，请求时会发送这个ID；</span><br><span class="line"></span><br><span class="line">cookie与session区别</span><br><span class="line">cookie数据存放在客户端上，session数据放在服务器上；</span><br><span class="line">cookie不是很安全，且保存数据有限；</span><br><span class="line">session一定时间内保存在服务器上,当访问增多，占用服务器内存。</span><br><span class="line"></span><br><span class="line">session与token</span><br><span class="line">作为身份认证，token安全性比session好；Session 认证只是简单的把User 信息存储到Session 里，因为SID 的不可预测性，暂且认为是安全的。这是一种认证手段。 而Token ，如果指的是OAuth Token 或类似的机制的话，提供的是 认证 和 授权 ，认证是针对用户，授权是针对App 。其目的是让 某App有权利访问 某用户 的信息。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">token与cookie</span><br><span class="line">Cookie是不允许垮域访问的，但是token是支持的， 前提是传输的用户认证信息通过HTTP头传输；token就是令牌，比如你授权（登录）一个程序时，他就是个依据，判断你是否已经授权该软件；cookie就是写在客户端的一个txt文件，里面包括你登录信息之类的，这样你下次在登录某个网站，就会自动调用cookie自动登录用户名；session和cookie差不多，只是session是写在服务器端的文件，也需要在客户端写入cookie文件，但是文件里是你的浏览器编号.Session的状态是存储在服务器端，客户端只有session id；而Token的状态是存储在客户端。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">上面的供理解，下面需要记忆</span><br><span class="line"></span><br><span class="line">它们三个都是用来验证用户身份的（鉴权）</span><br><span class="line"></span><br><span class="line">token令牌，是用户身份的验证方式（登录后获取，可以获取用户相关的数据，一般都是app在用），存储在用户端。</span><br><span class="line">session会话，因为请求而产生；session是一个容器，可以存放会话过程中的任何对象，存储在服务器，当访问增多，占用服务器内存，</span><br><span class="line">cookie，储存在用户本地终端上的数据，服务器生成，发送给浏览器，下次请求统一网站给服务器。cookie中存放着一个sessionID，请求时会发送这个ID；</span><br><span class="line"></span><br><span class="line">token安全性比session好，Session 认证只是简单的把User 信息存储到Session 里，而Token ，如果指的是OAuth Token 或类似的机制的话，提供的是 认证 和 授权 ，认证是针对用户，授权是针对App</span><br></pre></td></tr></table></figure><h2 id="二-抓包"><a href="#二-抓包" class="headerlink" title="二.抓包"></a>二.抓包</h2><h3 id="1-说一下抓包"><a href="#1-说一下抓包" class="headerlink" title="1. 说一下抓包 ***"></a>1. 说一下抓包 ***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">抓包：抓包是将网络传输发送与接收的数据包进行截获、重发、编辑、转存等操作，也用来检查网络安全，常见的抓包工具：Charlers，Fiddler,WireShark...</span><br><span class="line">作用：</span><br><span class="line">1.定位前后端问题：</span><br><span class="line">app:</span><br><span class="line">        通过抓包看网络请求</span><br><span class="line">web:</span><br><span class="line">浏览器按f12, 点到network,在下面找到对应的网络请求</span><br><span class="line"></span><br><span class="line">看url还有参数，如果url和参数不对，前端的问题，如果没有问题</span><br><span class="line">    看响应数据，如果响应数据有问题的，那么就是后端问题，如果数据没有问题</span><br><span class="line">    就是前端问题</span><br><span class="line">2.模拟404</span><br><span class="line">3.模拟弱网</span><br><span class="line">4.mock测试</span><br></pre></td></tr></table></figure><h3 id="2-怎么定位前后端问题"><a href="#2-怎么定位前后端问题" class="headerlink" title="2. 怎么定位前后端问题 *********"></a>2. 怎么定位前后端问题 *********</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">app:</span><br><span class="line">通过抓包看网络请求</span><br><span class="line">web:</span><br><span class="line">浏览器按f12, 点到network,在下面找到对应的网络请求</span><br><span class="line"></span><br><span class="line">看url还有参数，如果url和参数不对，前端的问题，如果没有问题</span><br><span class="line">看响应数据，如果响应数据有问题的，那么就是后端问题，如果数据没有问题</span><br><span class="line">就是前端问题</span><br></pre></td></tr></table></figure><h3 id="3-抓包的时候遇到乱码没"><a href="#3-抓包的时候遇到乱码没" class="headerlink" title="3. 抓包的时候遇到乱码没 *"></a>3. 抓包的时候遇到乱码没 *</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">有的</span><br><span class="line">1.没有信任证书导致的,因为https是加密传输的</span><br><span class="line">2.数据本身还做过加密，除非拿到密钥，否则没办法解密</span><br></pre></td></tr></table></figure><h3 id="4-mock测试，rewrite用过没有，map-remote-x2F-local用过没有"><a href="#4-mock测试，rewrite用过没有，map-remote-x2F-local用过没有" class="headerlink" title="4. mock测试，rewrite用过没有，map remote&#x2F;local用过没有 **"></a>4. mock测试，rewrite用过没有，map remote&#x2F;local用过没有 **</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mock测试：模拟我们想要的请求和测试数据返回</span><br><span class="line"></span><br><span class="line">charles</span><br><span class="line">断点：断点可用修改请求数据和响应数据，一般用来临时修改</span><br><span class="line">map：</span><br><span class="line">本质上都是重定向</span><br><span class="line">map local（拿本地文件替换服务器返回的数据）   </span><br><span class="line"> map remote（拿另外一个链接返回的数据替换原来的数据） </span><br><span class="line">rewrite：通过正则匹配的方式，修改请求/响应数据</span><br></pre></td></tr></table></figure><h3 id="5-具体操作-不用背"><a href="#5-具体操作-不用背" class="headerlink" title="5.具体操作(不用背)"></a>5.具体操作(不用背)</h3><h4 id="5-1怎么信任证书"><a href="#5-1怎么信任证书" class="headerlink" title="5.1怎么信任证书"></a>5.1怎么信任证书</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">把抓包工具的证书导出，在对应的浏览器/手机中信任</span><br><span class="line"></span><br><span class="line">charles具体操作(不问不用说):</span><br><span class="line">安装:help --&gt; ssl proxying--&gt; install charles root certificate</span><br><span class="line">导出:help--&gt;ssl proxying--&gt;save Charles root certificate，选择.cer格式的证书</span><br><span class="line">信任:chrome浏览器：设置 → 管理证书（安全） → 导入</span><br></pre></td></tr></table></figure><h4 id="5-2移动端怎么抓包"><a href="#5-2移动端怎么抓包" class="headerlink" title="5.2移动端怎么抓包"></a>5.2移动端怎么抓包</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.pc和手机在同一个wifi下</span><br><span class="line">2.手机需要设置代理，ip和端口号</span><br><span class="line">3.信任证书</span><br><span class="line">4.开启app进行抓包</span><br></pre></td></tr></table></figure><h4 id="5-3map-local-使用步骤"><a href="#5-3map-local-使用步骤" class="headerlink" title="5.3map local 使用步骤"></a>5.3map local 使用步骤</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tools--Map Local --&gt; 指定本地文件</span><br></pre></td></tr></table></figure><h4 id="5-4map-remote使用步骤"><a href="#5-4map-remote使用步骤" class="headerlink" title="5.4map remote使用步骤"></a>5.4map remote使用步骤</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tools--map remote --&gt;指定重定向的链接</span><br></pre></td></tr></table></figure><h4 id="5-5断点修改请求参数"><a href="#5-5断点修改请求参数" class="headerlink" title="5.5断点修改请求参数"></a>5.5断点修改请求参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选中链接--&gt;右键 --&gt;选择“BreakPoints” --&gt;刷新网页 --&gt;Edit Request,修改请求信息--&gt;Execute</span><br></pre></td></tr></table></figure><h4 id="5-6断点修改响应数据"><a href="#5-6断点修改响应数据" class="headerlink" title="5.6断点修改响应数据"></a>5.6断点修改响应数据</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选中链接--&gt;右键 --&gt;选择“BreakPoints” --&gt;刷新网页 --&gt;Edit Response”,修改响应数据--&gt;Execute</span><br></pre></td></tr></table></figure><h4 id="5-7-rewrite"><a href="#5-7-rewrite" class="headerlink" title="5.7 rewrite"></a>5.7 rewrite</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tools-Rewrite --&gt;添加对应的链接,规则</span><br></pre></td></tr></table></figure><h4 id="5-8弱网-使用步骤"><a href="#5-8弱网-使用步骤" class="headerlink" title="5.8弱网 使用步骤"></a>5.8弱网 使用步骤</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Proxy--&gt;Throttling Settings(节流阀设置) --&gt;可以选择3G,4G,56kbps,256kbps....</span><br></pre></td></tr></table></figure><h4 id="5-9模拟404-使用步骤"><a href="#5-9模拟404-使用步骤" class="headerlink" title="5.9模拟404 使用步骤"></a>5.9模拟404 使用步骤</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tools——&gt;blocklist--&gt; 添加网址</span><br></pre></td></tr></table></figure><h2 id="三-接口测试"><a href="#三-接口测试" class="headerlink" title="三.接口测试"></a>三.接口测试</h2><h3 id="3-1-说一下Postman（是什么，有什么用，使用过它的什么功能）"><a href="#3-1-说一下Postman（是什么，有什么用，使用过它的什么功能）" class="headerlink" title="3.1 说一下Postman（是什么，有什么用，使用过它的什么功能）***"></a><strong>3.1 说一下Postman（是什么，有什么用，使用过它的什么功能）</strong>***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Postman是一款强大的http调试工具，我们一般使用它来做接口测试</span><br><span class="line">常用的功能：</span><br><span class="line">1. 创建测试和生产环境，添加对应的环境变量，比如baseUrl，</span><br><span class="line">2. 创建接口集，里面添加项目的接口</span><br><span class="line">3. 添加接口，可以发起get/post/delete/put等请求</span><br><span class="line">4. Get请求查询参数放入Params中，post请求参数放入Body中，可以是普通键值对，json/html/xml/文件，请求头都是放入Headers里面</span><br><span class="line">5. Pre-request Script预处理脚本，在发起网络请求之前会调用的js代码，可以在里面获取一些动态的参数，比如时间戳，随机数等</span><br><span class="line">6. Tests脚本，在发起网络成功拿到响应之后调用，可以在里面添加断言，判断响应数据是否正确</span><br><span class="line">7. Mock测试，模拟服务器返回自己想要的测试数据</span><br><span class="line">8. 参数化：环境变量，全局变量，csv文件</span><br></pre></td></tr></table></figure><h4 id="参数化-–不需要记"><a href="#参数化-–不需要记" class="headerlink" title="参数化 –不需要记"></a>参数化 –不需要记</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.写一个csv/txt文档，把测试数据放入</span><br><span class="line">2.建接口集，里面写接口</span><br><span class="line">3.接口传递的参数不能写死，使用关联的方式（&#123;&#123;key&#125;&#125;），key应该是csv文件表头名字</span><br><span class="line">4.双击接口集，点击右上角的run，打开Runner</span><br><span class="line">5.配置参数</span><br><span class="line">Iterations（迭代次数，测试数据有几个，就写几）</span><br><span class="line">Delay: 延迟对应的事件发起请求</span><br><span class="line">data：选择csv文件</span><br><span class="line">Data file type： 选择文件的类型（text/csv）</span><br><span class="line">6.点击运行</span><br></pre></td></tr></table></figure><h3 id="3-2-如果没有接口文档，怎么办？"><a href="#3-2-如果没有接口文档，怎么办？" class="headerlink" title="3.2 如果没有接口文档，怎么办？ *"></a>3.2 如果没有接口文档，怎么办？ *</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.可以找前端开发要关于 接口的类</span><br><span class="line">2.抓包获取</span><br></pre></td></tr></table></figure><h3 id="3-3-接口case包含哪些内容？"><a href="#3-3-接口case包含哪些内容？" class="headerlink" title="3.3 接口case包含哪些内容？**"></a>3.3 接口case包含哪些内容？**</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用例标题，优先级，所属模块，资源路径，请求参数，请求方式，测试数据，预期结果（应该有结果），实际结果</span><br></pre></td></tr></table></figure><h3 id="3-4-有依赖关系-x2F-关联的接口怎么测试"><a href="#3-4-有依赖关系-x2F-关联的接口怎么测试" class="headerlink" title="3.4 有依赖关系&#x2F;关联的接口怎么测试 *********"></a>3.4 有依赖关系&#x2F;关联的接口怎么测试 *********</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">比如B接口的请求参数是A接口的响应数据</span><br><span class="line">我们需要请求A接口，拿到数据后，把需要的数据提取出来，放入B接口进行请求</span><br><span class="line"></span><br><span class="line">具体实现的话使用我们常用的那些工具都可以，像postman，Jmeter，python脚本都行</span><br><span class="line">1.postman：请求A接口，在Tests脚本里面写js代码，将数据解析后提取想要的数据，存为全局/环境变量，在B接口请求的时候关联使用（&#123;&#123;id&#125;&#125;）</span><br><span class="line">2.Jmeter：请求A接口，给A接口添加后处理器--正则提取器，通过正则的方式，将数据提取出来变成用户变量，在B接口中关联使用（$&#123;id&#125;）</span><br><span class="line">3.python: 使用requests请求A接口，拿到响应后解析成json，然后取出想要的数据，进行B接口的请求，将取出的参数塞入即可</span><br></pre></td></tr></table></figure><h3 id="3-5-接口测试的流程"><a href="#3-5-接口测试的流程" class="headerlink" title="3.5 接口测试的流程 ***"></a>3.5 接口测试的流程 ***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.找后端拿到接口文档</span><br><span class="line">2.写测试计划</span><br><span class="line">3.分析接口（接口间业务关系，关联接口的数据，请求参数，请求头(token，os，版本),响应数据（数据格式，字段，错误分析））</span><br><span class="line">4.写用例，评审用例</span><br><span class="line">5.执行用例去测试；自动化：根据用例写脚本（requests+pytest/unittest），手动：postman/jmeter测试</span><br><span class="line">6.结果分析</span><br><span class="line">7.bug提交</span><br><span class="line">8.修复之后  回归测试</span><br></pre></td></tr></table></figure><h3 id="3-6-接口测试测什么-x2F-关注什么-x2F-验证什么-x2F-测试点"><a href="#3-6-接口测试测什么-x2F-关注什么-x2F-验证什么-x2F-测试点" class="headerlink" title="3.6 接口测试测什么&#x2F;关注什么&#x2F;验证什么&#x2F;测试点 ***"></a>3.6 接口测试测什么&#x2F;关注什么&#x2F;验证什么&#x2F;测试点 ***</h3><p><img src="https://sunjunyu.cn/images/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E6%80%BB%E7%BB%93.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一-网络基础&quot;&gt;&lt;a href=&quot;#一-网络基础&quot; class=&quot;headerlink&quot; title=&quot;一.网络基础&quot;&gt;&lt;/a&gt;一.网络基础&lt;/h2&gt;&lt;h3 id=&quot;1-http和https的区别？&quot;&gt;&lt;a href=&quot;#1-http和https的区别？&quot; cla</summary>
      
    
    
    
    <category term="测试高频面试题-接口测试" scheme="http://sunjunyu.cn/categories/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="接口测试" scheme="http://sunjunyu.cn/tags/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"/>
    
    <category term="高频面试题" scheme="http://sunjunyu.cn/tags/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="测试" scheme="http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>测试高频面试题-自动化测试</title>
    <link href="http://sunjunyu.cn/2022/09/12/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    <id>http://sunjunyu.cn/2022/09/12/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/</id>
    <published>2022-09-11T16:00:00.000Z</published>
    <updated>2022-10-12T01:14:03.329Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Python-及自动化基础"><a href="#Python-及自动化基础" class="headerlink" title="Python 及自动化基础"></a>Python 及自动化基础</h2><h3 id="1-您知道Python中的可变不可变数据类型有哪些？"><a href="#1-您知道Python中的可变不可变数据类型有哪些？" class="headerlink" title="1.您知道Python中的可变不可变数据类型有哪些？ **"></a>1.您知道Python中的可变不可变数据类型有哪些？ **</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">可变数据类型有列表(list)、集合(set)、字典(dict)</span><br><span class="line">不可变数据类型有数字(number)、字符串(str)、元祖(tuple)、不可变集合(frozenset)</span><br></pre></td></tr></table></figure><h3 id="2-面向对象三要素及其意义吗？"><a href="#2-面向对象三要素及其意义吗？" class="headerlink" title="2.面向对象三要素及其意义吗？********"></a>2.面向对象三要素及其意义吗？********</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">面向对象是相对于面向过程来讲的，面向过程是 所有的事情都得自己去做, 而面向对象是把相关的数据和方法组织为一个整体来看待，完成任务只需要找有相关功能的对象即可。</span><br><span class="line">咱们整个世界就是面向对象的世界,比如我想告诉你一个消息,不需要千里迢迢的跑过去亲口对你说,只需要通过电话/微信就可以,电话/微信就是具有通话功能的对象,我只需要会用它就可以,不需要知道它的实现原理</span><br><span class="line"></span><br><span class="line">面向对象三要素是：封装、继承、多态</span><br><span class="line">封装：将有共同的属性和方法封装到同一个类下面，对外只提供访问的的接口,不提提供实现细节</span><br><span class="line">继承：子类继承父类，可以具备父类已有的非私有属性和方法，解决代码重用</span><br><span class="line">多态：多态的前提是继承, 指的是基类的同一个方法在不同的派生类中有着不同的功能,比如猫和狗都继承动物类,但是猫爱好吃鱼,狗爱好吃骨头,这就是多态</span><br></pre></td></tr></table></figure><h3 id="3-列举Python的魔法方法"><a href="#3-列举Python的魔法方法" class="headerlink" title="3.列举Python的魔法方法 *"></a>3.列举Python的魔法方法 *</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">主要魔法方法</span><br><span class="line">__new__：类的构造器，创建初始化后的基本实例对象，相当于是类的骨架子</span><br><span class="line">__init__：类的数据初始化方法，用来给实例话对象添加属性的</span><br><span class="line">__del__：类的析枸器(这是C/C++的叫法)，专门用来在实例销毁前调用，释放资源的</span><br><span class="line">__call__：可以将实例对象直接声明为一个方法调用，方便调用过程，保护内部实现</span><br><span class="line"></span><br><span class="line">相关属性获取方法</span><br><span class="line">__getattr__：获取某个属性时，比如对于字典的key值获取或者列表的索引获取</span><br><span class="line">__setattr__：设置某个属性时，比如设置某个索引对应的值，或者字典对应key的value更新创建</span><br><span class="line"></span><br><span class="line">比较操作符</span><br><span class="line">__lt__、__le__：小于判断、小于等于</span><br><span class="line">__eq__、__ne__：等于、不等于判断时，用的就是这个方法</span><br><span class="line">__gt__、__ge__：大于判断、大于等于判断</span><br></pre></td></tr></table></figure><h3 id="4-列表，元组，字典区别"><a href="#4-列表，元组，字典区别" class="headerlink" title="4.列表，元组，字典区别 ***"></a>4.列表，元组，字典区别 ***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python中3种内建的数据结构:列表、元组和字典</span><br><span class="line">列表：[]表示，可变的数据类型，即这种类型是可以被改变的，并且列表是可以嵌套的</span><br><span class="line">元组：（）表示，元组是不可变的，可以嵌套</span><br><span class="line">字典：&#123;&#125;表示，存储键值对的，键要求唯一，字典中的键/值对是没有顺序的</span><br></pre></td></tr></table></figure><h3 id="5-unittest怎么使用"><a href="#5-unittest怎么使用" class="headerlink" title="5.unittest怎么使用"></a>5.unittest怎么使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.写一个py文件，导入unittest</span><br><span class="line">2.写一个类，继承unittest.TestCase</span><br><span class="line">3.复写setup（准备测试环境），teardown（还原测试环境），写以test打头的方法，里面可以通过断言去验证一些逻辑</span><br><span class="line">4.另一个py文件中，使用测试套件（TestSuite），把想要执行的用例添加进来</span><br><span class="line">5.使用TextTestRunner/HtmlTestRunner，运行测试套件</span><br></pre></td></tr></table></figure><h3 id="6-怎样导包"><a href="#6-怎样导包" class="headerlink" title="6.怎样导包"></a>6.怎样导包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.建议在条件允许的情况下，使用绝对路径导入，而不是相对路径。</span><br><span class="line">比如有两个包，w/a/c.py,在f包下有个g.py,想要在g.py中使用c.py,可以这么导包 import w.a.c 或者 from w.a import c</span><br><span class="line">2.系统的模块，像time，os，还有自己下载的模块，比如requests，在sys.path（sys.path是python的搜索模块的路径集）中是有路径的，所以可以直接import</span><br><span class="line">3.如果想把另一个模块中的py文件导入当前项目，可以将另一个模块的路径添加到sys.path中，然后导包，比如，在C:\\tool\\myTool\\calc.py,可以这样导包</span><br><span class="line">import sys</span><br><span class="line">sys.path.append(“C:\\tool\\myTool\\”)</span><br><span class="line">import calc</span><br></pre></td></tr></table></figure><h3 id="7-八大定位"><a href="#7-八大定位" class="headerlink" title="7. 八大定位 ***"></a>7. 八大定位 ***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">id：</span><br><span class="line">className：</span><br><span class="line">name：</span><br><span class="line">tagName：</span><br><span class="line">xpath：</span><br><span class="line">css选择器：</span><br><span class="line">link_text:</span><br><span class="line">partial_link_text:</span><br><span class="line"></span><br><span class="line">使用的api是</span><br><span class="line">find_element(by,value)</span><br></pre></td></tr></table></figure><h3 id="8-常用的selenium-api方法及作用"><a href="#8-常用的selenium-api方法及作用" class="headerlink" title="8.常用的selenium api方法及作用*"></a>8.常用的selenium api方法及作用*</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">FixFox/Chrome（）：获取浏览器驱动</span><br><span class="line">get（）：请求某个网址</span><br><span class="line">find_element():查找元素</span><br><span class="line">send_keys():给文本框输入内容</span><br><span class="line">click（）：点击</span><br><span class="line">move_to_element()（ActionsChain中的方法）: 把鼠标移动到元素上</span><br><span class="line">driver.execute_script(&#x27;window.scrollTo(0,0)&#x27;):执行js代码 (这个是滑动到顶部)</span><br><span class="line">element.get_attribute(属性的键)：获取属性的值</span><br><span class="line">quite（）：退出浏览器</span><br><span class="line">close（）：关闭当前窗口</span><br><span class="line">switch_to.frame():切换frame</span><br><span class="line">switch_to.window:切换window</span><br><span class="line">clear():清楚输入框内容</span><br><span class="line">text:获取文本</span><br></pre></td></tr></table></figure><h3 id="9-selenium如何切换窗口-x2F-frame-x2F-警告框"><a href="#9-selenium如何切换窗口-x2F-frame-x2F-警告框" class="headerlink" title="9.selenium如何切换窗口&#x2F;frame&#x2F;警告框"></a>9.selenium如何切换窗口&#x2F;frame&#x2F;警告框</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">获取当前窗口的句柄： handles = driver.window_handlers</span><br><span class="line">切换窗口：driver.switch_to.window(handles[n])</span><br><span class="line">切换frame：driver.switch_to.frame(value)</span><br><span class="line">切换alert：driver.switch_to.alert</span><br></pre></td></tr></table></figure><h3 id="10-常用的python模块"><a href="#10-常用的python模块" class="headerlink" title="10.常用的python模块*"></a>10.常用的python模块*</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">单元测试模块：unittest，pytest</span><br><span class="line">ui自动化模块：selenium，appium</span><br><span class="line">时间模块：time</span><br><span class="line">数学计算模块：math</span><br><span class="line">执行系统命令模块：os</span><br><span class="line">随机数模块：random</span><br><span class="line">mysql数据库：pymsql</span><br><span class="line">string模块：str</span><br><span class="line">网络请求:requests</span><br></pre></td></tr></table></figure><h3 id="11-浏览器等待的三种方式"><a href="#11-浏览器等待的三种方式" class="headerlink" title="11.浏览器等待的三种方式*"></a>11.浏览器等待的三种方式*</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">固定等待：time.sleep(seconds)</span><br><span class="line">显示等待：WebDriverWait（）</span><br><span class="line">隐式等待：driver.implicitly_wait()</span><br></pre></td></tr></table></figure><h3 id="12-什么是po模型及它的优点"><a href="#12-什么是po模型及它的优点" class="headerlink" title="12.什么是po模型及它的优点"></a>12.什么是po模型及它的优点</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PageObject，将页面的元素定位和元素行为封装成一个basepage类，其他page继承basepage，一个页面对应一个类</span><br><span class="line">PageObject 设计模式核心思想是：测试对象（页面）和测试用例（页面操作+测试数据）分离；调用所需页面对象中的行为，组成测试用例。在用例中，是看不到元素定位和元素操作的。</span><br><span class="line">优点：</span><br><span class="line">1. PO提供了一种业务流程与页面元素操作分离的模式，这使得测试代码变得更加清晰</span><br><span class="line">2. 页面对象与用例分离，使得我们更好的复用对象</span><br><span class="line">3. 可复用的页面方法代码会变得更加优化</span><br><span class="line">4. 更加有效的命令方式使得我们更加清晰的知道方法所操作的UI元素</span><br></pre></td></tr></table></figure><h3 id="13-PO模型的核心要素"><a href="#13-PO模型的核心要素" class="headerlink" title="13.PO模型的核心要素"></a>13.PO模型的核心要素</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 在PO模式中抽离封装一个BasePage类，该基类应该拥有一个webdriver实例的属性</span><br><span class="line">2. 每一个page都继承BasePage，通过driver来管理本page中元素，将page中的操作封装成一个个方法</span><br><span class="line">3. TestCase继承unittest.Testcase类，并依赖page类，从而实现相应的测试步骤</span><br></pre></td></tr></table></figure><h3 id="14-pymysql"><a href="#14-pymysql" class="headerlink" title="14.pymysql  **"></a>14.pymysql  **</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">import pymysql</span><br><span class="line"># 连接数据库</span><br><span class="line">con =pymysql.connect(host=&quot;127.0.0.1&quot;,</span><br><span class="line">                user=&quot;root&quot;,</span><br><span class="line">                password=&quot;123456&quot;,</span><br><span class="line">                database=&quot;h2106&quot;,</span><br><span class="line">                port=3306)</span><br><span class="line"># 拿到游标 ，查询结果是列表嵌套 字典</span><br><span class="line">cursor = con.cursor(cursor=pymysql.cursors.DictCursor)</span><br><span class="line">sql = &quot;select * from stu;&quot;</span><br><span class="line"># 执行sql语句</span><br><span class="line">cursor.execute(sql)</span><br><span class="line"># 拿到结果</span><br><span class="line">data = cursor.fetchall()</span><br><span class="line">print(data)</span><br><span class="line"></span><br><span class="line"># 关闭游标</span><br><span class="line">cursor.close()</span><br><span class="line"># 关闭数据库</span><br><span class="line">con.close()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.连接数据库的方法</span><br><span class="line">connect()</span><br><span class="line">2.连接数据库需要的参数</span><br><span class="line">host(主机ip),port(端口号),user(用户名),password(密码),database(数据库名)</span><br><span class="line">3.执行sql语句</span><br><span class="line">cursor.execute(sql语句)</span><br><span class="line">4.拿到数据</span><br><span class="line">cursor.fetchall()</span><br></pre></td></tr></table></figure><h2 id="ADB"><a href="#ADB" class="headerlink" title="ADB"></a>ADB</h2><h3 id="1-说一下adb"><a href="#1-说一下adb" class="headerlink" title="1.说一下adb **"></a>1.说一下adb **</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">adb 是Android debug bridge（安卓调试桥），是sdk提供一个工具，可以操作管理app+设备</span><br><span class="line"></span><br><span class="line">查看手机cpu情况：adb shell dumpsys cpuinfo</span><br><span class="line">应用的内存使用情况：adb shell dumpsys meminfo +包名</span><br><span class="line">查看电池状态:adb shell dumpsys battery</span><br><span class="line"></span><br><span class="line">安装软件：adb install -r  (APK路径)</span><br><span class="line">卸载软件：adb uninstall com.forgetsky.wanandroid</span><br><span class="line">将手机日志输出到本地文件中：adb logcat -v time process &gt; C:/log/aa.txt</span><br><span class="line">开启服务：adb start-server</span><br><span class="line">关闭服务：adb kill-server</span><br><span class="line"></span><br><span class="line">查看设备：adb devices</span><br><span class="line">将电脑文件传输到移动端：adb push 电脑路径 移动端路径</span><br><span class="line">adb push C:\log\aa.txt /storage/emulated/0</span><br><span class="line">将移动端文件传输到电脑：adb pull 移动端路径 电脑路径</span><br><span class="line">adb pull /storage/emulated/0/博雅东湖.mp4 C:\log\bo.mp4</span><br><span class="line">列出手机装的所有app的包名：adb shell pm list packages</span><br><span class="line">清除应用缓存信息:adb shell pm clear [packagename]</span><br></pre></td></tr></table></figure><h3 id="2-monkey测试-为什么叫monkey"><a href="#2-monkey测试-为什么叫monkey" class="headerlink" title="2.monkey测试(为什么叫monkey) ***"></a>2.monkey测试(为什么叫monkey) ***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">monkey 是adb下的一个子命令，可以在Android手机屏幕上产生随机的触摸事件，可以对Android app进行压测</span><br><span class="line"></span><br><span class="line">adb shell monkey -p 包名 -s 6009 --throttle 300 --ignore-crashes --ignore-timeouts --pct-touch 90 -v 300000 &gt;C:\log\log.txt</span><br><span class="line"></span><br><span class="line">-p 包名      ----******</span><br><span class="line">-s 6009: 指定种子，值相同，产生的事件序列也相同  ----******</span><br><span class="line">--throttle &lt;毫秒&gt; ： 指定用户操作（即事件）间的间隔   ----******</span><br><span class="line">--ignore-crashes：忽略崩溃   -----*****</span><br><span class="line">--ignore-timeouts：忽略超时，（ANR）   -----*****</span><br><span class="line">--pct-touch 设置点击事件百分比  -----*****</span><br><span class="line">--pct-motion 设置滑动事件百分比  -----*****</span><br><span class="line">-v,-v-v,-v-v-v: 日志详细程度</span><br><span class="line">300000： 产生的事件个数（一般都是10w+的次数）</span><br><span class="line">&gt;C:\log\log.txt ： 日志输出的位置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">时间：3-5H</span><br><span class="line">晚上下班 的时候，运行，等到 早上上班 结束了，分析</span><br><span class="line"></span><br><span class="line">测试结果处理:</span><br><span class="line">1.把日志存到电脑上</span><br><span class="line">2.查找异常信息            </span><br><span class="line">a.XXXException(NUllPointerException,</span><br><span class="line">ArrayIndexOutOfBoundsException,FileNotFoundException...)</span><br><span class="line">b.ForceClosed(程序强制关闭) （ctrl+f搜索‘Fatal’）</span><br><span class="line">c.ApplicationNot Response(应用程序无响应)(搜索anr)</span><br><span class="line">d.out of memory (内存溢出)</span><br><span class="line"></span><br><span class="line">3.把搜到的异常信息整理一下，发给开发（把异常那行及下面10几行）</span><br></pre></td></tr></table></figure><h2 id="接口自动化"><a href="#接口自动化" class="headerlink" title="接口自动化"></a>接口自动化</h2><h3 id="1-说说你接口自动化是怎么做的"><a href="#1-说说你接口自动化是怎么做的" class="headerlink" title="1.说说你接口自动化是怎么做的"></a>1.说说你接口自动化是怎么做的</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.找后端拿到接口文档</span><br><span class="line">2.分析接口（接口间业务关系，关联接口的数据，请求参数，请求头(token，os，版本),响应数据（数据格式，字段，错误分析））</span><br><span class="line">3.写接口测试用例</span><br><span class="line">4.把测试数据放入csv文件</span><br><span class="line">5.在unittest的testcase类中（写一个类，继承unittest.TestCase），写test打头的方法，把csv读取的测试数据放入requests做网络请求，然后把拿到的响应数据断言判断，或者使用pymysql连接数据库查询数据并比对</span><br><span class="line">6.在另一个py文件中使用TestSuite调用TestCase中的方法，配合HtmlTestRunner 生成测试报告</span><br><span class="line">7.将报告以邮件的形式发送给自己和领导</span><br></pre></td></tr></table></figure><h3 id="2-自动化的细节"><a href="#2-自动化的细节" class="headerlink" title="2.自动化的细节 ***"></a>2.自动化的细节 ***</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">response = request.get()/post()</span><br><span class="line"># 1.响应码</span><br><span class="line">response.status_code</span><br><span class="line"># 2.响应json数据</span><br><span class="line">response.json()</span><br><span class="line"># 3.字符串格式的json 转换为json/字典</span><br><span class="line">json = eval(字符串)</span><br><span class="line"># 4.json/字典转换为字符串</span><br><span class="line">str1 = str（字典/json）</span><br></pre></td></tr></table></figure><h2 id="UI自动化"><a href="#UI自动化" class="headerlink" title="UI自动化"></a>UI自动化</h2><h3 id="1-介绍一下你对项目中哪些功能做了自动化，怎么做得"><a href="#1-介绍一下你对项目中哪些功能做了自动化，怎么做得" class="headerlink" title="1.介绍一下你对项目中哪些功能做了自动化，怎么做得"></a>1.介绍一下你对项目中哪些功能做了自动化，怎么做得</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">我们做自动化的话，一般需要选取那种比较固定的功能，比如搜索，登录，注册等，这些功能在我们迭代的时候一直存在，所以选这些功能。</span><br><span class="line">自动化说白了就是将手动测试的步骤全部转换成代码，由代码完成对应的操作，比如人可以通过眼睛看到按钮/输入框的位置，代码不行，需要通过元素定位的方式找到按钮/输入框，代码也没有手，点击也是得通过click方法完成，还有其他的像输入框输入内容，需要调用send_keys（）</span><br><span class="line">我的脚本使用了PO模型，将元素操作和业务进行了分离，元素操作封装成了BasePage，具体的业务的写入了具体的业务类，比如SearchPage，LoginPage，LocatePage，验证是通过unittest验证的</span><br><span class="line"></span><br><span class="line">(下面是举例,拿自己的项目业务举例)</span><br><span class="line">说一下我写过的搜索功能（拿简书举例）吧，配置浏览器和url信息后，脚本会帮我们启动对应的浏览器，chrome或者火狐等，</span><br><span class="line">进入主页面后通过id定位到搜索输入框（可以xpath定位，id定位，class定位...），调用send_keys()输入想要搜索的内容，</span><br><span class="line">通过xpath定位到搜索按钮，代码调用点击click()方法，结果会在新的窗口展示</span><br><span class="line">通过driver.switch_to.window(handles[n])切换窗口，</span><br><span class="line">搜索结果上面部分是用户，下面部分是文章，我们需要验证用户和文章 是和我们搜索关键字相匹配的</span><br><span class="line">验证用户很简单，通过class把所有用户的元素获取到，然后获取用户名（元素.text），然后通过断言判断用户名是否包含搜索关键字</span><br><span class="line">验证文章的话我们需要验证文章的作者，标题，文章的内容，只要有三者有一个包含关键字，那结果就是正确的，同样我们获取作者，标题，文章内容的文本，断言判断文本中是否包含搜索关键字（怎么判断，find）</span><br></pre></td></tr></table></figure><h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">git和svn都是是项目版本控制的工具, 可以跟踪项目各个文件的变化</span><br><span class="line">svn是集中式的版本控制工具,git是分布式的</span><br><span class="line"></span><br><span class="line">用户配置</span><br><span class="line">git config --global user.name &quot;用户名&quot;</span><br><span class="line">git config --global user.email &quot;邮箱&quot;</span><br><span class="line"></span><br><span class="line">初始化仓库</span><br><span class="line">git init </span><br><span class="line">克隆仓库</span><br><span class="line">git clone 仓库地址</span><br><span class="line"></span><br><span class="line">添加所有文件</span><br><span class="line">git add --all</span><br><span class="line">从暂存区提交 -m：注释</span><br><span class="line">git commit -m &#x27;注释内容&#x27;</span><br><span class="line">拉取远端内容</span><br><span class="line">git pull </span><br><span class="line">将本地历史推送到远程</span><br><span class="line">git push </span><br><span class="line"></span><br><span class="line">创建一个分支</span><br><span class="line">git branch 分支名称</span><br><span class="line">删除一个分支</span><br><span class="line">git branch -d 分支名称</span><br><span class="line">切换分支</span><br><span class="line">git checkout 分支名称</span><br><span class="line">合并分支</span><br><span class="line">git merge</span><br><span class="line"></span><br><span class="line">将当前分支回退到历史某个版本</span><br><span class="line">git reset   </span><br><span class="line">查看提交历史记录</span><br><span class="line">git log</span><br><span class="line">对状态的跟踪</span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line">.gitignore忽略文件: 不想被跟踪的文件可以配置到这里</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Python-及自动化基础&quot;&gt;&lt;a href=&quot;#Python-及自动化基础&quot; class=&quot;headerlink&quot; title=&quot;Python 及自动化基础&quot;&gt;&lt;/a&gt;Python 及自动化基础&lt;/h2&gt;&lt;h3 id=&quot;1-您知道Python中的可变不可变数据类</summary>
      
    
    
    
    <category term="测试高频面试题-自动化测试" scheme="http://sunjunyu.cn/categories/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="高频面试题" scheme="http://sunjunyu.cn/tags/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="测试" scheme="http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95/"/>
    
    <category term="自动化测试" scheme="http://sunjunyu.cn/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>git命令</title>
    <link href="http://sunjunyu.cn/2020/08/09/git/"/>
    <id>http://sunjunyu.cn/2020/08/09/git/</id>
    <published>2020-08-08T16:00:00.000Z</published>
    <updated>2022-10-10T11:03:56.798Z</updated>
    
    <content type="html"><![CDATA[<h2 id="版本控制工具"><a href="#版本控制工具" class="headerlink" title="版本控制工具"></a>版本控制工具</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">版本控制工具：svn、git</span><br><span class="line">图形化工具：sourcrtree、小乌龟、github</span><br><span class="line"></span><br><span class="line">免费的代码托管网站：github、gitee</span><br></pre></td></tr></table></figure><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><p>初始化的仓库都有一个主分支master</p><p>  1.创建分支的时候，一般都是以一个分支为模板去创建，创建之后新分支和模板分支里面的内容一摸一样</p><p>  2.一旦创建之后，修改新分支的内容，模板分支里面不在受影响</p><p>  3.分支是可以合并的，合并后的分支有两个分支所有的内容</p><h2 id="分支相关命令"><a href="#分支相关命令" class="headerlink" title="分支相关命令"></a>分支相关命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git branch : 查看分支</span><br><span class="line">git branch 分支名: 创建分支</span><br><span class="line">git chekcout 分支名: 切换分支</span><br><span class="line">git checkout -b 分支名: 创建并切换分支</span><br><span class="line"></span><br><span class="line">合并分支:  （合并分支时，有时候会有冲突）</span><br><span class="line">git merge 分支名</span><br></pre></td></tr></table></figure><h2 id="什么是git"><a href="#什么是git" class="headerlink" title="什么是git"></a>什么是git</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">svn和git都是项目版本控制工具，可以控制项目中各个文件的变化</span><br><span class="line"></span><br><span class="line">svn是集中式的项目版本控制，git是分布式的</span><br></pre></td></tr></table></figure><h2 id="操作相关命令"><a href="#操作相关命令" class="headerlink" title="操作相关命令"></a>操作相关命令</h2><h4 id="用户配置"><a href="#用户配置" class="headerlink" title="用户配置"></a>用户配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name   用户名</span><br><span class="line">git config --global user.email  邮箱</span><br></pre></td></tr></table></figure><h4 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h4 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 仓库地址</span><br></pre></td></tr></table></figure><h4 id="添加所有文件"><a href="#添加所有文件" class="headerlink" title="添加所有文件"></a>添加所有文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add --all</span><br></pre></td></tr></table></figure><h4 id="从暂存区提交"><a href="#从暂存区提交" class="headerlink" title="从暂存区提交"></a>从暂存区提交</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;注释内容&quot;</span><br></pre></td></tr></table></figure><h4 id="拉取远端内容"><a href="#拉取远端内容" class="headerlink" title="拉取远端内容"></a>拉取远端内容</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><h4 id="将本地历史推送到远程"><a href="#将本地历史推送到远程" class="headerlink" title="将本地历史推送到远程"></a>将本地历史推送到远程</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h4 id="创建一个分支"><a href="#创建一个分支" class="headerlink" title="创建一个分支"></a>创建一个分支</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch 分支名称</span><br></pre></td></tr></table></figure><h4 id="删除一个分支"><a href="#删除一个分支" class="headerlink" title="删除一个分支"></a>删除一个分支</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d 分支名称</span><br></pre></td></tr></table></figure><h4 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gi checkout 分支名</span><br></pre></td></tr></table></figure><h4 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge 分支名</span><br></pre></td></tr></table></figure><h4 id="将当前分支回退到历史某个版本"><a href="#将当前分支回退到历史某个版本" class="headerlink" title="将当前分支回退到历史某个版本"></a>将当前分支回退到历史某个版本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset</span><br></pre></td></tr></table></figure><h4 id="查看提交历史记录"><a href="#查看提交历史记录" class="headerlink" title="查看提交历史记录"></a>查看提交历史记录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure><h4 id="对状态的跟踪"><a href="#对状态的跟踪" class="headerlink" title="对状态的跟踪"></a>对状态的跟踪</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><h4 id="gitignore忽略文件"><a href="#gitignore忽略文件" class="headerlink" title=".gitignore忽略文件"></a>.gitignore忽略文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">不想被跟踪的文件可以添加到此文件中。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;版本控制工具&quot;&gt;&lt;a href=&quot;#版本控制工具&quot; class=&quot;headerlink&quot; title=&quot;版本控制工具&quot;&gt;&lt;/a&gt;版本控制工具&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="git命令" scheme="http://sunjunyu.cn/categories/git%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="git命令" scheme="http://sunjunyu.cn/tags/git%E5%91%BD%E4%BB%A4/"/>
    
    <category term="版本控制工具" scheme="http://sunjunyu.cn/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>软件开发基础</title>
    <link href="http://sunjunyu.cn/2020/08/08/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/"/>
    <id>http://sunjunyu.cn/2020/08/08/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/</id>
    <published>2020-08-07T16:00:00.000Z</published>
    <updated>2022-10-10T09:13:18.022Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件开发模式"><a href="#软件开发模式" class="headerlink" title="软件开发模式"></a>软件开发模式</h2><h3 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将软件生命周期的各项活动规定为按固定顺序而连接的若干阶段工作，形如瀑布流水，最终得到软件产品的项目。</span><br></pre></td></tr></table></figure><h3 id="快速原型模型"><a href="#快速原型模型" class="headerlink" title="快速原型模型"></a>快速原型模型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">快速原型模型的第一步是建造一个快速原型，实现客户或未来的用户与系统的交互。用户、客户随时提出需求，研发分析进行实现。</span><br></pre></td></tr></table></figure><h3 id="螺旋模型"><a href="#螺旋模型" class="headerlink" title="螺旋模型"></a>螺旋模型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">螺旋模型他将瀑布模型和快速原型模型结合了起来，强调了其他模型所忽视的风险分析，特别适合用于大型复杂的系统。</span><br></pre></td></tr></table></figure><h3 id="迭代模型"><a href="#迭代模型" class="headerlink" title="迭代模型"></a>迭代模型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">迭代模型是一种于传统的瀑布式开发相反的软件开发过程，它弥补了传统开发方式的一些弱点，成功率和生产率更高。</span><br><span class="line">迭代就是反复求精的过程，用绘画举例就是先画整体，在将每个部分进行细化。</span><br></pre></td></tr></table></figure><h3 id="增量模型"><a href="#增量模型" class="headerlink" title="增量模型"></a>增量模型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">增量模型于建造大厦类似，都是一步一步来的，在这种模式下软件被分为一系列的增量构建，如设计、实现、集成、测试等，各个组件相辅相成最终形成的特定功能的代码</span><br></pre></td></tr></table></figure><h3 id="敏捷开发模式"><a href="#敏捷开发模式" class="headerlink" title="敏捷开发模式"></a>敏捷开发模式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">敏捷开发是一种以人为核心、迭代。循序渐进的开发方法，这种方法把软件项目的构建分成了多个子项目，子项目都具备集成和可运行的特征且每个子项目都可独立使用。</span><br><span class="line">敏捷软件开发是一种按短迭代周期的工作，项目成型快，也就导致需要项目人员面对面交流。</span><br></pre></td></tr></table></figure><h2 id="软件的分类"><a href="#软件的分类" class="headerlink" title="软件的分类"></a>软件的分类</h2><h3 id="根据应用场景分"><a href="#根据应用场景分" class="headerlink" title="根据应用场景分"></a>根据应用场景分</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">工具类软件</span><br><span class="line">游戏类软件</span><br><span class="line">媒体类软件</span><br><span class="line">电商类软件</span><br></pre></td></tr></table></figure><h3 id="根据软件结构分类"><a href="#根据软件结构分类" class="headerlink" title="根据软件结构分类"></a>根据软件结构分类</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">单机版软件：</span><br><span class="line">无网络状态下可以直接使用的安装类软件</span><br><span class="line">分布式软件：</span><br><span class="line">需要客户端且需要网络才可以使用的软件。</span><br><span class="line">主要有两种架构：</span><br><span class="line">C/S架构--客户端需要安装相对应的软件</span><br><span class="line">B/S架构--客户端为浏览器</span><br><span class="line">C：client(客户端)、B：browser(浏览器)、S:sever(服务器)。</span><br></pre></td></tr></table></figure><h2 id="软件质量"><a href="#软件质量" class="headerlink" title="软件质量"></a>软件质量</h2><h3 id="软件质量的概念"><a href="#软件质量的概念" class="headerlink" title="软件质量的概念"></a>软件质量的概念</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">软件质量是指产品满足基本需求及隐藏需求的程度，需要满足产品界面更加美观、用户操作更便捷等。基本可以依据三个方面：</span><br><span class="line">   - 满足需求规定</span><br><span class="line">   - 满足用户需求</span><br><span class="line">   - 满足用户隐式需求</span><br></pre></td></tr></table></figure><h3 id="软件质量模型"><a href="#软件质量模型" class="headerlink" title="软件质量模型"></a>软件质量模型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 功能性</span><br><span class="line">- 可靠性</span><br><span class="line">- 可使用性</span><br><span class="line">- 效率</span><br><span class="line">- 可维护性</span><br><span class="line">- 可移植性</span><br></pre></td></tr></table></figure><h3 id="影响软件质量的因素"><a href="#影响软件质量的因素" class="headerlink" title="影响软件质量的因素"></a>影响软件质量的因素</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 需求模糊</span><br><span class="line">- 软件开发缺乏规范性文件指导</span><br><span class="line">- 开发人员问题</span><br><span class="line">- 缺乏软件质量控制管理</span><br></pre></td></tr></table></figure><h2 id="软件开发生态"><a href="#软件开发生态" class="headerlink" title="软件开发生态"></a>软件开发生态</h2><h3 id="APP"><a href="#APP" class="headerlink" title="APP"></a>APP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- APP就是应用程序，主要是安装在手机上的软件</span><br><span class="line">- ios、安卓、鸿蒙</span><br></pre></td></tr></table></figure><h3 id="微信小程序"><a href="#微信小程序" class="headerlink" title="微信小程序"></a>微信小程序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">微信小程序是一种不需要下载就可以使用的应用，用户扫一扫或者搜一下就可以打开使用。</span><br></pre></td></tr></table></figure><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">前端也叫作web前端，对于网站来说通常指网站前台部分也就是用户可以看到的部分。</span><br></pre></td></tr></table></figure><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">后端开发就是服务器端开发，负责数据调动，数据传输等</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;软件开发模式&quot;&gt;&lt;a href=&quot;#软件开发模式&quot; class=&quot;headerlink&quot; title=&quot;软件开发模式&quot;&gt;&lt;/a&gt;软件开发模式&lt;/h2&gt;&lt;h3 id=&quot;瀑布模型&quot;&gt;&lt;a href=&quot;#瀑布模型&quot; class=&quot;headerlink&quot; title=&quot;瀑</summary>
      
    
    
    
    <category term="软件开发基础" scheme="http://sunjunyu.cn/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="软件开发基础" scheme="http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/"/>
    
    <category term="开发模式" scheme="http://sunjunyu.cn/tags/%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="软件分类" scheme="http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E5%88%86%E7%B1%BB/"/>
    
    <category term="软件质量" scheme="http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E8%B4%A8%E9%87%8F/"/>
    
    <category term="软件开发生态" scheme="http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%94%9F%E6%80%81/"/>
    
  </entry>
  
  <entry>
    <title>软件缺陷</title>
    <link href="http://sunjunyu.cn/2020/08/08/%E8%BD%AF%E4%BB%B6%E7%BC%BA%E9%99%B7/"/>
    <id>http://sunjunyu.cn/2020/08/08/%E8%BD%AF%E4%BB%B6%E7%BC%BA%E9%99%B7/</id>
    <published>2020-08-07T16:00:00.000Z</published>
    <updated>2022-10-10T09:13:34.646Z</updated>
    
    <content type="html"><![CDATA[<h2 id="缺陷的定义"><a href="#缺陷的定义" class="headerlink" title="缺陷的定义"></a>缺陷的定义</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">软件缺陷就是我们常说的BUG，是指在软件中存在影响程序正常运行的问题。</span><br></pre></td></tr></table></figure><h2 id="缺陷产生的原因"><a href="#缺陷产生的原因" class="headerlink" title="缺陷产生的原因"></a>缺陷产生的原因</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 需求不明确和变更</span><br><span class="line">2. 软件结构复杂</span><br><span class="line">3. 编码问题</span><br><span class="line">4. 项目期限短</span><br><span class="line">5. 使用新技术</span><br><span class="line">6. 软件开发缺乏规范性文件指导</span><br><span class="line">7. 缺乏软件质量控制管理</span><br></pre></td></tr></table></figure><h2 id="软件缺陷的分类"><a href="#软件缺陷的分类" class="headerlink" title="软件缺陷的分类"></a>软件缺陷的分类</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1. 测试种类</span><br><span class="line">   - 界面类</span><br><span class="line">   - 功能类</span><br><span class="line">   - 性能类</span><br><span class="line">   - 安全类</span><br><span class="line">   - 兼容性类</span><br><span class="line">2. 缺陷严重程度</span><br><span class="line">   - 严重</span><br><span class="line">   - 一般</span><br><span class="line">   - 次要</span><br><span class="line">   - 轻微</span><br><span class="line">3. 缺陷优先级</span><br><span class="line">   - 立刻解决</span><br><span class="line">   - 高优先级</span><br><span class="line">   - 正常排队</span><br><span class="line">   - 低优先级</span><br><span class="line">4. 缺陷发生的阶段</span><br><span class="line">   - 需求阶段</span><br><span class="line">   - 架构阶段</span><br><span class="line">   - 设计阶段</span><br><span class="line">   - 编码阶段</span><br><span class="line">   - 测试阶段</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;缺陷的定义&quot;&gt;&lt;a href=&quot;#缺陷的定义&quot; class=&quot;headerlink&quot; title=&quot;缺陷的定义&quot;&gt;&lt;/a&gt;缺陷的定义&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut</summary>
      
    
    
    
    <category term="软件缺陷" scheme="http://sunjunyu.cn/categories/%E8%BD%AF%E4%BB%B6%E7%BC%BA%E9%99%B7/"/>
    
    
    <category term="软件缺陷" scheme="http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E7%BC%BA%E9%99%B7/"/>
    
    <category term="缺陷产生原因" scheme="http://sunjunyu.cn/tags/%E7%BC%BA%E9%99%B7%E4%BA%A7%E7%94%9F%E5%8E%9F%E5%9B%A0/"/>
    
    <category term="缺陷分类" scheme="http://sunjunyu.cn/tags/%E7%BC%BA%E9%99%B7%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>网络基础</title>
    <link href="http://sunjunyu.cn/2020/07/26/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    <id>http://sunjunyu.cn/2020/07/26/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</id>
    <published>2020-07-25T16:00:00.000Z</published>
    <updated>2022-10-10T09:14:01.742Z</updated>
    
    <content type="html"><![CDATA[<h2 id="http和https有什么区别"><a href="#http和https有什么区别" class="headerlink" title="http和https有什么区别"></a>http和https有什么区别</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  简单来说，HTTP协议是由SSL/TLS+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比HTTP协议更安全。</span><br><span class="line">主要区别如下：</span><br><span class="line">  1.https协议需要到CA申请证书，一般免费的证书比较少，因而需要一定费用。</span><br><span class="line">  2.http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。</span><br><span class="line">  3.http和https使用的是完全不同的连接方式，使用的默认端口也不一样，http是80,https是443。</span><br><span class="line">  4.http的连接很简单是无状态的，https协议由SSL+TLS协议构建的可进行加密传输、身份认证。比http协议安全。</span><br></pre></td></tr></table></figure><h2 id="get和post请求的区别"><a href="#get和post请求的区别" class="headerlink" title="get和post请求的区别"></a>get和post请求的区别</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.get后退/刷新无害，post数据则会被重新提交（浏览器应该告知用户数据会被重新提交）。</span><br><span class="line">2.get作为书签可以被收藏，post作为书签不可被收藏。</span><br><span class="line">3.get能被缓存，post不能被缓存</span><br><span class="line">4.get历史参数会被保留在浏览器的历史中，post参数不会被保存在浏览器历史和web服务器日志中。</span><br><span class="line">5.get对数据长度有限制，URL最大长度是2048，post无限制。</span><br><span class="line">6.与post相比，get的安全性较差（get的参数是在url中），post的数据不会显示在URL中。</span><br></pre></td></tr></table></figure><h2 id="请求方式有哪些？"><a href="#请求方式有哪些？" class="headerlink" title="请求方式有哪些？"></a>请求方式有哪些？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get、post、put、delete</span><br></pre></td></tr></table></figure><h2 id="常见的状态码有哪些？"><a href="#常见的状态码有哪些？" class="headerlink" title="常见的状态码有哪些？"></a>常见的状态码有哪些？</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">100：是服务器告诉客户端，部分请求已经接受，应该继续发送请求，如已经完成则忽略并返回结果。</span><br><span class="line">200：请求完成，返回结果。</span><br><span class="line">202：是服务器已经接受了请求，但还没有处理，最终会不会处理不确定。</span><br><span class="line">204：服务器成功处理了请求，但还未返回实体内容。</span><br><span class="line">301：永久重定向，资源已经永久分配新URL</span><br><span class="line">302：临时重定向，资源已经临时分配新URL</span><br><span class="line">400：请求报文语法或参数错误</span><br><span class="line">401：需要通过http认证，或认证失败</span><br><span class="line">403：请求资源被拒绝</span><br><span class="line">404：资源未找到</span><br><span class="line">500：服务器异常</span><br><span class="line">502：上游服务器收到无效的响应</span><br><span class="line">503：服务器超负载或停机维护。</span><br></pre></td></tr></table></figure><h2 id="http请求的组成"><a href="#http请求的组成" class="headerlink" title="http请求的组成"></a>http请求的组成</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请求行：请求的第一行是“方法URI协议/版本”</span><br><span class="line">请求头（消息报头）：包含许多有关的客户端环境和请求正文中有用的信息</span><br><span class="line">请求正文：请求头和请求正文中间是一个空行，表示请求头已经结束，接下来是请求正文的内容，请求正文中包括用户所要查询的字符串信息。 </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;http和https有什么区别&quot;&gt;&lt;a href=&quot;#http和https有什么区别&quot; class=&quot;headerlink&quot; title=&quot;http和https有什么区别&quot;&gt;&lt;/a&gt;http和https有什么区别&lt;/h2&gt;&lt;figure class=&quot;highli</summary>
      
    
    
    
    <category term="网络基础" scheme="http://sunjunyu.cn/categories/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="网络基础" scheme="http://sunjunyu.cn/tags/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    
    <category term="http/https" scheme="http://sunjunyu.cn/tags/http-https/"/>
    
    <category term="get/post" scheme="http://sunjunyu.cn/tags/get-post/"/>
    
    <category term="状态码" scheme="http://sunjunyu.cn/tags/%E7%8A%B6%E6%80%81%E7%A0%81/"/>
    
    <category term="http请求组成" scheme="http://sunjunyu.cn/tags/http%E8%AF%B7%E6%B1%82%E7%BB%84%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>接口测试</title>
    <link href="http://sunjunyu.cn/2020/07/08/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"/>
    <id>http://sunjunyu.cn/2020/07/08/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/</id>
    <published>2020-07-07T16:00:00.000Z</published>
    <updated>2022-10-10T09:12:25.831Z</updated>
    
    <content type="html"><![CDATA[<h2 id="接口测试的流程"><a href="#接口测试的流程" class="headerlink" title="接口测试的流程"></a>接口测试的流程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.找后端拿接口文档</span><br><span class="line">2.写测试计划</span><br><span class="line">3.分析接口（确认接口之间的业务关系）</span><br><span class="line">4.写用例，评审用例</span><br><span class="line">5.执行用例去测试（自动化：根据用例编写脚本）</span><br><span class="line">6.结果分析</span><br><span class="line">7.bug提交</span><br><span class="line">8.修复后，回归测试</span><br></pre></td></tr></table></figure><h2 id="一般的接口文档包含那些"><a href="#一般的接口文档包含那些" class="headerlink" title="一般的接口文档包含那些"></a>一般的接口文档包含那些</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请求参数、返回参数、URL、请求方式</span><br></pre></td></tr></table></figure><h2 id="接口case包含哪些内容"><a href="#接口case包含哪些内容" class="headerlink" title="接口case包含哪些内容"></a>接口case包含哪些内容</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用例标题，优先级，所属模块，资源路径，请求参数，请求方式，测试数据，预期结果（应该有结果），实际结果</span><br></pre></td></tr></table></figure><h2 id="接口测试需要测什么，关注什么验证什么，测试点"><a href="#接口测试需要测什么，关注什么验证什么，测试点" class="headerlink" title="接口测试需要测什么，关注什么验证什么，测试点"></a>接口测试需要测什么，关注什么验证什么，测试点</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">接口测试汇总：</span><br><span class="line">参数测试、返回值验证、业务数据、接口之间、DB验证</span><br><span class="line"></span><br><span class="line">1.参数测试：</span><br><span class="line">  1.1针对输入参数和输出参数的测试，包括对类型、长度、校验判断等</span><br><span class="line">  1.2异常参数：参数不合法输入，考虑接口内部逻辑错误的异常提示，这些体现在完备的responsecode错误代码中。</span><br><span class="line">2.返回值验证：</span><br><span class="line">  2.1正确返回：返回的code是否正确，返回的数据是否和DB一致</span><br><span class="line">  2.2异常返回：是否定义全面，存在遗漏</span><br><span class="line">3.业务数据：</span><br><span class="line">  3.1单个参数要符合业务数据属性或定义</span><br><span class="line">  3.2多个参数值之间要具有业务含义，赋值需要考虑业务上一一对应的业务关系</span><br><span class="line">4.接口之间：</span><br><span class="line">  多个接口之间的数据是否存在关联</span><br><span class="line">5.DB验证：</span><br><span class="line">  5.1接口逻辑是否落地到DB</span><br><span class="line">  5.2DB存储数据是否准确</span><br></pre></td></tr></table></figure><h2 id="有依赖关系-x2F-关联的接口怎么测试"><a href="#有依赖关系-x2F-关联的接口怎么测试" class="headerlink" title="有依赖关系&#x2F;关联的接口怎么测试"></a>有依赖关系&#x2F;关联的接口怎么测试</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">比如B接口的请求参数是A接口的响应数据</span><br><span class="line">我们需要请求A接口，拿到数据后，把需要的数据提取出来，放入B接口进行请求</span><br><span class="line"></span><br><span class="line">具体实现的话使用我们常用的那些工具都可以，像postman，Jmeter，python脚本都行</span><br><span class="line">1.postman：请求A接口，在Tests脚本里面写js代码，将数据解析后提取想要的数据，存为全局/环境变量，在B接口请求的时候关联使用（&#123;&#123;id&#125;&#125;）</span><br><span class="line">2.Jmeter：请求A接口，给A接口添加后处理器--正则提取器，通过正则的方式，将数据提取出来变成用户变量，在B接口中关联使用（$&#123;id&#125;）</span><br><span class="line">3.python: 使用requests请求A接口，拿到响应后解析成json，然后取出想要的数据，进行B接口的请求，将取出的参数塞入即可</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="postman工具是什么，有什么用"><a href="#postman工具是什么，有什么用" class="headerlink" title="postman工具是什么，有什么用"></a>postman工具是什么，有什么用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">postman是一款强大的http调试工具，我们一般使用它来做接口测试。</span><br><span class="line">常用功能：</span><br><span class="line">1.创建测试和生产环境，添加相对的环境变量，比如baseurl</span><br><span class="line">2.创建接口集，里面添加项目接口</span><br><span class="line">3.添加接口集，可以发起get/post/delete/put等请求</span><br><span class="line">4.GET请求查询参数放入params中，post请求参数放入bady中，可以是普通键值对，json/html/xml/文件，请求头都是放入headers里面</span><br><span class="line">5.pre-request script预处理脚本，在发起网络请求之前会调用的js代码，可以再里面换取一些动态的参数，比如时间戳，随机数等</span><br><span class="line">6.tests脚本，再发起网络请求成功拿到响应之后调用，可以在里面添加断言，判断响应数据是否正确</span><br><span class="line">7.mock测试，模拟服务器返回自己想要的测试数据</span><br><span class="line">8.参数化：环境变量，全局变量，csv参数化</span><br><span class="line">1.写一个csv/txt文档，把测试数据放入</span><br><span class="line">2.建接口集，里面写接口</span><br><span class="line">3.接口传递的参数不能写死，使用关联的方式（&#123;&#123;key&#125;&#125;），key应该是csv文件表头名字</span><br><span class="line">4.双击接口集，点击右上角的run，打开Runner</span><br><span class="line">5.配置参数：</span><br><span class="line">  Iterations（迭代次数）</span><br><span class="line">  Delay: 延迟对应的事件发起请求</span><br><span class="line">  data：选择csv文件</span><br><span class="line">  Data file type： 选择文件的类型（text/csv）</span><br><span class="line">6.点击运行</span><br></pre></td></tr></table></figure><h2 id="Charles抓包"><a href="#Charles抓包" class="headerlink" title="Charles抓包"></a>Charles抓包</h2><h3 id="什么是抓包，有什么作用"><a href="#什么是抓包，有什么作用" class="headerlink" title="什么是抓包，有什么作用"></a>什么是抓包，有什么作用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">抓包:</span><br><span class="line">  抓包是将网络传输发送与接收的数据包进行截获、重发、编辑、转存等操作，也可以用来检查网络安全。</span><br><span class="line"></span><br><span class="line">常见的抓包工具：</span><br><span class="line">  charlers，fiddler，wires hark等等</span><br><span class="line"></span><br><span class="line">作用：</span><br><span class="line">  1.定位前后端问题：</span><br><span class="line">    app:通过抓包看网络请求</span><br><span class="line">    web:浏览器按F12，点到network，在下面找到对应的网络请求，看url还有参数，如果url和参数不对，就是前端的问题，如果没有问题，看响应数据，如果响应数据有问题，那么就是后端的问题，如果数据没有问题那就是前端的问题。</span><br><span class="line">  2.模拟404</span><br><span class="line">  3.模拟弱网</span><br><span class="line">  4.mock测试</span><br></pre></td></tr></table></figure><h3 id="抓包的时候遇到乱码一般是什么原因"><a href="#抓包的时候遇到乱码一般是什么原因" class="headerlink" title="抓包的时候遇到乱码一般是什么原因"></a>抓包的时候遇到乱码一般是什么原因</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.没有信任证书导致的，因为HTTPS是加密传输的</span><br><span class="line">2.数据本身还做过加密，除非拿到密钥，否则没办法解密</span><br></pre></td></tr></table></figure><h3 id="mock测试，rewrite，map-remote-x2F-local的作用"><a href="#mock测试，rewrite，map-remote-x2F-local的作用" class="headerlink" title="mock测试，rewrite，map remote&#x2F;local的作用"></a>mock测试，rewrite，map remote&#x2F;local的作用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mock测试：</span><br><span class="line">  模拟我们想要的请求和测试数据返回</span><br><span class="line">charles：</span><br><span class="line">  断点：断点可以修改请求数据和响应数据，一般用来临时修改</span><br><span class="line">map:本质上都是重定向</span><br><span class="line">  map local:拿本地文件替换服务器返回的数据</span><br><span class="line">  map remote:拿另一个链接返回的数据替换原来数据</span><br><span class="line">rewrite：</span><br><span class="line">  通过正则匹配的方式，修改请求/响应数据</span><br></pre></td></tr></table></figure><h2 id="Charles具体操作"><a href="#Charles具体操作" class="headerlink" title="Charles具体操作"></a>Charles具体操作</h2><h3 id="怎么信任证书"><a href="#怎么信任证书" class="headerlink" title="怎么信任证书"></a>怎么信任证书</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">把抓包工具的证书导出，在对应的浏览器/手机中信任</span><br><span class="line"></span><br><span class="line">charles具体操作：</span><br><span class="line">安装:help --&gt; ssl proxying--&gt; install charles root certificate</span><br><span class="line">导出:help--&gt;ssl proxying--&gt;save Charles root certificate，选择.cer格式的证书</span><br><span class="line">信任:chrome浏览器：设置 → 管理证书（安全） → 导入</span><br></pre></td></tr></table></figure><h3 id="移动端怎么抓包"><a href="#移动端怎么抓包" class="headerlink" title="移动端怎么抓包"></a>移动端怎么抓包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.PC和手机在同一个网络下</span><br><span class="line">2.手机需要设置代理，IP和端口号</span><br><span class="line">3.信任证书</span><br><span class="line">4.开启app进行抓包</span><br></pre></td></tr></table></figure><h3 id="map-local使用步骤"><a href="#map-local使用步骤" class="headerlink" title="map local使用步骤"></a>map local使用步骤</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tools--map Local--指定本地文件</span><br></pre></td></tr></table></figure><h3 id="map-remote使用步骤"><a href="#map-remote使用步骤" class="headerlink" title="map remote使用步骤"></a>map remote使用步骤</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tools--map remote --&gt;指定重定向的链接</span><br></pre></td></tr></table></figure><h3 id="断点修改请求参数"><a href="#断点修改请求参数" class="headerlink" title="断点修改请求参数"></a>断点修改请求参数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选中链接--&gt;右键 --&gt;选择“BreakPoints” --&gt;刷新网页 --&gt;Edit Request,修改请求信息--&gt;Execute</span><br></pre></td></tr></table></figure><h3 id="断点修改响应数据"><a href="#断点修改响应数据" class="headerlink" title="断点修改响应数据"></a>断点修改响应数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选中链接--&gt;右键 --&gt;选择“BreakPoints” --&gt;刷新网页 --&gt;Edit Response”,修改响应数据--&gt;Execute</span><br></pre></td></tr></table></figure><h3 id="rewrite"><a href="#rewrite" class="headerlink" title="rewrite"></a>rewrite</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tools-Rewrite --&gt;添加对应的链接,规则</span><br></pre></td></tr></table></figure><h3 id="弱网-使用步骤"><a href="#弱网-使用步骤" class="headerlink" title="弱网 使用步骤"></a>弱网 使用步骤</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Proxy--&gt;Throttling Settings(节流阀设置) --&gt;可以选择3G,4G,56kbps,256kbps....</span><br></pre></td></tr></table></figure><h3 id="模拟404-使用步骤"><a href="#模拟404-使用步骤" class="headerlink" title="模拟404 使用步骤"></a>模拟404 使用步骤</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tools——&gt;blocklist--&gt; 添加网址</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;接口测试的流程&quot;&gt;&lt;a href=&quot;#接口测试的流程&quot; class=&quot;headerlink&quot; title=&quot;接口测试的流程&quot;&gt;&lt;/a&gt;接口测试的流程&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    <category term="接口测试" scheme="http://sunjunyu.cn/categories/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="接口测试" scheme="http://sunjunyu.cn/tags/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"/>
    
    <category term="抓包" scheme="http://sunjunyu.cn/tags/%E6%8A%93%E5%8C%85/"/>
    
    <category term="Charles" scheme="http://sunjunyu.cn/tags/Charles/"/>
    
  </entry>
  
  <entry>
    <title>SQL案例</title>
    <link href="http://sunjunyu.cn/2020/06/19/sql%E6%A1%88%E4%BE%8B/"/>
    <id>http://sunjunyu.cn/2020/06/19/sql%E6%A1%88%E4%BE%8B/</id>
    <published>2020-06-18T16:00:00.000Z</published>
    <updated>2022-10-10T10:40:12.997Z</updated>
    
    <content type="html"><![CDATA[<p><strong>两张表，用户表user，订单表orders</strong></p><p><strong>user表字段：id，name，age，sex</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create database met;</span><br><span class="line">use met;</span><br><span class="line">create table user(id int,name varchar(20),age int,sex varchar(20));</span><br></pre></td></tr></table></figure><p><strong>orders表字段：id，uid（和用户表id对应）,p_name(商品名称),amount(金额),time(购买日期)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table orders(id int,uid int,p_name varchar(20),amount float,time varchar(30));</span><br></pre></td></tr></table></figure><p><strong>给用户表插入数据(写1条sql就可以)</strong><br>    <strong>1，张三，20，男；</strong><br>    <strong>2，lisi，21，女；</strong><br>    <strong>3，王五，19，女</strong><br>    <strong>4,赵六,33,男</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into user values(1,&quot;张三&quot;,20,&quot;男&quot;),(2,&quot;lisi&quot;,21,&quot;女&quot;),(3,&quot;王五&quot;,19,&quot;女&quot;),(4,&quot;赵六&quot;,33,&quot;男&quot;);</span><br></pre></td></tr></table></figure><p><strong>插入数据如下</strong><br>    <strong>1，1,“苹果”，1111.5，‘2022-01-01’</strong><br>    <strong>2,1,“梨子”,2000,’2022-01-02’</strong><br>    <strong>3，2,“苹果”,1000,’2022-01-02’</strong><br>    <strong>4，2,“苹果”,9000,’2022-01-04’</strong><br>    <strong>5，3,“梨子”,1000,’2022-01-06’</strong><br>    <strong>6，3,“香蕉”,9000,’2022-01-11’</strong><br>    <strong>7，3,“橘子”,2000,’2022-01-11’</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">insert into orders values(1,1,&quot;苹果&quot;,1111.5,&quot;2022-01-01&quot;);</span><br><span class="line">insert into orders values(2,1,&quot;梨子&quot;,2000,&quot;2022-01-02&quot;);</span><br><span class="line">insert into orders values(3,2,&quot;苹果&quot;,1000,&quot;2022-01-02&quot;);</span><br><span class="line">insert into orders values(4,2,&quot;苹果&quot;,9000,&quot;2022-01-04&quot;);</span><br><span class="line">insert into orders values(5,3,&quot;梨子&quot;,1000,&quot;2022-01-06&quot;);</span><br><span class="line">insert into orders values(6,3,&quot;香蕉&quot;,9000,&quot;2022-01-11&quot;);</span><br><span class="line">insert into orders values(7,3,&quot;橘子&quot;,2000,&quot;2022-01-11&quot;);</span><br></pre></td></tr></table></figure><p><strong>修改id是7 的数据，p_name改为苹果酱，金额改为500</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update orders set p_name=&quot;苹果酱&quot;,amount=500 where id=7;</span><br></pre></td></tr></table></figure><p><strong>查询年龄最小的用户姓名</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select min(age),name from user;</span><br></pre></td></tr></table></figure><p><strong>查询amount大于5000的订单</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from orders where amount&gt;5000;</span><br></pre></td></tr></table></figure><p><strong>查询amount在1000到6000的订单</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from orders where amount&gt;1000 and amount&lt;6000;</span><br></pre></td></tr></table></figure><p><strong>查询p_name中含有苹果的订单</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from orders where p_name like &quot;%苹果%&quot;;</span><br></pre></td></tr></table></figure><p><strong>查询第一个字是梨的订单</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from orders where p_name like &quot;梨%&quot;;</span><br></pre></td></tr></table></figure><p><strong>查询所有订单，按amount降序排列</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from orders  order by amount desc;</span><br></pre></td></tr></table></figure><p><strong>查询订单，从第2条开始，查询4条数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from orders  limit 1,4;</span><br></pre></td></tr></table></figure><p><strong>查询总金额&gt;7000的商品 及对应总金额</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from orders where amount&gt;7000;</span><br></pre></td></tr></table></figure><p><strong>查询最大花费的一笔订单对应的用户姓名(如果多个,都显示)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where id in (select uid from orders where amount=(select max(amount) from orders));</span><br></pre></td></tr></table></figure><p><strong>查询订单的平均金额</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select avg(amount) from orders;</span><br></pre></td></tr></table></figure><p><strong>按男女分组,显示对应的用户名,如下:</strong><br>    <strong>1，张三，20，男；</strong><br>    <strong>4,赵六,33,男</strong><br>    <strong>2，lisi，21，女；</strong><br>    <strong>3，王五，19，女</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id,name,age,sex from user group by sex;</span><br></pre></td></tr></table></figure><p><strong>删除2022年1月6号的订单</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from orders where time=&quot;2022-01-06&quot;;</span><br></pre></td></tr></table></figure><p><strong>什么是子查询</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一个查询的结果是另一个查询的条件。</span><br></pre></td></tr></table></figure><p><strong>左外和右外查询是什么，区别</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">左查询是以左表为主的查询，查询结合无论是否有交际左表的数据都会显示，右表仅显示和左表有关联的数据。</span><br><span class="line">右查询是以右表为主，右表全部显示，左边仅显示有关联的数据。</span><br></pre></td></tr></table></figure><p><strong>内联查询是什么</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">内联查询是仅展示有关联的数据。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;两张表，用户表user，订单表orders&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;user表字段：id，name，age，sex&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr</summary>
      
    
    
    
    <category term="SQL案例" scheme="http://sunjunyu.cn/categories/SQL%E6%A1%88%E4%BE%8B/"/>
    
    
    <category term="sql语句" scheme="http://sunjunyu.cn/tags/sql%E8%AF%AD%E5%8F%A5/"/>
    
    <category term="sql案例" scheme="http://sunjunyu.cn/tags/sql%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>Linux操作</title>
    <link href="http://sunjunyu.cn/2020/06/18/Linux%E6%93%8D%E4%BD%9C/"/>
    <id>http://sunjunyu.cn/2020/06/18/Linux%E6%93%8D%E4%BD%9C/</id>
    <published>2020-06-17T16:00:00.000Z</published>
    <updated>2022-11-01T02:01:34.513Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Linux简介"><a href="#Linux简介" class="headerlink" title="Linux简介"></a>Linux简介</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Linux是基于unix的开源免费的操作系统，由于系统的稳定性和安全性几乎成为程序代码运行的最佳环境。</span><br><span class="line"></span><br><span class="line">Linux的分类</span><br><span class="line">1.Linux根据市场需求，分为两个方向</span><br><span class="line">    - 图形化界面版：注重用户体验，类似windows操作系统，但目前成熟度不够。</span><br><span class="line">    - 服务器版本：没有好看的界面，是以控制台窗口输入命令操作系统的，类似于DOS，是我们假设服务器的最佳选择。</span><br><span class="line"> </span><br><span class="line">2.Linux根据原生程度分为两种</span><br><span class="line">    - 内核版本：在了Linux领导下的内核小组开发维护的系统内核版本号。</span><br><span class="line">    - 发行版本：一些组织或公司在内核版基础上进行二次开发而重新发行的版本。</span><br><span class="line">3.Linux发行版本不同，又可以分为多种不同的类型</span><br><span class="line">Ubuntu、CentOS、中标麒麟、红旗Linux等。</span><br></pre></td></tr></table></figure><h3 id="Linux基本命令"><a href="#Linux基本命令" class="headerlink" title="Linux基本命令"></a>Linux基本命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">• 目录操作</span><br><span class="line">• cd usr/ 切换到该目录下usr目录</span><br><span class="line">• cd .. 切换到上一层目录</span><br><span class="line">• cd / 切换到系统根目录</span><br><span class="line">• mkdir 目录名称 创建目录 </span><br><span class="line">• ls 目录名称 查询该目录下所有的目录和文件 </span><br><span class="line">• ls [-a] 目录名称 查询该目录下所有的目录和文件,包含隐藏文件 </span><br><span class="line">• ls [-l] 目录名称 查询该目录下所有的目录和文件的详细信息 </span><br><span class="line">• find / -name 目录名称 查找/root下的目录(文件)</span><br><span class="line">• mv 目录名称 新目录名称 修改目录名称</span><br><span class="line">• mv 目录名称 目录的新位置 剪切 </span><br><span class="line">• cp -r 目录名称 目录的目标位置 拷贝 </span><br><span class="line">• rm -rf 目录 强制删除目录 </span><br><span class="line"></span><br><span class="line">• 文件操作 </span><br><span class="line">• 创建空文件：touch 文件名称 </span><br><span class="line">• 查看文件内容：cat/more/less/tail 文件 </span><br><span class="line">• 动态查看/实时查看文件(日志)：tail -f 文件  </span><br><span class="line">• 查看文件前10行：head -n 10 文件名</span><br><span class="line">• 查看文件后5行：tail -n 5 文件名</span><br><span class="line">• 关键字搜索 ：grep 要搜索的字符串 要搜索的文件 </span><br><span class="line">• 修改文件内容：vi/vim 文件（--&gt;进入文件-----&gt;命令模式------&gt;按i进入编辑模式-----&gt;编辑文件 **-------&gt;按**Esc进入命令模式--输入：进入底行模式-**----&gt;**输入wq/q!）</span><br><span class="line">• 强制删除文件：rm -rf 文件  </span><br><span class="line"></span><br><span class="line">• 文件的打包压缩 :tar -zcvf 文件名.tar 要打包的文件 </span><br><span class="line">• 文件的解压:tar -xvf 文件名.tar </span><br><span class="line">• 扩充:将文件解压到固定位置 :tar -xvf 文件名.tar -C 指定解压的位置 </span><br><span class="line"></span><br><span class="line">• 查询当前所在位置 : pwd </span><br><span class="line"></span><br><span class="line">• 查看进程: ps -ef | grep 进程名称(tomcat/mysql)</span><br><span class="line">• 杀死进程:kill -9 进程pid</span><br><span class="line">• 查看端口号:netstat -an | grep 端口号(3306) </span><br><span class="line">• 查看服务器ip : ifconfig </span><br><span class="line">• 查看网络是否能正常使用 </span><br><span class="line">• ping 外网地址 查看是否能访问外网 </span><br><span class="line">• ping 内网ip 查看是否能访问内网 </span><br><span class="line"></span><br><span class="line">• 权限命令 :chmod 777 文件 赋权</span><br><span class="line"></span><br><span class="line">• 查看cpu :top </span><br><span class="line">• 查看磁盘信息 : df -h </span><br><span class="line">• 查看内存信息: free </span><br><span class="line">• 切换管理员账户：su，然后输入密码</span><br><span class="line"></span><br><span class="line">• 连接另一台服务器</span><br><span class="line">ssh 用户名@ip</span><br><span class="line"></span><br><span class="line">• 从一台服务器推数据到其他服务器</span><br><span class="line">scp -r  文件夹  用户名@ip:/opt/soft（目标文件夹）</span><br><span class="line"></span><br><span class="line">• 从当前服务器拉取目标服务器的数据</span><br><span class="line">scp 用户名@ip:/opt/soft/test.txt（目标文件、文件夹） /opt/sofeware(当前服务器存储地址）</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Linux简介&quot;&gt;&lt;a href=&quot;#Linux简介&quot; class=&quot;headerlink&quot; title=&quot;Linux简介&quot;&gt;&lt;/a&gt;Linux简介&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    <category term="Linux" scheme="http://sunjunyu.cn/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://sunjunyu.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>SQL操作</title>
    <link href="http://sunjunyu.cn/2020/05/27/sql%E6%93%8D%E4%BD%9C/"/>
    <id>http://sunjunyu.cn/2020/05/27/sql%E6%93%8D%E4%BD%9C/</id>
    <published>2020-05-26T16:00:00.000Z</published>
    <updated>2022-10-10T11:01:16.232Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">数据库顾名思义就是存储数据和特殊文件的仓库，由表组成。</span><br><span class="line">1.一列存储相同类型的内容：字段数据</span><br><span class="line">2.一行存储某个事物的相关信息：记录</span><br><span class="line"></span><br><span class="line">数据库分为两种类型分别为*关系型数据库*和*非关系型数据库*</span><br><span class="line">关系型数据库：mysql、Oracle、SqlServer等</span><br><span class="line">非关系型数据库：MongoDB、Redis等</span><br></pre></td></tr></table></figure></blockquote><h3 id="什么是SQL语句"><a href="#什么是SQL语句" class="headerlink" title="什么是SQL语句"></a>什么是SQL语句</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">所有的数据库都是由sql语句来进行控制的。</span><br></pre></td></tr></table></figure><h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">安装mysql进行练习，也可直接使用禅道自带的MariaDB，MariaDB是由mysql演变而成的。</span><br><span class="line">个人使用的是mysql进行练习。</span><br></pre></td></tr></table></figure><p>注！：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.自己安装的mysql和禅道自带的服务只能开一个</span><br><span class="line">2.禅道数据库密码可以开启禅道在“密码”--“数据库密码”中修改。</span><br></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">登录</span><br><span class="line">mysql -uroot -p12345678  </span><br><span class="line">-u:user(用户) </span><br><span class="line">-p:password(密码)</span><br><span class="line"></span><br><span class="line">查看数据库编码格式</span><br><span class="line">show create database 库名;</span><br><span class="line"></span><br><span class="line">单独修改表的编码方式</span><br><span class="line">alter table 表名 canvert to charset=utf8;</span><br><span class="line"></span><br><span class="line">显示时间</span><br><span class="line">select now();</span><br><span class="line"></span><br><span class="line">显示数据库版本</span><br><span class="line">select version();</span><br></pre></td></tr></table></figure><h3 id="数据”库”操作"><a href="#数据”库”操作" class="headerlink" title="数据”库”操作"></a>数据”库”操作</h3><h4 id="查看所有数据库-show"><a href="#查看所有数据库-show" class="headerlink" title="查看所有数据库 show"></a>查看所有数据库 show</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><h4 id="创建数据库create-酷睿特"><a href="#创建数据库create-酷睿特" class="headerlink" title="创建数据库create    酷睿特"></a>创建数据库create    酷睿特</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create database 库名 charset=utf8;</span><br><span class="line"></span><br><span class="line">注！：</span><br><span class="line">创建数据库的时候，需要给定编码方式---charset=utf8(中文编码)</span><br></pre></td></tr></table></figure><h4 id="切换-x2F-进入数据库-use-柚子"><a href="#切换-x2F-进入数据库-use-柚子" class="headerlink" title="切换&#x2F;进入数据库 use   柚子"></a>切换&#x2F;进入数据库 use   柚子</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use 库名;</span><br></pre></td></tr></table></figure><h4 id="删除数据库-drop-赵普"><a href="#删除数据库-drop-赵普" class="headerlink" title="删除数据库 drop      赵普"></a>删除数据库 drop      赵普</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database 库名;</span><br></pre></td></tr></table></figure><h3 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h3><h4 id="创建表-create-酷睿特"><a href="#创建表-create-酷睿特" class="headerlink" title="创建表 create       酷睿特"></a>创建表 create       酷睿特</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(字段 类型 约束条件,字段2 类型 约束条件,字段3 类型 约束条件);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">类型: </span><br><span class="line">int(数字) </span><br><span class="line">int unsigned(无符号整型),</span><br><span class="line">varchar(20):字符串</span><br><span class="line">float:浮点</span><br><span class="line">decimal:浮点</span><br><span class="line">text:文本</span><br><span class="line">date:日期</span><br><span class="line">datetime:日期+时分秒</span><br><span class="line">time: 时分秒</span><br><span class="line">enum:枚举</span><br><span class="line"></span><br><span class="line">约束条件:</span><br><span class="line">not null: 不能为空</span><br><span class="line">PRIMARY KEY:主键,在表中唯一</span><br><span class="line">AUTO_INCREMENT:自增, 配合主键用 </span><br><span class="line">UNIQUE:唯一</span><br><span class="line">default: 设置默认值的</span><br></pre></td></tr></table></figure><h4 id="修改表结构-alter-欧福特"><a href="#修改表结构-alter-欧福特" class="headerlink" title="修改表结构 alter    欧福特"></a>修改表结构 alter    欧福特</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">添加字段</span><br><span class="line">alter table 表名 add 字段 类型 约束;</span><br><span class="line"></span><br><span class="line">删除字段</span><br><span class="line">alter table 表名 drop 字段;</span><br></pre></td></tr></table></figure><h4 id="增（插入数据）insert-因s儿特"><a href="#增（插入数据）insert-因s儿特" class="headerlink" title="增（插入数据）insert     因s儿特"></a>增（插入数据）insert     因s儿特</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名 values(数据1，数据2);</span><br><span class="line"></span><br><span class="line">插入多条数据</span><br><span class="line">insert into 表名 values(数据1,数据2),(数据1,数据2);</span><br><span class="line"></span><br><span class="line">插入部分数据</span><br><span class="line">insert into 表名(字段1,字段2) values(数据1,数据2);</span><br></pre></td></tr></table></figure><h4 id="删（删除数据）delete-地雷特"><a href="#删（删除数据）delete-地雷特" class="headerlink" title="删（删除数据）delete    地雷特"></a>删（删除数据）delete    地雷特</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from 表名 where 条件;</span><br></pre></td></tr></table></figure><h4 id="改（修改数据）-updata"><a href="#改（修改数据）-updata" class="headerlink" title="改（修改数据） updata"></a>改（修改数据） updata</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updata 表名 set 字段=新数据，字段2=新数据 where 条件;</span><br></pre></td></tr></table></figure><h4 id="查（查询数据）-select-斯莱特"><a href="#查（查询数据）-select-斯莱特" class="headerlink" title="查（查询数据） select     斯莱特"></a>查（查询数据） select     斯莱特</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">查询所有</span><br><span class="line">select * from 表名;</span><br><span class="line"></span><br><span class="line">查询符合条件的数据</span><br><span class="line">select * from 表名 where 条件;</span><br><span class="line"></span><br><span class="line">查询符合条件并只显示部分需要的字段</span><br><span class="line">select 字段,字段2 from 表名 where 条件;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">条件：</span><br><span class="line">逻辑运算：and(与) or(或) not(非)</span><br><span class="line">比较运算符：&gt;,&lt;,=,&gt;=,&lt;=,!=</span><br><span class="line">between and 90:在80~90之间，连续区间</span><br><span class="line">in:不连续区间，固定的数字</span><br></pre></td></tr></table></figure><h4 id="模糊查询-like-来客"><a href="#模糊查询-like-来客" class="headerlink" title="模糊查询  like    来客"></a>模糊查询  like    来客</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">查询包含某个字的数据</span><br><span class="line">select * from 表名 where 字段 like &quot;%X%&quot;;</span><br><span class="line"></span><br><span class="line">查询以某个字开头的数据</span><br><span class="line">select * from 表名 where 字段 like &quot;X_%&quot;;</span><br><span class="line"></span><br><span class="line">查询两个字中只知道开头的数据</span><br><span class="line">select * from 表名 where 字段 like &quot;X_&quot;;</span><br></pre></td></tr></table></figure><h4 id="排序-order-by-欧的白"><a href="#排序-order-by-欧的白" class="headerlink" title="排序  order by       欧的白"></a>排序  order by       欧的白</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">升序</span><br><span class="line">select * from 表名 order by 字段 asc;</span><br><span class="line"></span><br><span class="line">降序</span><br><span class="line">select * from 表名 order by 字段 desc,字段2 desc;</span><br></pre></td></tr></table></figure><h4 id="分页-limit-n-m-厘米特"><a href="#分页-limit-n-m-厘米特" class="headerlink" title="分页  limit n,m    厘米特"></a>分页  limit n,m    厘米特</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名 where 字段&gt;=XX limit X,X;</span><br><span class="line"></span><br><span class="line">注！：</span><br><span class="line">limit要放在where的后面</span><br><span class="line"></span><br><span class="line">limit n      查询n条数据</span><br><span class="line">limit n,m</span><br><span class="line">m:查询的起始位置，索引（从0开始），（页数-1）*每页的数量</span><br><span class="line">n:查询的条数</span><br></pre></td></tr></table></figure><h4 id="分组-group-by，割肉铺白-group-concat-割肉铺肯卡特"><a href="#分组-group-by，割肉铺白-group-concat-割肉铺肯卡特" class="headerlink" title="分组 group by，割肉铺白    group_concat() 割肉铺肯卡特"></a>分组 group by，割肉铺白    group_concat() 割肉铺肯卡特</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">男女,未知性别的人各多少</span><br><span class="line">select sex,count(*) from stu group by sex;</span><br><span class="line">根据性别分组,显示各个组的性别和姓名</span><br><span class="line"> select sex,name from stu order by sex;</span><br><span class="line"> select sex,group_concat(name) from stu group by sex;</span><br><span class="line"> 查询平均年龄&gt;18的组及对应的姓名</span><br><span class="line"> select sex,group_concat(name) from stu group by sex having avg(age)&gt;18;</span><br><span class="line">按性别分组并查询年龄大于18的人</span><br><span class="line">  select sex,group_concat(name) from stu where age&gt;18 group by sex;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">聚合函数/组函数:</span><br><span class="line">count(字段) 个数</span><br><span class="line">sum(字段) 总数</span><br><span class="line">avg 平均数</span><br><span class="line">max 最大值</span><br><span class="line">min 最小值</span><br></pre></td></tr></table></figure><h4 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段 from 表名 where 字段=(select 关联字段 from 表名 where 字段=&quot;&quot;);</span><br></pre></td></tr></table></figure><h4 id="内连接-inner-join-on"><a href="#内连接-inner-join-on" class="headerlink" title="内连接  inner join on"></a>内连接  inner join on</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from customer c inner join orders o on c.id=o.customer_id; </span><br><span class="line">select * from customer,orders where customer.id=orders.customer_id; </span><br><span class="line">select * from customer c,orders o where c.id=o.customer_id;</span><br></pre></td></tr></table></figure><h4 id="左外连接-left-join-on"><a href="#左外连接-left-join-on" class="headerlink" title="左外连接 left join on"></a>左外连接 left join on</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from customer c left join orders o on c.id=o.customer_id;</span><br><span class="line"># 从学生表和成绩表中查出学生的总分，要求null显示为0</span><br><span class="line">select name,ifNULL(sum(c.score),0) as &quot;总分&quot; from student s left join course c on c.id=s.sid group by s.sid;</span><br></pre></td></tr></table></figure><h4 id="右外连接-right-join-on"><a href="#右外连接-right-join-on" class="headerlink" title="右外连接 right join on"></a>右外连接 right join on</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from customer c right join orders o on c.id=o.customer_id;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据库&lt;/h3&gt;&lt;blockquote&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class</summary>
      
    
    
    
    <category term="SQL" scheme="http://sunjunyu.cn/categories/SQL/"/>
    
    
    <category term="SQL" scheme="http://sunjunyu.cn/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>软件测试</title>
    <link href="http://sunjunyu.cn/2020/05/26/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    <id>http://sunjunyu.cn/2020/05/26/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/</id>
    <published>2020-05-25T16:00:00.000Z</published>
    <updated>2022-10-12T00:52:57.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件测试模型"><a href="#软件测试模型" class="headerlink" title="软件测试模型"></a>软件测试模型</h2><h3 id="V模型"><a href="#V模型" class="headerlink" title="V模型"></a>V模型</h3><p><img src="https://sunjunyu.cn/images/V%E6%A8%A1%E5%9E%8B.jpg"></p><h3 id="W模型"><a href="#W模型" class="headerlink" title="W模型"></a>W模型</h3><p><img src="https://sunjunyu.cn/images/M%E6%A8%A1%E5%9E%8B.jpg"></p><h2 id="软件测试的分类"><a href="#软件测试的分类" class="headerlink" title="软件测试的分类"></a>软件测试的分类</h2><p><img src="https://sunjunyu.cn/images/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%9A%84%E5%88%86%E7%B1%BB.jpg"></p><h2 id="测试计划的内容"><a href="#测试计划的内容" class="headerlink" title="测试计划的内容"></a>测试计划的内容</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">测试目的、测试资源、测试范围、测试风险、人员分工、测试策略、测试准则、测试进度、测试输出</span><br></pre></td></tr></table></figure><h3 id="测试目的"><a href="#测试目的" class="headerlink" title="测试目的"></a>测试目的</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.测试编写的结构</span><br><span class="line">- 目的的总体概述</span><br><span class="line">- 包含详细描述</span><br><span class="line">2.测试目的编写的内容</span><br><span class="line">- 程序是否满足需求</span><br><span class="line">- 程序是否存在BUG</span><br><span class="line">- 系统或产品顺利发布</span><br></pre></td></tr></table></figure><h3 id="测试资源"><a href="#测试资源" class="headerlink" title="测试资源"></a>测试资源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.人力资源</span><br><span class="line">- 职务xxx</span><br><span class="line">- 姓名测试工程师</span><br><span class="line">- 职责负责某某软件某某模块的测试</span><br><span class="line">2.系统资源</span><br><span class="line">- 硬件：cpu、主板、内存...</span><br><span class="line">- 软件环境（系统）：windows、CentOS 7、iOS等</span><br></pre></td></tr></table></figure><h3 id="测试范围"><a href="#测试范围" class="headerlink" title="测试范围"></a>测试范围</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">测试对象、测试的特性、不测试的特性</span><br></pre></td></tr></table></figure><h3 id="测试风险"><a href="#测试风险" class="headerlink" title="测试风险"></a>测试风险</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">人员不足、技术有限、软件依赖环境不完备、工具不足、需求变更。</span><br></pre></td></tr></table></figure><p>案例：<br>本次测试活动从<strong>人</strong>、<strong>料</strong>、<strong>法</strong>、<strong>环</strong>、<strong>时</strong>进行风险分析。<br><strong>人，即测试人员：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.业务不熟：测试人员对被测系统的业务流程不熟悉，体现在对需求的理解上把握不准、理解不透彻、理解错误等。</span><br><span class="line">2.测试人员变动：离职、岗位调动、请假等。</span><br><span class="line">3.定位效应：测试过的可靠功能，特别是多次回归且没有发现问题，在此后往往会认为此功能是可靠的。</span><br></pre></td></tr></table></figure><p><strong>料，即测试相关文档和资料：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.Spec(详细规格说明书)缺失：只有PRD(项目需求概要说明书)，没有Spec。</span><br><span class="line">2.需求变更</span><br><span class="line">3.测试用例/数据设计不充分：由于测试人员的个人因素或时间的限制等方面导致。</span><br></pre></td></tr></table></figure><p><strong>法，即测试方法和实施：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.错误或缺失测试方法：对功能点没有采用正确的测试方法，或某些测试方法没有，被忽视，如边界测试等，导致测试不充分。</span><br><span class="line">2.场景的缺失或部分缺失：Spec非常详细，所有的精力放在功能点的测试上，忽视了针对业务场景的测试。</span><br><span class="line">3.测试用例实施不充分：测试用例由于各种原因没有完全测试，如在回归测试中。</span><br></pre></td></tr></table></figure><p><strong>环，即测试环境：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.被测软件版本不统一：没有有效的配置管理，这种情况及易出现。</span><br><span class="line">2.测试软件环境不一致：测试员之间或和开发之间的操作系统类型不一致、操作系统的干净程度不一致。</span><br><span class="line">3.测试硬件环境不一致：测试员之间或和开发的设备不一致，如CPU频率，内存大小等。</span><br><span class="line">4.测试硬件未及时到位。</span><br></pre></td></tr></table></figure><p><strong>时，即测试时间：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">测试时间不足：里程碑之间留给测试的时间无法满足全测试要求。</span><br></pre></td></tr></table></figure><h3 id="人员分工"><a href="#人员分工" class="headerlink" title="人员分工"></a>人员分工</h3><p><img src="https://sunjunyu.cn/images/%E4%BA%BA%E5%91%98%E5%88%86%E5%B7%A5.jpg"></p><h3 id="测试策略"><a href="#测试策略" class="headerlink" title="测试策略"></a>测试策略</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">都需要那些测试，如黑盒测试，用那些方式、白盒测试用那些方式等等。</span><br></pre></td></tr></table></figure><h3 id="测试准则"><a href="#测试准则" class="headerlink" title="测试准则"></a>测试准则</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 启动准则：满足什么情况可以进行测试</span><br><span class="line">- 暂停准则：遇到什么情况测试要暂停</span><br><span class="line">- 再启动准则：在什么情况下可以重新启动测试</span><br><span class="line">- 结束准则：什么情况可以停止测试</span><br></pre></td></tr></table></figure><p><img src="https://sunjunyu.cn/images/%E6%B5%8B%E8%AF%95%E5%87%86%E5%88%99-%E9%9C%80%E8%A6%81%E6%BB%A1%E8%B6%B3.jpg"></p><p><img src="https://sunjunyu.cn/images/%E6%B5%8B%E8%AF%95%E5%87%86%E5%88%99-%E5%90%AF%E5%8A%A8%E6%9A%82%E5%81%9C.jpg"></p><h3 id="测试进度"><a href="#测试进度" class="headerlink" title="测试进度"></a>测试进度</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">测试进度需要包含一下数据：</span><br><span class="line">测试任务、负责人、预期开始时间、预期结束时间、时间进度、备注等。</span><br></pre></td></tr></table></figure><p>例：<img src="https://sunjunyu.cn/images/%E6%B5%8B%E8%AF%95%E5%B7%A5%E4%BD%9C%E8%BF%9B%E5%BA%A6%E8%A1%A8.jpg"></p><h3 id="测试输出"><a href="#测试输出" class="headerlink" title="测试输出"></a>测试输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这部分需要规划测试任务中所有文档的输出！</span><br><span class="line">根据项目特点进行规划：测试计划、测试设计说明书、测试案例说明书、测试规程、测试日志、测试问题报告、测试分析报告。</span><br><span class="line">如果需要某些文档合并为一篇文档，例如把测试计划说明和测试案例说明书结合在一篇文档中，需要进行说明</span><br><span class="line">最后，使用XMind总结测试计划</span><br></pre></td></tr></table></figure><h2 id="测试用例包含那些内容"><a href="#测试用例包含那些内容" class="headerlink" title="测试用例包含那些内容"></a>测试用例包含那些内容</h2><p>测试用例的定义：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">测试用例就是为某个业务目标，而编制的一些测试数据、执行条件以及预期结果组成的案例。</span><br></pre></td></tr></table></figure><p>测试用例包含以下16个要素：（9个核心）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">用例ID：用例的编号</span><br><span class="line">用例标题：需要做到见名知意</span><br><span class="line">所属模块：注明此用例属于那个功能模块</span><br><span class="line">优先级：  要分出先后（功能主要程度）</span><br><span class="line">前置条件：测试这个功能时需要的一些资源（如管理员账号或普通用户账号等）</span><br><span class="line">操作步骤：打开这个界面的顺序</span><br><span class="line">测试数据：输入的内容</span><br><span class="line">预期结果：知道操作步骤和测试数据后结果就知道了（应该有的结果）</span><br><span class="line">实际结果：于预期结果不同（大概率是BUG）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">通过否： y/n</span><br><span class="line">bugID: bug编号</span><br><span class="line">编写人员：编写用例的人员名字</span><br><span class="line">编写时间：</span><br><span class="line">测试人员：测试人员名字</span><br><span class="line">测试时间：</span><br><span class="line">备注：</span><br></pre></td></tr></table></figure><h2 id="设计测试用例的方法：7个方法"><a href="#设计测试用例的方法：7个方法" class="headerlink" title="设计测试用例的方法：7个方法"></a>设计测试用例的方法：7个方法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">设计用例的七个方法：</span><br><span class="line">- 等价类划分法</span><br><span class="line">- 边界值分析法</span><br><span class="line">- 场景法</span><br><span class="line">- 错误推测法</span><br><span class="line">- 判定表</span><br><span class="line">- 因果图</span><br><span class="line">- 正交实验法</span><br></pre></td></tr></table></figure><h3 id="等价类划分法"><a href="#等价类划分法" class="headerlink" title="等价类划分法"></a>等价类划分法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">https://sunjunyu.cn/images/等价，顾名思义就是价值相同的意思，等价类划分法就是把可能要使用的数据进行价值分类，每一类取一些具有代表性的数据进行测试。</span><br><span class="line"></span><br><span class="line">分类：</span><br><span class="line">有效等价类：符合《需求说明书》，输入合理的数据集合</span><br><span class="line">无效等价类：不符合《需求说明书》，输入不合理的数据集合</span><br><span class="line"></span><br><span class="line">类型：</span><br><span class="line">取值范围：输入学生成绩0-100</span><br><span class="line">恒等类型：只有一个结果是正确的，其他都是错误的（彩票一等奖）</span><br><span class="line">布尔值型：通过是否进行选择，（同意协议）</span><br><span class="line">枚举类型：给出选项内容，只要符合一个就可以（冲话费）</span><br><span class="line">规则类型：规定要求，满足要求就可以（邮箱）</span><br><span class="line">无要求文本框类型：任意字符都可输入，中文、英文，符号等（反馈信息）</span><br></pre></td></tr></table></figure><p>案例：<img src="https://sunjunyu.cn/images/%E7%AD%89%E4%BB%B7%E7%B1%BB%E6%A1%88%E4%BE%8B.jpg"></p><p>结果：</p><p><img src="https://sunjunyu.cn/images/%E7%AD%89%E4%BB%B7%E7%B1%BB%E6%A1%88%E4%BE%8B%E7%BB%93%E6%9E%9C.jpg"></p><h3 id="边界值分析法"><a href="#边界值分析法" class="headerlink" title="边界值分析法"></a>边界值分析法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">定义：</span><br><span class="line">边界值分析法是取高于或者低于边界的一些数据进行测试。</span><br><span class="line"></span><br><span class="line">原因：</span><br><span class="line">避免程序开发时循环体取数时搞错&gt;&lt;=</span><br><span class="line"></span><br><span class="line">确定边界值的方法:</span><br><span class="line">边界值分为上点、离点、内点。</span><br><span class="line">上点：是指边界上的点（一段有序数组的头和尾就是上点）</span><br><span class="line">内点：范围内的点（一段有序数组从头到尾之间的所有都是内点）</span><br><span class="line">离点：距离上点最近的一个点。（开内闭外取值）</span><br><span class="line"></span><br><span class="line">开区间: 不包含=的,   可以使用()表示</span><br><span class="line">闭区间: 包含等于的, 可以使用[]表示</span><br><span class="line"></span><br><span class="line">例如成绩:</span><br><span class="line">0&lt;=X&gt;=100   左闭右闭     [0,100]    离点：-1  2  101</span><br><span class="line">0&lt;X&gt;=100    左开右闭     (0,100]    离点：1   2  101</span><br><span class="line">0&lt;=X&gt;100    右闭左开     [0,100)    离点：-1  2  99</span><br><span class="line">0&lt;X&gt;100     左开右开     (0,100)    离点：1   2  99</span><br></pre></td></tr></table></figure><h3 id="场景法"><a href="#场景法" class="headerlink" title="场景法"></a>场景法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">定义：</span><br><span class="line">对功能点或业务场景的描述进行业务模拟，从而提取高效的测试方法。即画业务流程图。</span><br><span class="line"></span><br><span class="line">基本流:正确完成的流程    (正例)</span><br><span class="line">备选流:存在异常的流程，对于基本流每一步都取反     (反例)</span><br></pre></td></tr></table></figure><p>原理图：</p><p><img src="https://sunjunyu.cn/images/%E5%9C%BA%E6%99%AF%E6%B3%95%E5%8E%9F%E7%90%86%E5%9B%BE.jpg"></p><p>ATM引入场景法：</p><p><img src="https://sunjunyu.cn/images/ATM%E6%9C%BA%E5%9C%BA%E6%99%AF%E6%B3%95.jpg"></p><h3 id="你提交的BUG都提交那些内容"><a href="#你提交的BUG都提交那些内容" class="headerlink" title="你提交的BUG都提交那些内容"></a>你提交的BUG都提交那些内容</h3><p>缺陷编号、严重程度、优先级、所属模块、缺陷状态、测试环境、测试机、指派人、缺陷类型、缺陷标题、重现步骤、预期结果、实际结果、提交人、提交时间、测试用例、附件</p><p><img src="https://sunjunyu.cn/images/%E6%8F%90%E4%BA%A4bug%E7%9A%84%E5%86%85%E5%AE%B9.jpg"></p><h3 id="bug流转的过程-x2F-bug的状态"><a href="#bug流转的过程-x2F-bug的状态" class="headerlink" title="bug流转的过程&#x2F;bug的状态"></a>bug流转的过程&#x2F;bug的状态</h3><p><img src="https://sunjunyu.cn/images/Bug%E7%9A%84%E6%B5%81%E8%BD%AC%E7%8A%B6%E6%80%81.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;软件测试模型&quot;&gt;&lt;a href=&quot;#软件测试模型&quot; class=&quot;headerlink&quot; title=&quot;软件测试模型&quot;&gt;&lt;/a&gt;软件测试模型&lt;/h2&gt;&lt;h3 id=&quot;V模型&quot;&gt;&lt;a href=&quot;#V模型&quot; class=&quot;headerlink&quot; title=&quot;V模型</summary>
      
    
    
    
    <category term="软件测试" scheme="http://sunjunyu.cn/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试" scheme="http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    <category term="测试模型" scheme="http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95%E6%A8%A1%E5%9E%8B/"/>
    
    <category term="测试分类" scheme="http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/"/>
    
    <category term="测试用例方法" scheme="http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
</feed>
