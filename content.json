{"meta":{"title":"LanAn Blog","subtitle":"","description":"","author":"蓝桉","url":"http://example.com","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2022-09-17T06:12:46.193Z","updated":"2022-09-17T05:22:54.404Z","comments":false,"path":"/404.html","permalink":"http://example.com/404.html","excerpt":"","text":""},{"title":"关于","date":"2022-09-17T05:22:54.404Z","updated":"2022-09-17T05:22:54.404Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"书单","date":"2022-09-17T05:22:54.404Z","updated":"2022-09-17T05:22:54.404Z","comments":false,"path":"books/index.html","permalink":"http://example.com/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2022-09-17T06:03:36.463Z","updated":"2022-09-17T05:22:54.405Z","comments":false,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2022-09-17T05:22:54.405Z","updated":"2022-09-17T05:22:54.405Z","comments":true,"path":"links/index.html","permalink":"http://example.com/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2022-09-17T05:22:54.405Z","updated":"2022-09-17T05:22:54.405Z","comments":false,"path":"repository/index.html","permalink":"http://example.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2022-09-17T05:22:54.405Z","updated":"2022-09-17T05:22:54.405Z","comments":false,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"SQL操作","slug":"sql操作","date":"2022-09-20T02:26:28.637Z","updated":"2022-09-20T10:27:14.585Z","comments":true,"path":"2022/09/20/sql操作/","link":"","permalink":"http://example.com/2022/09/20/sql%E6%93%8D%E4%BD%9C/","excerpt":"","text":"1、什么是数据库： 1234567数据库顾名思义就是存储数据和特殊文件的仓库，由表组成。1.一列存储相同类型的内容：字段数据2.一行存储某个事物的相关信息：记录数据库分为两种类型分别为*关系型数据库*和*非关系型数据库*关系型数据库：mysql、Oracle、SqlServer等非关系型数据库：MongoDB、Redis等 2、什么是SQL语句1所有的数据库都是由sql语句来进行控制的。 3、SQL12安装mysql进行练习，也可直接使用禅道自带的MariaDB，MariaDB是由mysql演变而成的。此次使用mysql进行练习。 注！： 121.自己安装的mysql和禅道自带的服务只能开一个2.禅道数据库密码可以开启禅道在“密码”--“数据库密码”中修改。 其他12345678910111213141516登录mysql -uroot -p12345678 -u:user(用户) -p:password(密码)查看数据库编码格式show create database 库名;单独修改表的编码方式alter table 表名 canvert to charset=utf8;显示时间select now();显示数据库版本select version(); 4.数据”库”操作查看所有数据库 show1show databases; 创建数据库create1234create database 库名 charset=utf8;注！：创建数据库的时候，需要给定编码方式---charset=utf8(中文编码) 切换&#x2F;进入数据库 use1use 库名; 删除数据库 drop1drop database 库名; 5.表操作创建表 create1create table 表名(字段 类型 约束条件,字段2 类型 约束条件,字段3 类型 约束条件); 123456789101112131415161718类型: int(数字) int unsigned(无符号整型),varchar(20):字符串float:浮点decimal:浮点text:文本date:日期datetime:日期+时分秒time: 时分秒enum:枚举约束条件:not null: 不能为空PRIMARY KEY:主键,在表中唯一AUTO_INCREMENT:自增, 配合主键用 UNIQUE:唯一default: 设置默认值的 修改表结构 alter12345添加字段alter table 表名 add 字段 类型 约束;删除字段alter table 表名 drop 字段; 增（插入数据）insert1234567insert into 表名 values(数据1，数据2);插入多条数据insert into 表名 values(数据1,数据2),(数据1,数据2);插入部分数据insert into 表名(字段1,字段2) values(数据1,数据2); 删（删除数据）delete1delete from 表名 where 条件; 改（修改数据） updata1updata 表名 set 字段=新数据，字段2=新数据 where 条件; 查（查询数据） select12345678查询所有select * from 表名;查询符合条件的数据select * from 表名 where 条件;查询符合条件并只显示部分需要的字段select 字段,字段2 from 表名 where 条件; 12345条件：逻辑运算：and(与) or(或) not(非)比较运算符：&gt;,&lt;,=,&gt;=,&lt;=,!=between and 90:在80~90之间，连续区间in:不连续区间，固定的数字 模糊查询 like12345678查询包含某个字的数据select * from 表名 where 字段 like &quot;%X%&quot;;查询以某个字开头的数据select * from 表名 where 字段 like &quot;X_%&quot;;查询两个字中只知道开头的数据select * from 表名 where 字段 like &quot;X_&quot;; 排序 order by12345升序select * from 表名 order by 字段 asc;降序select * from 表名 order by 字段 desc,字段2 desc; 分页 limit n,m123456789select * from 表名 where 字段&gt;=XX limit X,X;注！：limit要放在where的后面limit n 查询n条数据limit n,mm:查询的起始位置，索引（从0开始），（页数-1）*每页的数量n:查询的条数 分组 group by，group_concat()1234567891011121314151617男女,未知性别的人各多少select sex,count(*) from stu group by sex;根据性别分组,显示各个组的性别和姓名 select sex,name from stu order by sex; select sex,group_concat(name) from stu group by sex; 查询平均年龄&gt;18的组及对应的姓名 select sex,group_concat(name) from stu group by sex having avg(age)&gt;18;按性别分组并查询年龄大于18的人 select sex,group_concat(name) from stu where age&gt;18 group by sex; 聚合函数/组函数:count(字段) 个数sum(字段) 总数avg 平均数max 最大值min 最小值 子查询1select 字段 from 表名 where 字段=(select 关联字段 from 表名 where 字段=&quot;&quot;);","categories":[{"name":"SQL","slug":"SQL","permalink":"http://example.com/categories/SQL/"}],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://example.com/tags/SQL/"}]},{"title":"软件测试的分类及测试计划、测试用例","slug":"软件测试","date":"2022-09-17T12:54:47.864Z","updated":"2022-09-20T10:27:36.593Z","comments":true,"path":"2022/09/17/软件测试/","link":"","permalink":"http://example.com/2022/09/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/","excerpt":"","text":"1.*软件测试的分类 2.*测试计划的内容1.测试目的12345671.测试编写的结构 - 目的的总体概述 - 包含详细描述2.测试目的编写的内容 - 程序是否满足需求 - 程序是否存在BUG - 系统或产品顺利发布 2.测试资源12345671.人力资源 - 职务 xxx - 姓名 测试工程师 - 职责 负责某某软件某某模块的测试2.系统资源 - 硬件：cpu、主板、内存... - 软件环境（系统）：windows、CentOS 7、iOS等 3.测试范围1测试对象、测试的特性、不测试的特性 4.测试风险1人员不足、技术有限、软件依赖环境不完备、工具不足、需求变更。 案例：本次测试活动从人、料、法、环、时进行风险分析。人，即测试人员： 1231. 业务不熟：测试人员对被测系统的业务流程不熟悉，体现在对需求的理解上把握不准、理解不透彻、理解错误等。2. 测试人员变动：离职、岗位调动、请假等。3. 定位效应：测试过的可靠功能，特别是多次回归且没有发现问题，在此后往往会认为此功能是可靠的。 料，即测试相关文档和资料： 1231. Spec(详细规格说明书)缺失：只有PRD(项目需求概要说明书)，没有Spec。2. 需求变更3. 测试用例/数据设计不充分：由于测试人员的个人因素或时间的限制等方面导致。 法，即测试方法和实施： 1231. 错误或缺失测试方法：对功能点没有采用正确的测试方法，或某些测试方法没有，被忽视，如边界测试等，导致测试不充分。2. 场景的缺失或部分缺失：Spec非常详细，所有的精力放在功能点的测试上，忽视了针对业务场景的测试。3. 测试用例实施不充分：测试用例由于各种原因没有完全测试，如在回归测试中。 环，即测试环境： 12341. 被测软件版本不统一：没有有效的配置管理，这种情况及易出现。2. 测试软件环境不一致：测试员之间或和开发之间的操作系统类型不一致、操作系统的干净程度不一致。3. 测试硬件环境不一致：测试员之间或和开发的设备不一致，如CPU频率，内存大小等。4. 测试硬件未及时到位。 时，即测试时间： 1测试时间不足：里程碑之间留给测试的时间无法满足全测试要求。 5.人员分工 6.测试策略1都需要那些测试，如黑盒测试，用那些方式、白盒测试用那些方式等等。 7.测试准则1234- 启动准则：满足什么情况可以进行测试- 暂停准则：遇到什么情况测试要暂停- 再启动准则：在什么情况下可以重新启动测试- 结束准则：什么情况可以停止测试 8.测试进度12测试进度需要包含一下数据：测试任务、负责人、预期开始时间、预期结束时间、时间进度、备注等。 例： 9.测试输出1234这部分需要规划测试任务中所有文档的输出！根据项目特点进行规划：测试计划、测试设计说明书、测试案例说明书、测试规程、测试日志、测试问题报告、测试分析报告。如果需要某些文档合并为一篇文档，例如把测试计划说明和测试案例说明书结合在一篇文档中，需要进行说明最后，使用XMind总结测试计划 3.*测试用例包含那些内容测试用例的定义： 1测试用例就是为某个业务目标，而编制的一些测试数据、执行条件以及预期结果组成的案例。 测试用例包含以下16个要素：（9个核心） 1234567891011121314151617用例标题：需要做到见名知意所属模块：注明此用例属于那个功能模块优先级： 要分出先后（功能主要程度）前置条件：测试这个功能时需要的一些资源（如管理员账号或普通用户账号等）操作步骤：打开这个界面的顺序测试数据：输入的内容预期结果：知道操作步骤和测试数据后结果就知道了（应该有的结果）实际结果：于预期结果不同（大概率是BUG）通过否： y/nbugID: bug编号编写人员：编写用例的人员名字编写时间：测试人员：测试人员名字测试时间：备注： 2、*设计测试用例的方法：7个方法12345678设计用例的七个方法：- 等价类划分法- 边界值分析法- 场景法- 错误推测法- 判定表- 因果图- 正交实验法 1.等价类划分法12345678910111213等价，顾名思义就是价值相同的意思，等价类划分法就是把可能要使用的数据进行价值分类，每一类取一些具有代表性的数据进行测试。分类：有效等价类：符合《需求说明书》，输入合理的数据集合无效等价类：不符合《需求说明书》，输入不合理的数据集合类型：取值范围：输入学生成绩0-100恒等类型：只有一个结果是正确的，其他都是错误的（彩票一等奖）布尔值型：通过是否进行选择，（同意协议）枚举类型：给出选项内容，只要符合一个就可以（冲话费）规则类型：规定要求，满足要求就可以（邮箱）无要求文本框类型：任意字符都可输入，中文、英文，符号等（反馈信息） 案例： 结果： 2.边界值分析法1234567891011121314151617181920定义：边界值分析法是取高于或者低于边界的一些数据进行测试。原因：避免程序开发时循环体取数时搞错&gt;&lt;=确定边界值的方法:边界值分为上点、离点、内点。上点：是指边界上的点（一段有序数组的头和尾就是上点）内点：范围内的点（一段有序数组从头到尾之间的所有都是内点）离点：距离上点最近的一个点。（开内闭外取值）开区间: 不包含=的, 可以使用()表示闭区间: 包含等于的, 可以使用[]表示例如成绩:0&lt;=X&gt;=100 左闭右闭 [0,100] 离点：-1 2 1010&lt;X&gt;=100 左开右闭 (0,100] 离点：1 2 1010&lt;=X&gt;100 右闭左开 [0,100) 离点：-1 2 990&lt;X&gt;100 左开右开 (0,100) 离点：1 2 99 3.场景法12345定义：对功能点或业务场景的描述进行业务模拟，从而提取高效的测试方法。即画业务流程图。基本流:正确完成的流程 (正例)备选流:存在异常的流程，对于基本流每一步都取反 (反例) 原理图： ATM引入场景法： 4.你提交的BUG都提交那些内容1缺陷编号、严重程度、优先级、所属模块、缺陷状态、测试环境、测试机、指派人、缺陷类型、缺陷标题、重现步骤、预期结果、实际结果、提交人、提交时间、测试用例、附件 bug流转的过程&#x2F;bug的状态","categories":[{"name":"测试","slug":"测试","permalink":"http://example.com/categories/%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"软件测试、测试用例","slug":"软件测试、测试用例","permalink":"http://example.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E3%80%81%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/"}]},{"title":"软件基础理论及BUG的定义、分类","slug":"软件基础","date":"2022-09-17T06:19:25.262Z","updated":"2022-09-20T10:27:25.137Z","comments":true,"path":"2022/09/17/软件基础/","link":"","permalink":"http://example.com/2022/09/17/%E8%BD%AF%E4%BB%B6%E5%9F%BA%E7%A1%80/","excerpt":"","text":"*开发模式：1234567891011121314151. 瀑布模型 - 将软件生命周期的各项活动规定为按固定顺序而连接的若干阶段工作，形如瀑布流水，最终得到软件产品的项目。2. 快速原型模型 - 快速原型模型的第一步是建造一个快速原型，实现客户或未来的用户与系统的交互。用户、客户随时提出需求，研发分析进行实现。3. 螺旋模型 - 螺旋模型他将瀑布模型和快速原型模型结合了起来，强调了其他模型所忽视的风险分析，特别适合用于大型复杂的系统。4. **迭代模型** - 迭代模型是一种于传统的瀑布式开发相反的软件开发过程，它弥补了传统开发方式的一些弱点，成功率和生产率更高。 - 迭代就是反复求精的过程，用绘画举例就是先画整体，在将每个部分进行细化。5. **增量模型** - 增量模型于建造大厦类似，都是一步一步来的，在这种模式下软件被分为一系列的增量构建，如设计、实现、集成、测试等，各个组件相辅相成最终形成的特定功能的代码 - 增量模型通俗来讲就是逐渐添加的模型。6. **敏捷开发模式** - 敏捷开发是一种以人为核心、迭代。循序渐进的开发方法，这种方法把软件项目的构建分成了多个子项目，子项目都具备集成和可运行的特征且每个子项目都可独立使用。 - 敏捷软件开发是一种按短迭代周期的工作，项目成型快，也就导致需要项目人员面对面交流， *软件分类：123456789101112131415161. 根据应用场景分类 - 工具类软件 - 游戏类软件 - 媒体类软件 - 电商类软件2. 根据软件结构分类 - 单机版软件：无网络状态下可以正常使用的安装类软件 - 分布式软件：需要客户端且需要网络才可使用的软件 - C/S架构软件 - 客户端需要安装相对应的软件 - C：client（客户端） - S：server（服务器） - B/S架构软件 - 客户端为浏览器 - B：browser（浏览器） - S：sever（服务器） *软件质量123456789101112131415161718191. 软件质量的概念 软件质量是指产品满足基本需求及隐藏需求的程度，需要满足产品界面更加美观、用户操作更便捷等。基本可以依据三个方面： - 满足需求规定 - 满足用户需求 - 满足用户隐式需求2. 软件质量模型 - 功能性 - 可靠性 - 可使用性 - 效率 - 可维护性 - 可移植性3. 影响软件质量的因素 - 需求模糊 - 软件开发缺乏规范性文件指导 - 开发人员问题 - 缺乏软件质量控制管理 软件开发生态1234567891. APP - APP就是应用程序，主要是安装在手机上的软件 - ios、安卓、鸿蒙2. 微信小程序 - 微信小程序是一种不需要下载就可以使用的应用，用户扫一扫或者搜一下就可以打开使用。3. 前端 - 前端也叫作web前端，对于网站来说通常指网站前台部分也就是用户可以看到的部分。4. 后端 - 后端开发就是服务器端开发，负责数据调动，数据传输等 软件开发流程123456- 项目启动阶段- 需求阶段- 设计阶段- 开发阶段- 测试阶段- 项目上线 *缺陷的定义1软件缺陷就是我们常说的bug，指在软件中存在影响程序正常运转的问题。 *软件缺陷产生的原因12345671. 需求不明确和变更 软件需求不清晰或者开发人员对需求理解偏差，导致软件设计时偏离用户的需求目标，造成软件功 能或特征上的缺陷。此外，开发过程中客户频繁更新需求也会影响软件最终的质量。2. 软件结构复杂3. 编码问题4. 项目期限短5. 使用新技术6. 软件开发缺乏规范性文件指导7. 缺乏软件质量控制管理 *软件缺陷分类123456789101112131415161718192021221. 测试种类 - 界面类 - 功能类 - 性能类 - 安全类 - 兼容性类2. 缺陷严重程度 - 严重 - 一般 - 次要 - 轻微3. 缺陷优先级 - 立刻解决 - 高优先级 - 正常排队 - 低优先级4. 缺陷发生的阶段 - 需求阶段 - 架构阶段 - 设计阶段 - 编码阶段 - 测试阶段 *软件测试的模型 V模型 1用户需求---需求分析---概要设计---详细设计---编码和实现---单元测试---集成测试---系统测试---验收测试 W模型 1234567需求分析---需求测试概要设计---概要测试详细设计---详细设计测试编码实现---单元测试模块集成---集成测试系统构建---系统测试系统安装---验收测试","categories":[{"name":"测试","slug":"测试","permalink":"http://example.com/categories/%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"软件基础理论","slug":"软件基础理论","permalink":"http://example.com/tags/%E8%BD%AF%E4%BB%B6%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/"}]}],"categories":[{"name":"SQL","slug":"SQL","permalink":"http://example.com/categories/SQL/"},{"name":"测试","slug":"测试","permalink":"http://example.com/categories/%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://example.com/tags/SQL/"},{"name":"软件测试、测试用例","slug":"软件测试、测试用例","permalink":"http://example.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E3%80%81%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/"},{"name":"软件基础理论","slug":"软件基础理论","permalink":"http://example.com/tags/%E8%BD%AF%E4%BB%B6%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/"}]}