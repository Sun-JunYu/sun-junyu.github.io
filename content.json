{"meta":{"title":"LanAn Blog","subtitle":"","description":"","author":"蓝桉","url":"http://sunjunyu.cn","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2022-09-17T06:12:46.193Z","updated":"2022-09-17T05:22:54.404Z","comments":false,"path":"/404.html","permalink":"http://sunjunyu.cn/404.html","excerpt":"","text":""},{"title":"关于","date":"2022-09-17T05:22:54.404Z","updated":"2022-09-17T05:22:54.404Z","comments":false,"path":"about/index.html","permalink":"http://sunjunyu.cn/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"书单","date":"2022-09-17T05:22:54.404Z","updated":"2022-09-17T05:22:54.404Z","comments":false,"path":"books/index.html","permalink":"http://sunjunyu.cn/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2022-09-17T06:03:36.463Z","updated":"2022-09-17T05:22:54.405Z","comments":false,"path":"categories/index.html","permalink":"http://sunjunyu.cn/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2022-09-17T05:22:54.405Z","updated":"2022-09-17T05:22:54.405Z","comments":true,"path":"links/index.html","permalink":"http://sunjunyu.cn/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2022-09-17T05:22:54.405Z","updated":"2022-09-17T05:22:54.405Z","comments":false,"path":"repository/index.html","permalink":"http://sunjunyu.cn/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2022-09-17T05:22:54.405Z","updated":"2022-09-17T05:22:54.405Z","comments":false,"path":"tags/index.html","permalink":"http://sunjunyu.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"测试高频面试题-功能测试","slug":"高频面试题-功能测试","date":"2022-09-11T16:00:00.000Z","updated":"2022-11-01T02:07:00.360Z","comments":true,"path":"2022/09/12/高频面试题-功能测试/","link":"","permalink":"http://sunjunyu.cn/2022/09/12/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/","excerpt":"","text":"1.app和web测试的相同点和不同点 ***123456789101112相同点：A.测试用例相同。B.同样的测试方法：都会依据效果图来检查UI,根据需求文档测试功能。C.都需要兼容性测试D.都需要测试应用系统的稳定性。不同点：A.App的安装卸载测试（全新安装，升级安装，第三方工具安装，第三方工具卸载，直接卸载删除）,web没有安装卸载一说B.app消息推送测试，手机授权测试，前后台切换。C.App的中断测试：来电中断，短信中断，蓝牙，闹钟，拔插数据线，手机锁定，手机断电，手机问题（系统死机重启）。D.兼容性测试：Web项目考虑不同内核的浏览器兼容，app需要考虑手机不同的操作系统（android/ios），不同的操作系统版本,不同机型，不同屏幕分辨率等。E.网路测试：不同网络与运营商，目前我国有三大运营商如：电信，移动，联通，不同的网络制式，如：GSM,CDMA,3G，4G，5G等，在不好或无网络的情况下的APP行为。F.app测试如果设备不足，可以考虑使用云测平台（百度云测，testin云测等）。 2.app测试的关注点&#x2F;app测试一般测哪些东西 ***1功能测试，安装卸载测试，升级测试，安全性测试，消息推送，前后台切换，ui测试，兼容性测试，网络环境测试，性能测试，中断测试 3.web测试的关注点 ***1功能测试，兼容性测试，ui测试 ,安全性测试 4.如何确保测试用例覆盖所有需求点 &#x2F;如何保证产品的质量**1234567891011测试用例覆盖率很难达到100%，越复杂的功能越难保证，只能说尽量提高测试覆盖率。通过以下手段可以提高覆盖率：1、编写测试用例前，检查相关需求、设计文档是否有问题（功能描述不清，设计逻辑缺陷），如有问题找相关设计或者开发问清楚。2、然后整理成需要覆盖的功能列表或者思维导图，功能列表包含新增和修改功能点，性能需求也要列出来（因为要整理对应的性能测试用例）3、需要对既有功能进行一个梳理（显性需求和隐形需求都要分析），还需要检查是否会与其他功能有交互，整理出影响点。4、把功能列表发给组员，并找时间进行会议评审，主要对功能等进行查漏补缺。5、最后才行进测试用例编写，注意编写规范。6、编写完毕后，把测试用例发给组员，开会进行评审，主要对检查点、用例规范进行查漏补缺。7、执行测试用例过程中，发现用例不完善或者错误，需对测试用例进行及时的修改与调优8、测试完毕后对漏测的bug进行测试用例补充。 5.你提交bug的时候提交哪些内容？***1标题，复现步骤，预期结果，实际结果，测试环境，优先级，严重程度，指派给谁，所属模块，附件，缺陷类型 6.bug状态&#x2F;bug流转过程 ** 12345678新建：刚发现的缺陷已指派：已经由测试人员将缺陷指派给开发人员进行处理已打开：开发人员正在修复缺陷已修复：开发人员完成缺陷修复，还未进行回归测试已拒绝：发开人员拒绝修复已延期：对缺陷进行延缓处理已关闭：由测试人员回归测试后，缺陷不存在了重新打开：由测试人员回归测试后，发现缺陷任然存在 7.开发不认bug&#x2F;如果你发现了一个bug，开发不认，怎么办？***12345671.找开发沟通，看他为什么不认,可能有两种情况2.第一种情况：开发可能说，产品改需求了， ----我们需要找产品确认，如果是改了，根据新需求改用例，改完重新测试 ---- 如果产品说没有改，把他们叫到一起，确认3.第二种情况：需求没有改，双方理解的需求不一致，一起找产品确定， ----开发理解的正确，根据新的理解改用例，改完重新测试 ----我们理解的正确，让开发改bug 8.bug不能复现咋办？ **123456A.首先考虑环境问题，看是否能够还原原来的环境B.尽量回想发生问题时的复现步骤，不要漏掉任何一个细节，按照步骤的组合尝试复现C.与开发人员配合，让开发人员对相应的代码检查，看是否通过代码层面检查出问题D.保留发生bug时的log，附加到提交的Bug中，希望可以通过log中找到一些蛛丝马迹。E.查看代码，也许是代码变更，引起的BugF.遇到问题就要提，不能放过任何一个Bug，在提交的Bug描述中加上一句话，那就是复现概率，尝试20次，出现一次或尝试10次，交给开发，开发会根据Bug的复现概率，调整改Bug的优先级。 9.你在项目中最经典的BUG是什么？&#x2F;你印象最深的一个bug ***123456789开放题，可以说涉及到前后端的问题,将定位饭分析的过程,之前讲过两个业务逻辑（processon上画过图）比如 小明在淘宝app 商品详情中 点击了添加购物车 ,然后进入购物车后发现购物车中没有该条商品.或者 小明在淘宝app中 支付了一笔订单(微信支付), 然后发现 本应该订单依然还在 待支付中, 待发货中没有该笔订单, 而小明的账户上的钱已经被扣除了.自己编类似的bug，然后给出分析和定位问题的过程最终问题是哪里的，你是怎么定位出来的 10.用例评审的流程，通过的规则&#x2F;审核内容是什么 *123456789101112131415161718192021222324252627282930313233两轮：内部评审，外部评审（产品，开发）评审内容：1.用例设计的结构安排是否清晰、合理,是否利于高效对需求进行覆盖。2.优先级安排是否合理。3.是否覆盖测试需求上的所有功能点4.用例是否具有很好可执行性.例如用例的前提条件、执行步骤、输入数据和期待结果是否清晰、正确；期待结果是否有明显的验证方法5.是否已经删除了冗余的用例6.是否包含充分的负面测试用例（反例）。充分的定义，如果在这里使用2/8法则，那就是4倍于正面用例的量，毕竟一个健壮的软件,其中80％的代码都是在“保护”20％的功能实现7.是否从用户层面来设计用户使用场景和使用流程的测试用例8.是否简洁，复用性强。例如，可将重复度高的步骤或过程抽取出来定义为一些可复用标准步骤。9.用例是否按照公司规定模板进行编写用例评审的检查项（不用背）：1.用例是否按照公司定义的模板进行编写2.用例的本身描述是否清晰，是否存在歧义3.用例内容是否正确，是否与需求目标一致4.用例的期望结果是否确定，唯一5.操作步骤应与描述一致6.是否覆盖了所有需求 **7.用例是否冗余 ** 8.是否具有可执行性9.是否是从用户层面来设计用户使用场景和使用流程的测试用例10.场景测试用例是否覆盖最复杂的业务流程11.是否包含正面，反面的用例 **12.对于系统自动生成的输出项是否注明了生成规则13.测试用例应包含对中间和后台数据的检查14.是否有正确的名称和编号15.是否标明优先级16.是否包含配置信息：测试环境，数据，前置条件，用户授权等17.测试步骤应具体，清晰18.自动化测试脚本必须带有注解（包括：目的，输入，期望结果等）19.非功能测试需求或不可测试需求是否再用例中列出并说明 11.你们公司测试计划谁写？有哪些内容 *12一般是测试经理/测试组长写，测试目的，测试资源，测试范围，测试风险（重点），人员分工（重点），测试策略，测试准则，测试进度（重点），测试输出 12.v模型和w模型 ** 13.测试用例（case）&#x2F;测试点该怎么写（给定业务说测试点，比如水杯测试点，抖音评论&#x2F;发红包&#x2F;转账&#x2F;朋友圈点赞&#x2F;登录测试点）分析：可以从 功能，性能，ui，易用性，安全，兼容性，app专项测试（如果是移动端项目的话） 这七方面展开说，采用总分的形式说，先说可以从五方面考虑，再每个方面细说，结合设计测试用例的方法- 微信红包：--功能-单个红包： 1、红包金额为空、0、0.01、200.00、200.01、199.99、2002、留言输入数字、字母、汉字、特殊字符3、留言长度4、留言复制粘贴5、表情选择收藏表情、其他表情6、删除表情、重新选择表情7、选择支付方式 零钱、银行卡、添加新卡支付。其中钱数&lt;红包钱数、其中钱数=红包钱数、其中钱数&gt;红包钱数8、使用指纹确认付款（正确的、错误的指纹）9、使用密码确认付款（正确的、错误的密码）10、红包成功发送后 相应支付方式中钱数减少（减少金额与红包金额一致）11、接受者能看到红包具体信息，红包金额、留言、表情均能正确显示12、红包被拆开后显示已领取，领取者零钱中增加正确金额，再次领取只能查看红包信息13、发红包者自己领红包14、红包24小时未被领取提示红包被退回，相应支付方式中钱数增加（增加金额与红包金额一致），对方不能领红包-- 功能-群发红包-普通红包：（只写了与单个红包不同的地方）1、红包个数 为空、0、001、100、99、1012、红包拆开每个金额一样 均为发红包时设置的单个金额对应的钱数3、红包被拆时，有相应提示4、发红包者自己领红包5、红包24小时内未被拆完，剩余钱被退回，相应支付方式中钱数增加-- 群发红包-拼手气红包：1、红包总额/红包个数&lt;0.012、红包每个人拆开金额不同，总金额与发红包设置的总额一致3、红包24小时内拆完后显示最佳手气4、红包24小时内未被拆完不显示最佳手气兼容性：安卓、苹果 不同型号版本手机UI测试：界面无错别字，风格统一, 和设计图保持一致中断测试：不同应用之间切换、断网、来电、短信、低电量、手机没电网络测试：2g/3g/4g/5g WiFi 移动联通电信 弱网 无网 - 朋友圈点赞：-- 功能测试1.点赞后是否显示结果；2.点赞后是否可以取消；3.点赞取消后是否可以重复点赞；4.共同好友点赞后，是否有消息提醒；5.非共同好友点赞后，是否有消息提醒；6.点击点赞人昵称，是否可以跳转到他/她的主页；7.自己能否给自己点赞；8.屏蔽了该用户，共同好友点赞是否提示；9.点赞人有备注时，是否展示备注昵称；10.点赞后删除好友，是否继续展示其点赞；-- UI界面测试1.界面是否简介美观；2.点赞后动态特效是否正常显示；3.朋友圈界面图片是否正常显示；4.朋友圈界面文字是否正常显示；-- 性能测试1.点赞人数过多是否能正常显示；2.同一时间点赞人数过多是否正常收到提示；、-- 安全测试1.发送部分可见的朋友圈，其余人不可见；2.发送部分可见的朋友圈，点赞后共同好友不可见；-- 弱网测试1.弱网环境下，点赞是否成功；2.弱网环境下，点赞的时间；-- 易用性测试发送部分可见，是否可以沿用上次的名单；- 淘宝搜索框：-- 功能测试：1.输入可查到结果的正常关键字，检索到的内容、链接准确性2.输入不可查到结果的关键字，有无错误信息提示3.输入一些特殊的内容，如空字符、特殊字符等，可引入等价类划分的方法等4.返回的商品结果排序：价格、销量、评价、综合5.返回结果庞大时，限制第一页的输出量，需支持翻页6.多选项搜索：关键字、品牌、产地、价格区间、 是否天猫、是否全国购7.是否支持模糊搜索，支持通配符的查询8.网速慢的情况下的搜索9.搜索结果为空的情况10.未登录情况和登录情况下的搜索（登录情况下，存储用户搜索的关键字、搜索习惯）-- 性能测试：1.压力测试：在不同开发用户数压力下的表现（评价指标如响应时间等）2.负载测试：看极限能承载多大用户量同时正常使用3.稳定性测试：常规压力下能保持多久持续稳定运行4.内存测试：有无内存泄露现象5.大数据量测试：如模拟从海量数据中搜索结果、搜索出的海量结果列示出来，如何表现等-- 易用性测试：1.交互界面的设计是否便于、易于使用2.依据不同的查询结果会有相关的人性化提示，查不到时告知，查到时统计条数并告知，有疑似输入条件错误时提示可能正确的输入项等等处理3.查询出的结果罗列有序，如按销量或其他排序综合，确保每次查询的结果位置按规则列示方便定位，显示字体、字号、色彩便于识别等等4.标题查询、全文检索、模糊查询、容错查询、多关键字组织查询（空格隔开）等实用检索方式是否正常5.输入搜索条件的空间风格设计、位置摆放是否醒目便于使用者注意到，有无快照等快捷查询方式等人性化设计-- 兼容性：1.Windows/Linux等各类操作系统下及各版本下的应用2.IE/Fireox/Goolge/360/QQ/edge等各类浏览器下及各版本下、各种显示分辨率条件下的应用3.SQL/ORACLE/MySQL等各类数据库存储下的兼容性测试4.简体中文、繁体中文、英文等各类语种软件平台下的兼容性测试5.iphone/ipad/安卓等各类移动应用平台下的兼容性测试6.与个相关的监控程序的兼容性测试，如输入法、杀毒、监控、防火墙等工具同时使用-- 安全性:1.被删除、加密、授权的数据，不允许被SQL注入等攻击方式查出，是否有安全控制设计2.录入一些数据库查询的保留字符，如单引号、%等，造成查询SQL拼接出来的语句产生漏洞，如可以查出所有数据等等，这方面要有一些黑客攻击的思想并引入一些工具和技术，如爬网等3.通过白盒测试技术，检查一下在程序设计上是否存在安全方面的隐患4.对涉及国家安全、法律禁止的内容是否进行了相关的过滤和控制- 购物车：-- 界面测试1.打开淘宝购物车页面后，页面的布局是否合理，是否完整。2.不同卖家的商品在不同的table区域显示，区分明显。3.页面的功能按钮可以正常显示。4.商品的最下方显示失效宝贝。5.页面的最低端显示“你可能喜欢”6.向下滑动页面，在购物车顶端展示“购物车”。7.购物车中如果存在有商品降价、库存不足、限购件数等，在商品详情的下面，会有对应的字体展示。-- 基本功能1.购物车页面的所有连接是否正常。2.从商品信息页面添加的商品能显示在购物车中。3.若未登录，点击购物车中的商品直接进行结算，则提示用户输入用户名和密码，或者提示用户进行注册。4.若没有选择任何商品，点击结算，则提示用户“请添加要结算的商品”。5.勾选商品后，已选商品的总价（和优惠满减活动）会显示。6.勾选商品，点击结算按钮后，进去确认订单信息页面。7.购物车页面中，可以对添加商品信息做信息的修改，并自动保存成功。8.可以在购物车中重新修改商品规格。9.购物车能添加的商品种类是有数量上限的。10.结算的时候商品可以全选，选择底部的全选按钮。11.可以在购物车页面对宝贝进行管理。-- 性能功能易用安全界面1.是否能一件批量付款2.是否有全选、全不选的功能3.是否能删除商品4.能否把购物车了的商品移入收藏夹5.是否有商品规格、购买数量的显示6.是否有商品名称的显示7.是否有店铺活动、满减优惠、降价显示8.每个商品是否有店铺名称的提示9.点击商品店铺能否进入店铺查看商品10.点击商品名称能否进入商品详情页11.是否有领券的文字提示12.是否会显示领取优惠券之后的优惠价格13.失效的商品是否还会出现在购物车的历史记录中14.每件商品是否有对应商品图片的展示15.是否有凑单提示16.在购物车页面能否再次选择商品的种类17.划到购物车页面的底部，有没有推荐商品展示18.不支持发货的地区是否会有提示，商品前面的全选、全不选多选框是否会变灰色19.当没有全选、全不选的多选框，没有选择任何商品时，点击 结算 按钮是否会跳转页面20.是否有删除商品、批量删除的功能21.是否有寻找相似商品的功能-- 性能测试1.打开购物车时间是否在已定的用户可以棘手的时间范围内。2.编辑购物车：删除、添加商品需要的时间。3.在购物车页面选择需要购买的商品进行结算的时候，结算金额可不可以实时显示。4.清空失效商品需要的时间。5.打开购物车页面要多久6.快捷键功能知否支持-- 兼容性测试1.iOS：不同型号，不同的iOS系统。2.安卓：不同品牌，不同型号，不同的安卓系统。3.不同浏览器上的测试功能是否正常-- 网络环境1.3G、4G、WiFi网络环境下应用的各功能可正常运行。2.网络异常时，数据交换是否会有提醒。3.中途断网再很快连网，数据是否可以自动恢复，正常加载。4.只允许内网访问的APP，在连接到外网时是否会有提醒。-- 异常测试1.没有内存时，APP是否能够正常相应。2.横竖屏切换展示。3.APP运行时网络中断。4.反复操作某一个功能，不断点击和刷新，是否出现闪退。5.APP运行时接入电话、短信、社交软件的信息提示时，是否能够正常运行。登录测试用例设计：一. 界面测试设计要点:1. 界面的设计风格是否与UI的设计风格统一,布局是否合理, 按钮是否对齐2. web的话, 对页面缩放登录模块是否与缩放比例缩放3.界面中的文字简洁易懂,没有错别字二. 功能测试设计要点:1. 输入已注册的用户名和正确的密码，验证是否成功登录2. 输入已注册的用户名和不正确的密码，验证是否成功失败，且提示信息正确3. 输入未注册的用户名和任意密码，验证是否登录失败，且提示信息正确4. 使用未激活账户登录，验证是否登录失败5. 使用被停用用户登录，验证是否登录失败6. 用户名和密码两者都为空，验证是否登录失败，且提示信息正确7. 用户名和密码两者之一为空，验证是否登录失败，并且提示信息正确8. 如果登录功能启用了验证码功能，在用户名和密码正确的情况下，输入正确的验证码，验证是否登录成功9. 如果登录功能启用了验证码功能，在用户名和密码正确的情况下，输入错误的验证码，验证是否登录失败，且提示信息正确10.用户名和密码是否大小写敏感11.页面上的密码框是否加密显示、或者是否需要有明暗码切换按钮12.后台系统创建的用户第一次登录成功时，是否提示修改密码13.忘记用户名和忘记密码的功能是否可用14.前端页面是否根据设计需求限制用户名和密码长度15.如果登录功能需要验证码，点击验证码图片或者点击换一张是否可以更换验证码，更换后的验证码是否可用16.刷新页面是否会刷新验证码17.如果验证码有时效性，需要分别时效性内和时效性外验证码的有效性18.用户登录成功但是会话超时后，继续操作是否会重定向到用户登录界面19.不同级别的用户，比如管理员和普通用户，登录系统后权限是否正确20.页面默认焦点是否定位在用户输入框中21.快捷键Tab和Enter等，是否可以正常使用22.为空和输入空格字符串的校验是否一致23.使用中文键盘输入字母和使用英文键盘输入字母传入后端的字符长度是否一致24.成功登录后的session的时效设置25.输入栏是否设置快速删除按钮26.用户名和密码是否支持特殊字符和中文27.浏览器的前进后退按钮，是否有效28.成功登出后，点击浏览器回退按钮，是否可以继续操作系统29.需求中是否有登录时间限制，如果有验证时间限制是否有效30.验证不同登录方式的正确性：扫码、账号密码、第三方……31.若支持手机号+验证码登录，验证码是否有时间限制，移动设备是否可以直接获取验证码32.操作错误提示信息是否简单明了三. 性能测试设计要点:1. 单用户登录的响应时间是否小于3秒2. 单用户登录时，后台请求数量是否过多3. 高并发场景下用户登录的响应时间是否小于5秒4. 高并发场景下服务端的监控指标是否符合预期5. 高集合点并发场景下，是否存在资源死锁和不合理资源等待6. 长时间大量用户连续登录和登出，服务器是否存在内存泄露7. 输入内容校验是否加入了函数防抖四. 安全测试设计要点:1. 用户密码后台存储是否加密2. 用户密码在网络传输过程中是否加密3. 密码是否具有有效期，密码有效期到期后，是否提示需要修改密码4. 不登录的情况下，在浏览器中直接输入登录后的URL地址,验证是否会重新定向到用户登录界面5. 密码输入框是否不支持复制粘贴6. 密码输入框内输入的密码是否都可以在页面源码模式下被查看7. 用户名和密码输入框分别输入典型的“SQL注入攻击”字符串，验证系统的返回页面8. 用户名和密码输入框分别输入典型的“XSS跨站脚本攻击”字符串，验证系统行为是否被篡改9. 连续多次登录失败的情况下，系统是否会阻止后续的尝试以应对暴力破解10.同一用户在同一终端的多种浏览器上登录，验证登录功能的互斥性是否符合设计预期11.同一用户先后在多台终端的浏览器上登录，验证登录是否具有互斥性12.是否可以记住密码，记住的密码保存是否加密，记住的密码是否有有效期，过了有效期后是否清空密码13.是否支持第三方登录14.密码的强弱性，复杂度校验15.异地登录校验、更换设备登录校验、登陆信息异常是否考虑账户冻结停用、是否允许第三方平台存储密码16.是否可以使用登录的api发送登录请求，并绕开验证码校验17.是否可以用抓包工具抓到的请求包直接登录18.截取到的token等信息，是否可以在其他终端上直接使用，绕开登录，token过期时间校验19.登录错误后的提示是否存在安全隐患五. 兼容性测试要点:1. 不同浏览器下，验证登录页面的显示以及功能正确性2. 相同浏览器的不同版本下验证登录页面的显示以及功能正确性3. 不同移动设备终端的不同浏览器下，验证登录页面显示以及功能的正确性4. 不同分辨率的界面下，验证登录页面的显示以及功能正确性六. 用户体验设计要点:1. 输入框是否有一键清除功能2. 输入错误用户名/密码登录失败, 提示最好是密码或者用户名错误3. 输入的密码个数最好与输入框加密的个数不相同4. 如何验证码是纯数字, 点击验证码输入框弹出数字键盘5. 点击用户/密码字段可以鼠标焦点跳到对应的输入框中 14.设计测试用例的七个方法 *123456789边界值分析法，等价类划分法，场景法，错误推断法，判定表，因果图，正交实验法（前3个最常用）确定上点内点离点：(0,18],[0,18),(0,18),[0,18]上点：边界上的点内点：域内的点离点：离上点最近的点，开内闭外有效等价类：符合需求说明书要求的数据无效等价类：不符合需求说明书要求的数据 15.你们公司测试工作的流程 *** 1234原型图格式：.rp启动的软件：axure/蓝湖在线查看ui设计图：蓝湖/本地设计图ui还原度：软件和设计图之间的 16.测试报告内容*1编写目的，测试人员（重点），测试环境，测试进度（重点），用例执行情况（是），缺陷统计（重点），缺陷分析（重点），测试总结（重点），风险分析（重点），遗留问题（重点） 17.上线相关12345678910Android安装包后缀：.apk(之前)，.aab(android app bundle)ios安装包后缀：.ipa(iphone app)是否参与上线工作？？？只做验收，后续工作不参与，他们大概这么做的 后端/前端html：部署服务器 Android上线： 开发/项目经理 将安装包提交到各个应用市场（应用宝，360应用市场，各个手机应用，goole应用市场），进行审核，审核通过就可以上线 ios上线： 开发/项目经理 将安装包提交到app store，进行审核（比较严），审核通过就可以上线苹果税：是指苹果对于App Store的收费APP都会抽成30%（虚拟商品）的行为。 18.如果你是测试负责人，如果下个星期三上线，你发现测试任务完不成了，怎么办？123456789101112分析：从两方面考虑，1.应对本次危机；2.反思为什么导致这次的危机第一方面：应对危机1.加班,其次找关系好的同事2.从其他组调人过来3.考虑延期4.砍掉一部分需求5.外包出去第二方面：反思1.测试：水平不行（换人，内部培训），人力不足（招人）2.产品：比如，频繁修改需求/新增需求3.UI：水平不行（换人，内部培训），人力不足（招人）4.开发：水平不行（换人，内部培训），人力不足（招人） 19.黑盒测试、白盒测试、灰盒测试 **12345678910- 黑盒测试(Black Box -Test):把被测试的软件看做一个黑盒子，我们不去关心盒子里边的结构是什 么样子，只关心软件的输入数据和输出结果 有人把黑盒测试比作中医，通过“望闻问切”来判断是否有问题。 “望”:观察软件的行为是否正常。 “闻”:检查输出的结果是否正确。 “问”:输入各种信息，结合“望”，“闻”来观察软件的响应。 “切”:像中医一样给软件“把把脉”，敲击一下软件的某些“关节” - 白盒测试:是一种按照程序内部逻辑结构和编码结构设计测试数据并完成测试的测试方法 - 灰盒测试:一种基于程序运行时的外部表现同时又结合程序内部结构来设计测试数据的测试方法 20.按照测试阶段分类，测试分为哪几类 **​ 单元测试、集成测试、系统测试、验收测试 单元测试:对一个模块、一个函数或者一个类来进行正确性检验的测试方法 集成测试:单元测试后，将单独的模块按照设计要求组装成为子系统或系统，作为整体进行测试的 测试方法 系统测试:集成测试后，将硬件、软件看作一个整体,对系统的功能及性能的总体测试 验收测试:系统测试后以用户测试为主，或有测试人员共同参与检验软件质量的测试方法 21.冒烟测试和回归测试是什么 ** 冒烟测试:验证系统的核心功能是否能够正常运行的测试方法 回归测试:指开发修改bug后，重新进行测试以确认是否修复成功，修改有没有导致其他代码产生错误的测试方法 22.软件的分类123456781.根据应用场景分类： 工具类软件、游戏型软件、媒体型软件、电商型软件等2.根据软件架构分类： 单机版软件、分布式软件 2.1单机版软件：office、红警等 2.2分布式软件： C/S架构软件:客户端需安装专门软件，如QQ 微信等 B/S架构软件:客户端为浏览器 ，如百度、hao123等 23.BS&#x2F;CS架构的区别是什么？*12345678910概念：所谓的架构就是用来指导我们软件开发的一种思维，目前最长见的就是BS/CS.B---browser 浏览器C---client 客户端S---server 服务端区别：A.标准：相对于cs架构来说Bs架构的两端都是使用现成的成熟产品，bs会显示的标准一些。B.效率：相对于bs架构来说cs中的客户端可以分担一些数据的处理，执行效率会高一些。C.安全：bs架构当中得到数据的传输都是以Http协议进行传输的，而Http协议又是明文输出。可以被抓包，那么bs架构相比cs架构显得就不那么安全了，（其实都是相对的）。D.升级：bs架构只需要在服务器端将数据进行更新，前台只需要刷新页面就可以升级，而cs架构必须要将两端都进行更新才可以。E.开发成本：相对于bs架构来说cs当中的客户端需要自己开发，bs不用，所以说cs成本会高一些。 24.Android手机和IOS手机,系统有什么区别?**123A.运行机制不同:IOS采用的是沙盒运行机制,安卓采用的是虚拟机运行机制B.两者后台制度不同:IOS中任何第三方程序都不能在后台运行,安卓中任何程序都能在后台运行,直到没有内存才会关闭C.IOS中用于UI指令权限最高,安卓中数据处理指令权限最高 25.你搭建过什么环境 ***123451.安装JDK，配置环境变量2.安装测试需要的工具，像Jmeter，postman，抓包工具3.安装Android sdk，配置环境变量，方便使用monkey对Android软件测试4.安装Python环境和ide，写python脚本，做接口自动化和ui自动化5.服务器上安装ServerAgent，监测服务器性能 26.开发环境与测试环境有什么区别？123开发环境：是在编码阶段，一般我们的代码基本上都是在开发环境中，不会在生产与测试环境，如操作系统，web服务器，语言环境，php,数据库等等。测试环境：项目完成后，供测试找Bug,以及修改Bug后调试的环境。生产环境： 项目数据前后端已经疏通，部署到阿里云上有客户去使用以及访问，供用户使用的环境 27.请描述下接口测试与UI测试是如何协同测试的？12A.有一部分是重叠的，Ui测试是通过前端写的界面，是来调用接口的，而接口测试是直接调用接口。B.排除前端的处理逻辑与调用的正确性，在理论上接口测试是可以覆盖所有的Ui测试，但实际中，如接口层覆盖所有的业务流，在Ui上只测试前端的逻辑，而最终的结果会忽视很多原有的功能点，导致了Ui测试的不充分，那么会在人多且时间充分的时候，可以尝试接口去做业务流的全覆盖，否则不要轻易的去尝试。 28.App常见崩溃的原因？1234567A.设备碎片化：由于设备极具多样性，App在不同的设备上可能有不同表现形式。B.宽带限制：宽带不佳的的网络对APP所需的快速响应时间不够。C.网络的变化：不同网络间的切换可能会影响App的稳定性。D.内存管理：可能内存过低，或非是授权的内存位置的使用可能会导致App失败。E.用户过多：连续数量过多可能会导致App崩溃。F.代码错误：没有经过测试的新功能，可能会导致App在生产环境中失败。第三方服务：广告或弹出屏幕可能会导致App崩溃。 30.如何提交高质量的软件缺陷记录（报告）？ *123456789101112A.ui要统一、准确。B.尽量使用业界惯用的表达术语和表达方法C.每条缺陷报告只包括一个缺陷D.不可重现的缺陷也要报告E.明确指明缺陷类型F.明确指明缺陷严重等级和优先等级G.描述 (Description) ，简洁、准确，完整，揭示缺陷实质，记录缺陷或缺陷出现的位置短行之间使用自动数字序号，使用相同的字体、字号、行间距短行之间使用自动数字序号，使用相同的字体、字号、行间距，可以保证各条记录格式一致，做到规范专业。H.每一个步骤尽量只记录一个操作I.确认步骤完整，准确，简短J.根据缺陷，可选择是否进行图象捕捉 31.如果回归测试不通过怎么办? **1说明未通过的原因,把bug打回去让开发重新修复 32.压力测试,负载测试,稳定性测试123压力测试: 在强负载下的测试,查看系统在峰值情况下是否有功能隐患,系统是否具有良好的容错能力和可恢复能力负载测试:通过逐渐增加系统负载,确定在满足系统的性能指标的情况下,找出系统能承受的最大负载和极限负载的测试稳定性测试:给定一个用户正常的业务负载,然后进行长时间的测试(1天-1周),并最终保证服务器能满足线上业务需求 33.项目迭代周期 **123一般是 2周- 1个月, 这个和新增功能的多少/难易有关另外 大版本更新的时候(比如1.x.x 升级到 2.0.0) , 所有功能都要重新测试 34.团队大小 **1234产品经理:1,项目经理:1,ui:2,前端:2,后端:3,Android:2,ios:3,测试:2,可以说测试部门有挺多人,派到这个项目组的有2个自己编,合理就可以了,前端:后端:android:ios:测试 = 接近 1:1 35.sql语句 ***1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071-------了解---------显示数据库：show databases;数据库创建：create database 数据库名; 数据库切换：use 数据库;查看当前库的所有表：show tables;创建表：create table 表名（ 列名 类型, 列名 类型 ）;查看表结构：desc 表名;删除表：drop table 表名；删除库：drop database 库名；-----掌握-------插入数据：insert into 表名 values(); 删除数据：delete from 表名 where 条件;修改数据：update 表名 set 键=值，键=值 where 条件；（update student set name=’张三’ where name=’zhangsan’； ）-----查询 重点掌握-------查询所有：select * from 表名;条件查询：select * from 表名 where 条件; 查询所有学生成绩，并输出效果为 姓名 语文 英语 数学： select name as 姓名,chinese as 语文,english as 英语,math as 数学 from student 查询数学成绩在80-90之间的同学： select * from student where math between 80 and 90 查询数学语文英语都大于80的同学成绩 or或者 ，and 并且：select * from student where math&gt;80 and english&gt;80 and chinese &gt;80; 模糊查询 ：_代表1个字符 ；%代表0个及其以上的字符查询所有姓名中包含张的同学：select * from student where name like ‘%张%’ 升序：ascselect * from 表名 order by 表中的字段 asc(MySQL中默认是升序排列，可不写) ；降序：descselect * from 表名 order by 表中的字段 desc ；（按照数学成绩从大到小查询：select * from student order by math desc;）分页查询：limit，select * from table limit m,n；其中m是指记录从m+1开始,，N代表取n条记录。取出第3条至第6条，4条记录 ：select * from student limit 2,4 分组查询：group by 字段根据性别分类，查出对应性别的人数（比如，男：20，女：19）：select sex，count(*) from employee group by sex;分组查询加条件 ：使用having，不使用where根据性别，查询大于18岁的人数select sex，count(*) from employee group by sex having age&gt;18;count 个数sum 总数avg 平均数max 最大值min 最小值语文的平均成绩：select avg(chinese) from student;统计一下班级语文最高分和最低分：select max(chinese) from student;select min(chinese) from student; 班级里边有多少学生：select count(*)from student; 子查询：一个查询的结果 作为另一个查询的条件先查括号里面的，查到kaifa班级的id，根据id去student表查到对应class_id的学生：select * from student where class_id=(select id from class where name=&quot;kaifa&quot;);内连接查询：inner join on 查询两张表，设定条件，将两张表中对应的数据查询出来select * from customer c inner join 、 o on c.id=o.customer_id; 左外连接：left join on，将两张表对应的数据查询出来，同时**将左表自己没有关联的数据也查询出来（）select * from customer c left join orders o on c.id=o.customer_id;右外连接：right join on 设定条件，将两张表对应的数据查询出来，同时将右表自己没有关联的所有数据查询出来select * from customer c right join orders o on c.id=o.customer_id;去重：distinctSELECT distinct 字段1,字段2 FROM 表名 36.常用Linux命令 ***123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354• 目录操作• cd usr/ 切换到该目录下usr目录• cd .. 切换到上一层目录• cd / 切换到系统根目录• mkdir 目录名称 创建目录 • ls 目录名称 查询该目录下所有的目录和文件 • ls [-a] 目录名称 查询该目录下所有的目录和文件,包含隐藏文件 • ls [-l] 目录名称 查询该目录下所有的目录和文件的详细信息 • find / -name 目录名称 查找/root下的目录(文件) ****• mv 目录名称 新目录名称 修改目录名称• mv 目录名称 目录的新位置 剪切 • cp -r 目录名称 目录的目标位置 拷贝 ***• rm -rf 目录 强制删除目录 • 文件操作 • 创建空文件：touch 文件名称 ***• 查看文件内容：cat/more/less/tail 文件 ***• 动态查看/实时查看文件(日志)：tail -f 文件 ***• 查看文件前10行：head -n 10 文件名 ***• 查看文件后5行：tail -n 5 文件名 ***• 关键字搜索 ：grep 要搜索的字符串 要搜索的文件 ***• 修改文件内容：vi/vim 文件（--&gt;进入文件-----&gt;命令模式------&gt;按i进入编辑模式-----&gt;编辑文件 **-------&gt;按**Esc进入命令模式--输入：进入底行模式-**----&gt;**输入wq/q!） ***• 强制删除文件：rm -rf 文件 ***• 文件的打包压缩 :tar -zcvf 文件名.tar 要打包的文件 ***• 文件的解压:tar -xvf 文件名.tar ***• 扩充:将文件解压到固定位置 :tar -xvf 文件名.tar -C 指定解压的位置 • 查询当前所在位置 : pwd • 查看进程: ps -ef | grep 进程名称(tomcat/mysql) ***• 杀死进程:kill -9 进程pid ***• 查看端口号:netstat -an | grep 端口号(3306) ***• 查看服务器ip : ifconfig ***• 查看网络是否能正常使用 • ping 外网地址 查看是否能访问外网 • ping 内网ip 查看是否能访问内网 ***• 权限命令 :chmod 777 文件 赋权 ***• 查看cpu :top ***• 查看磁盘信息 : df -h ***• 查看内存信息: free ***• 切换管理员账户：su，然后输入密码• 由root 切换到test用户：su test• 连接另一台服务器ssh 用户名@ip• 从一台服务器推数据到其他服务器scp -r 文件夹 用户名@ip:/opt/soft（目标文件夹）• 从当前服务器拉取目标服务器的数据scp 用户名@ip:/opt/soft/test.txt（目标文件、文件夹） /opt/sofeware(当前服务器存储地址）","categories":[{"name":"测试高频面试题-功能测试","slug":"测试高频面试题-功能测试","permalink":"http://sunjunyu.cn/categories/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"高频面试题","slug":"高频面试题","permalink":"http://sunjunyu.cn/tags/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98/"},{"name":"测试","slug":"测试","permalink":"http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95/"},{"name":"功能测试","slug":"功能测试","permalink":"http://sunjunyu.cn/tags/%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/"}]},{"title":"测试高频面试题-性能测试","slug":"高频面试题-性能测试","date":"2022-09-11T16:00:00.000Z","updated":"2022-10-12T01:14:21.642Z","comments":true,"path":"2022/09/12/高频面试题-性能测试/","link":"","permalink":"http://sunjunyu.cn/2022/09/12/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/","excerpt":"","text":"1.Jmeter做分布式压测的配置1234567压力机: 在Jmeter bin/jmeter.properties中修改server.rmi.ssl.disable=false，改为true 启动jmeter-server控制机: bin/jmeter.properties 中修改server.rmi.ssl.disable=false，改为true bin/jmeter.properties 中remote_hosts填入压力机的ip和端口号,多个使用&quot;,&quot;隔开 点击运行–&gt;远程启动 2.性能测试怎么做的？***12345678910111213141516171.做性能需求分析，挑选了用户使用最频繁/核心功能的接口来做性能测试，比如：首页列表，搜索，提交订单等2.确定性能指标，比如：事务通过率为99.99%，90%的事务响应时间不超过3秒，错误率为0.01%，CPU和内存的使用率为80%以下，TPS。3.搭建性能测试环境，准备好性能测试数据。4.使用Jmeter开发脚本，包括:参数化，断言，关联,监听器等。5.设计性能测试场景，使用了分布式压测,我们这个项目做了50并发用户的单功能循环30min的基准测试，然后逐渐增加并发用户数（150/300/500...），执行1-2小时的负载测试，看系统有没有性能瓶颈；6.分析性能测试结果，如果有性能瓶颈，收集相关的日志提单给开发做性能调优。7.开发调优后，回归性能测试(可能需要来回优化回归多次)8.测出最大负载后 做稳定性测试（1天-7天）9.完成后输出负载测试和稳定性测试报告怎么操作(不用背,有可能问细节的时候说)：1.服务器需要启动ServerAgent2.添加两个组件（ServerAgent组件，TPS）+监听器（聚合报告）+ 断言+关联3.线程数量（并发用户量），循环次数永久+调度器(设置持续时间)4.结果分析，整理报告 3.怎样分析性能测试结果？ *12341.查看聚合报告和服务器的资源使用图，检查响应时间，事务成功率，CPU，内存和IO使用率是否达到要求，如果出错率达到了总请求数的0.01%，我们会检查是什么原因导致的，修改好后，重新测试；2.如果出现了性能瓶颈，比如响应时间，或者CPU使用率不达标，我们会从服务器上导出日志，分析是哪个地方导致响应时间过长，如果分析不出来，就叫上开发一起讨论，确定问题后，就提单给开发修复，修复好了就进行回归测试。任何指标只要一小段时间不达标,都需要分析优化,比如cpu/内存 持续3分钟超过80% 4.性能测试关注的指标 ***12345响应时间，并发用户数，吞吐量，TPS，错误率，资源使用率（CPU，内存，磁盘IO，网络）TPS和QPS区别：QPS：服务器每秒处理的请求数量TPS：服务器每秒处理的事务数量，1个事务包含1个或者多个请求 5.你们项目最佳的并发用户数是多少？*1我们当时做到1500（500-1500）个并发用户的时候，查询功能的响应时间超过了性能指标2秒多，吞吐量开始变小，也就是说吞吐量已经达到峰值，开始掉头向下了。 6.如何判断网络是否存在瓶颈？*1在性能测试结束之后，我们会根据性能测试的结果，查看在整个性能测试过程中，网络的吞吐量是多少，如果网络的吞吐量占到了服务器的70%以上，我们就认为网络存在瓶颈，通常会增加带宽或者压缩传输数据。 7.如何判断响应时间不达标 *1我们90%响应时间要求是3s，响应时间不达标的话，我们会根据性能测试结果先检查看下是否是服务器带宽存在问题，如果带宽存在瓶颈，则会考虑增加带宽或者压缩传输数据，如果带宽没有问题的话，我们会从服务器上导出日志，开发一起讨论分析是哪个地方导致响应时间过长，确定问题后，就提单给开发修复，修复好了就进行回归测试。 8.如何判断CPU使用率不达标 *1我们CPU使用率要求不超过80%，CPU使用率不达标，我们会从服务器上导出日志，分析是哪个地方导致CPU使用率不达标，如果分析不出来，就叫上开发一起讨论，确定问题后，就提单给开发修复，修复好了就进行回归测试。 9.日活，月活，下载量 (不用背,了解即可)12345678910日活（DAU，daily active user）：日活跃用户月活（MAU，month active user）：月活跃用户下载量：app的下载次数下载量&gt;=月活&gt;=日活UV（Unique visitor）是指通过互联网访问、浏览这个网页的自然人。访问您网站的一台电脑客户端为一个访客。00:00-24:00内相同的客户端只被计算一次。一天内同个访客多次访问仅计算一个UV。PV（Page View）即页面浏览量或点击量，用户每1次对网站中的每个网页访问均被记录1个PV。用户对同一页面的多次访问，访问量累计，用以衡量网站用户访问的网页数量。 10.服务器怎么优化&#x2F;调优*123分为软件优化和硬件优化软件优化：架构重构，算法优化，编译优化，代码优化硬件优化：增加cpu，内存条，磁盘，提升宽带，分布式，负载均衡","categories":[{"name":"测试高频面试题-性能测试","slug":"测试高频面试题-性能测试","permalink":"http://sunjunyu.cn/categories/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"高频面试题","slug":"高频面试题","permalink":"http://sunjunyu.cn/tags/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98/"},{"name":"测试","slug":"测试","permalink":"http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95/"},{"name":"性能测试","slug":"性能测试","permalink":"http://sunjunyu.cn/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"}]},{"title":"测试高频面试题-接口测试","slug":"高频面试题-接口测试","date":"2022-09-11T16:00:00.000Z","updated":"2022-10-12T01:14:34.753Z","comments":true,"path":"2022/09/12/高频面试题-接口测试/","link":"","permalink":"http://sunjunyu.cn/2022/09/12/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/","excerpt":"","text":"一.网络基础1.http和https的区别？*123456 简单来说，HTTPS协议是由SSL/TLS+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比http协议安 全。区别主要如下： ​ 1、https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。 ​ 2、http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。 ​ 3、http和https使用的是完全不同的连接方式，用的默认端口也不一样，前者是80，后者是443。 ​ 4、http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证 的网络协议，比http协议安全。 2.get和post请求的区别？*1234567- GET后退按钮/刷新无害，POST数据会被重新提交（浏览器应该告知用户数据会被重新提交）。 - GET书签可收藏，POST为书签不可收藏。 - GET能被缓存，POST不能缓存 。- GET历史参数保留在浏览器历史中。POST参数不会保存在浏览器历史中 GET对数据长度有限制，当发送数据时，GET 方法向 URL 添加数据；URL 的长度是受限制的（URL 的最大 长度是 2048 个字符）。POST无限制。 - 与 POST 相比，GET 的安全性较差，因为所发送的数据是 URL 的一部分。在发送密码或其他敏感信息时绝 不要使用 GET ！ - POST 比 GET 更安全，因为参数不会被保存在浏览器历史或 web 服务器日志中。 - GET的数据在 URL 中对所有人都是可见的。POST的数据不会显示在 URL 中。 3.请求方式有哪些？1get，post，put，delete， 4.常见的状态码有哪些？*** 123456789101112100：这个状态码是告诉客户端应该继续发送请求，这个临时响应是用来通知客户端的，部分的请求服务器已经接受，但是客户端应继续发送求请求的剩余部分，如果请求已经完成，就忽略这个响应，而且服务器会在请求完成后向客户发送一个最终的结果200：这个是最常见的http状态码，表示服务器已经成功接受请求，并将返回客户端所请求的最终结果202：表示服务器已经接受了请求，但是还没有处理，而且这个请求最终会不会处理还不确定204：服务器成功处理了请求，但没有返回任何实体内容 ，可能会返回新的头部元信息301:永久重定向，资源已永久分配新URI 302:临时重定向，资源已临时分配新URI400:Bad Request 请求报文语法错误或参数错误 401:Unauthorized 需要通过HTTP认证，或认证失败 403:Forbidden 请求资源被拒绝 404:Not Found,户端请求的资源没有找到500：服务器遇到未知的错误，导致无法完成客户端当前的请求503:服务器超负载或停机维护 5.http请求的组成？123请求行：请求的第一行是“方法URI协议/版本”例如：GET/sample.jsp HTTP/1.1 请求头（消息报头）：包含许多有关的客户端环境和请求正文的有用信息。例如，请求头可以声明浏览器所用的语言，请求正 文的长度等。请求正文：请求头和请求正文之间是一个空行，这个行非常重要，它表示请求头已经结束，接下来的是请求正文。请求正 文中可以包含客户提交的查询字符串信息：username=jinqiao&amp;password=1234 6.http响应的组成123状态行：由http版本协议，状态码，状态码描述组成，如 HTTP/1.1 200 OK 响应头（消息报头）：服务器传递给客户端用于说明服务器的一些信息，以及将来继续访问该资源时的策略响应正文（响应体）：是服务端返回给客户端的HTML文本内容，或者其他格式的数据，比如：视频流、图片或者音频数据。 7.cookie，session，token区别*123456789101112131415161718192021222324252627282930313233token令牌，是用户身份的验证方式。最简单的token组成:uid(用户唯一的身份标识)、time（当前时间的时间戳）、sign（签名）。session会话，代表服务器与浏览器的一次会话过程，这个过程是连续的，也可以时断时续。session因为请求（request对象）而产生；session是一个容器，可以存放会话过程中的任何对象；session的创建与使用总是在服务端，浏览器从来都没有得到过session对象；session是一种http存储机制，目的是为武装的http提供持久机制。cookie储存在用户本地终端上的数据，服务器生成，发送给浏览器，下次请求统一网站给服务器。cookie中存放着一个sessionID，请求时会发送这个ID；cookie与session区别cookie数据存放在客户端上，session数据放在服务器上；cookie不是很安全，且保存数据有限；session一定时间内保存在服务器上,当访问增多，占用服务器内存。session与token作为身份认证，token安全性比session好；Session 认证只是简单的把User 信息存储到Session 里，因为SID 的不可预测性，暂且认为是安全的。这是一种认证手段。 而Token ，如果指的是OAuth Token 或类似的机制的话，提供的是 认证 和 授权 ，认证是针对用户，授权是针对App 。其目的是让 某App有权利访问 某用户 的信息。token与cookieCookie是不允许垮域访问的，但是token是支持的， 前提是传输的用户认证信息通过HTTP头传输；token就是令牌，比如你授权（登录）一个程序时，他就是个依据，判断你是否已经授权该软件；cookie就是写在客户端的一个txt文件，里面包括你登录信息之类的，这样你下次在登录某个网站，就会自动调用cookie自动登录用户名；session和cookie差不多，只是session是写在服务器端的文件，也需要在客户端写入cookie文件，但是文件里是你的浏览器编号.Session的状态是存储在服务器端，客户端只有session id；而Token的状态是存储在客户端。上面的供理解，下面需要记忆它们三个都是用来验证用户身份的（鉴权）token令牌，是用户身份的验证方式（登录后获取，可以获取用户相关的数据，一般都是app在用），存储在用户端。session会话，因为请求而产生；session是一个容器，可以存放会话过程中的任何对象，存储在服务器，当访问增多，占用服务器内存，cookie，储存在用户本地终端上的数据，服务器生成，发送给浏览器，下次请求统一网站给服务器。cookie中存放着一个sessionID，请求时会发送这个ID；token安全性比session好，Session 认证只是简单的把User 信息存储到Session 里，而Token ，如果指的是OAuth Token 或类似的机制的话，提供的是 认证 和 授权 ，认证是针对用户，授权是针对App 二.抓包1. 说一下抓包 ***1234567891011121314抓包：抓包是将网络传输发送与接收的数据包进行截获、重发、编辑、转存等操作，也用来检查网络安全，常见的抓包工具：Charlers，Fiddler,WireShark...作用：1.定位前后端问题： app: 通过抓包看网络请求 web: 浏览器按f12, 点到network,在下面找到对应的网络请求 看url还有参数，如果url和参数不对，前端的问题，如果没有问题 看响应数据，如果响应数据有问题的，那么就是后端问题，如果数据没有问题 就是前端问题2.模拟4043.模拟弱网4.mock测试 2. 怎么定位前后端问题 *********12345678app: 通过抓包看网络请求web: 浏览器按f12, 点到network,在下面找到对应的网络请求看url还有参数，如果url和参数不对，前端的问题，如果没有问题看响应数据，如果响应数据有问题的，那么就是后端问题，如果数据没有问题就是前端问题 3. 抓包的时候遇到乱码没 *123有的1.没有信任证书导致的,因为https是加密传输的2.数据本身还做过加密，除非拿到密钥，否则没办法解密 4. mock测试，rewrite用过没有，map remote&#x2F;local用过没有 **123456789mock测试：模拟我们想要的请求和测试数据返回charles断点：断点可用修改请求数据和响应数据，一般用来临时修改map：本质上都是重定向 map local（拿本地文件替换服务器返回的数据） map remote（拿另外一个链接返回的数据替换原来的数据） rewrite：通过正则匹配的方式，修改请求/响应数据 5.具体操作(不用背)5.1怎么信任证书123456把抓包工具的证书导出，在对应的浏览器/手机中信任charles具体操作(不问不用说):安装:help --&gt; ssl proxying--&gt; install charles root certificate导出:help--&gt;ssl proxying--&gt;save Charles root certificate，选择.cer格式的证书信任:chrome浏览器：设置 → 管理证书（安全） → 导入 5.2移动端怎么抓包12341.pc和手机在同一个wifi下2.手机需要设置代理，ip和端口号3.信任证书4.开启app进行抓包 5.3map local 使用步骤1Tools--Map Local --&gt; 指定本地文件 5.4map remote使用步骤1tools--map remote --&gt;指定重定向的链接 5.5断点修改请求参数1选中链接--&gt;右键 --&gt;选择“BreakPoints” --&gt;刷新网页 --&gt;Edit Request,修改请求信息--&gt;Execute 5.6断点修改响应数据1选中链接--&gt;右键 --&gt;选择“BreakPoints” --&gt;刷新网页 --&gt;Edit Response”,修改响应数据--&gt;Execute 5.7 rewrite1Tools-Rewrite --&gt;添加对应的链接,规则 5.8弱网 使用步骤1Proxy--&gt;Throttling Settings(节流阀设置) --&gt;可以选择3G,4G,56kbps,256kbps.... 5.9模拟404 使用步骤1tools——&gt;blocklist--&gt; 添加网址 三.接口测试3.1 说一下Postman（是什么，有什么用，使用过它的什么功能）***12345678910Postman是一款强大的http调试工具，我们一般使用它来做接口测试常用的功能：1. 创建测试和生产环境，添加对应的环境变量，比如baseUrl，2. 创建接口集，里面添加项目的接口3. 添加接口，可以发起get/post/delete/put等请求4. Get请求查询参数放入Params中，post请求参数放入Body中，可以是普通键值对，json/html/xml/文件，请求头都是放入Headers里面5. Pre-request Script预处理脚本，在发起网络请求之前会调用的js代码，可以在里面获取一些动态的参数，比如时间戳，随机数等6. Tests脚本，在发起网络成功拿到响应之后调用，可以在里面添加断言，判断响应数据是否正确7. Mock测试，模拟服务器返回自己想要的测试数据8. 参数化：环境变量，全局变量，csv文件 参数化 –不需要记123456789101.写一个csv/txt文档，把测试数据放入2.建接口集，里面写接口3.接口传递的参数不能写死，使用关联的方式（&#123;&#123;key&#125;&#125;），key应该是csv文件表头名字4.双击接口集，点击右上角的run，打开Runner5.配置参数 Iterations（迭代次数，测试数据有几个，就写几） Delay: 延迟对应的事件发起请求 data：选择csv文件 Data file type： 选择文件的类型（text/csv）6.点击运行 3.2 如果没有接口文档，怎么办？ *121.可以找前端开发要关于 接口的类2.抓包获取 3.3 接口case包含哪些内容？**1用例标题，优先级，所属模块，资源路径，请求参数，请求方式，测试数据，预期结果（应该有结果），实际结果 3.4 有依赖关系&#x2F;关联的接口怎么测试 *********1234567比如B接口的请求参数是A接口的响应数据我们需要请求A接口，拿到数据后，把需要的数据提取出来，放入B接口进行请求具体实现的话使用我们常用的那些工具都可以，像postman，Jmeter，python脚本都行1.postman：请求A接口，在Tests脚本里面写js代码，将数据解析后提取想要的数据，存为全局/环境变量，在B接口请求的时候关联使用（&#123;&#123;id&#125;&#125;）2.Jmeter：请求A接口，给A接口添加后处理器--正则提取器，通过正则的方式，将数据提取出来变成用户变量，在B接口中关联使用（$&#123;id&#125;）3.python: 使用requests请求A接口，拿到响应后解析成json，然后取出想要的数据，进行B接口的请求，将取出的参数塞入即可 3.5 接口测试的流程 ***123456781.找后端拿到接口文档2.写测试计划3.分析接口（接口间业务关系，关联接口的数据，请求参数，请求头(token，os，版本),响应数据（数据格式，字段，错误分析））4.写用例，评审用例5.执行用例去测试；自动化：根据用例写脚本（requests+pytest/unittest），手动：postman/jmeter测试6.结果分析7.bug提交8.修复之后 回归测试 3.6 接口测试测什么&#x2F;关注什么&#x2F;验证什么&#x2F;测试点 ***","categories":[{"name":"测试高频面试题-接口测试","slug":"测试高频面试题-接口测试","permalink":"http://sunjunyu.cn/categories/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"接口测试","slug":"接口测试","permalink":"http://sunjunyu.cn/tags/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"},{"name":"高频面试题","slug":"高频面试题","permalink":"http://sunjunyu.cn/tags/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98/"},{"name":"测试","slug":"测试","permalink":"http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95/"}]},{"title":"测试高频面试题-自动化测试","slug":"高频面试题-自动化测试","date":"2022-09-11T16:00:00.000Z","updated":"2022-10-12T01:14:03.329Z","comments":true,"path":"2022/09/12/高频面试题-自动化测试/","link":"","permalink":"http://sunjunyu.cn/2022/09/12/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/","excerpt":"","text":"Python 及自动化基础1.您知道Python中的可变不可变数据类型有哪些？ **12可变数据类型有列表(list)、集合(set)、字典(dict)不可变数据类型有数字(number)、字符串(str)、元祖(tuple)、不可变集合(frozenset) 2.面向对象三要素及其意义吗？********1234567面向对象是相对于面向过程来讲的，面向过程是 所有的事情都得自己去做, 而面向对象是把相关的数据和方法组织为一个整体来看待，完成任务只需要找有相关功能的对象即可。咱们整个世界就是面向对象的世界,比如我想告诉你一个消息,不需要千里迢迢的跑过去亲口对你说,只需要通过电话/微信就可以,电话/微信就是具有通话功能的对象,我只需要会用它就可以,不需要知道它的实现原理面向对象三要素是：封装、继承、多态封装：将有共同的属性和方法封装到同一个类下面，对外只提供访问的的接口,不提提供实现细节继承：子类继承父类，可以具备父类已有的非私有属性和方法，解决代码重用多态：多态的前提是继承, 指的是基类的同一个方法在不同的派生类中有着不同的功能,比如猫和狗都继承动物类,但是猫爱好吃鱼,狗爱好吃骨头,这就是多态 3.列举Python的魔法方法 *1234567891011121314主要魔法方法__new__：类的构造器，创建初始化后的基本实例对象，相当于是类的骨架子__init__：类的数据初始化方法，用来给实例话对象添加属性的__del__：类的析枸器(这是C/C++的叫法)，专门用来在实例销毁前调用，释放资源的__call__：可以将实例对象直接声明为一个方法调用，方便调用过程，保护内部实现相关属性获取方法__getattr__：获取某个属性时，比如对于字典的key值获取或者列表的索引获取__setattr__：设置某个属性时，比如设置某个索引对应的值，或者字典对应key的value更新创建比较操作符__lt__、__le__：小于判断、小于等于__eq__、__ne__：等于、不等于判断时，用的就是这个方法__gt__、__ge__：大于判断、大于等于判断 4.列表，元组，字典区别 ***1234python中3种内建的数据结构:列表、元组和字典列表：[]表示，可变的数据类型，即这种类型是可以被改变的，并且列表是可以嵌套的元组：（）表示，元组是不可变的，可以嵌套字典：&#123;&#125;表示，存储键值对的，键要求唯一，字典中的键/值对是没有顺序的 5.unittest怎么使用123451.写一个py文件，导入unittest2.写一个类，继承unittest.TestCase3.复写setup（准备测试环境），teardown（还原测试环境），写以test打头的方法，里面可以通过断言去验证一些逻辑4.另一个py文件中，使用测试套件（TestSuite），把想要执行的用例添加进来5.使用TextTestRunner/HtmlTestRunner，运行测试套件 6.怎样导包12345671.建议在条件允许的情况下，使用绝对路径导入，而不是相对路径。 比如有两个包，w/a/c.py,在f包下有个g.py,想要在g.py中使用c.py,可以这么导包 import w.a.c 或者 from w.a import c2.系统的模块，像time，os，还有自己下载的模块，比如requests，在sys.path（sys.path是python的搜索模块的路径集）中是有路径的，所以可以直接import3.如果想把另一个模块中的py文件导入当前项目，可以将另一个模块的路径添加到sys.path中，然后导包，比如，在C:\\\\tool\\\\myTool\\\\calc.py,可以这样导包import syssys.path.append(“C:\\\\tool\\\\myTool\\\\”)import calc 7. 八大定位 ***1234567891011id：className：name：tagName：xpath：css选择器：link_text:partial_link_text:使用的api是find_element(by,value) 8.常用的selenium api方法及作用*1234567891011121314FixFox/Chrome（）：获取浏览器驱动get（）：请求某个网址find_element():查找元素send_keys():给文本框输入内容click（）：点击move_to_element()（ActionsChain中的方法）: 把鼠标移动到元素上driver.execute_script(&#x27;window.scrollTo(0,0)&#x27;):执行js代码 (这个是滑动到顶部)element.get_attribute(属性的键)：获取属性的值quite（）：退出浏览器close（）：关闭当前窗口switch_to.frame():切换frameswitch_to.window:切换windowclear():清楚输入框内容text:获取文本 9.selenium如何切换窗口&#x2F;frame&#x2F;警告框1234获取当前窗口的句柄： handles = driver.window_handlers切换窗口：driver.switch_to.window(handles[n])切换frame：driver.switch_to.frame(value)切换alert：driver.switch_to.alert 10.常用的python模块*123456789单元测试模块：unittest，pytestui自动化模块：selenium，appium时间模块：time数学计算模块：math执行系统命令模块：os随机数模块：randommysql数据库：pymsqlstring模块：str网络请求:requests 11.浏览器等待的三种方式*123固定等待：time.sleep(seconds)显示等待：WebDriverWait（）隐式等待：driver.implicitly_wait() 12.什么是po模型及它的优点1234567PageObject，将页面的元素定位和元素行为封装成一个basepage类，其他page继承basepage，一个页面对应一个类PageObject 设计模式核心思想是：测试对象（页面）和测试用例（页面操作+测试数据）分离；调用所需页面对象中的行为，组成测试用例。在用例中，是看不到元素定位和元素操作的。优点：1. PO提供了一种业务流程与页面元素操作分离的模式，这使得测试代码变得更加清晰2. 页面对象与用例分离，使得我们更好的复用对象3. 可复用的页面方法代码会变得更加优化4. 更加有效的命令方式使得我们更加清晰的知道方法所操作的UI元素 13.PO模型的核心要素1231. 在PO模式中抽离封装一个BasePage类，该基类应该拥有一个webdriver实例的属性2. 每一个page都继承BasePage，通过driver来管理本page中元素，将page中的操作封装成一个个方法3. TestCase继承unittest.Testcase类，并依赖page类，从而实现相应的测试步骤 14.pymysql **1234567891011121314151617181920import pymysql# 连接数据库con =pymysql.connect(host=&quot;127.0.0.1&quot;, user=&quot;root&quot;, password=&quot;123456&quot;, database=&quot;h2106&quot;, port=3306)# 拿到游标 ，查询结果是列表嵌套 字典cursor = con.cursor(cursor=pymysql.cursors.DictCursor)sql = &quot;select * from stu;&quot;# 执行sql语句cursor.execute(sql)# 拿到结果data = cursor.fetchall()print(data)# 关闭游标cursor.close()# 关闭数据库con.close() 123456781.连接数据库的方法 connect()2.连接数据库需要的参数 host(主机ip),port(端口号),user(用户名),password(密码),database(数据库名)3.执行sql语句 cursor.execute(sql语句)4.拿到数据 cursor.fetchall() ADB1.说一下adb **12345678910111213141516171819adb 是Android debug bridge（安卓调试桥），是sdk提供一个工具，可以操作管理app+设备查看手机cpu情况：adb shell dumpsys cpuinfo应用的内存使用情况：adb shell dumpsys meminfo +包名查看电池状态:adb shell dumpsys battery安装软件：adb install -r (APK路径)卸载软件：adb uninstall com.forgetsky.wanandroid将手机日志输出到本地文件中：adb logcat -v time process &gt; C:/log/aa.txt开启服务：adb start-server关闭服务：adb kill-server查看设备：adb devices将电脑文件传输到移动端：adb push 电脑路径 移动端路径adb push C:\\log\\aa.txt /storage/emulated/0将移动端文件传输到电脑：adb pull 移动端路径 电脑路径adb pull /storage/emulated/0/博雅东湖.mp4 C:\\log\\bo.mp4列出手机装的所有app的包名：adb shell pm list packages清除应用缓存信息:adb shell pm clear [packagename] 2.monkey测试(为什么叫monkey) ***1234567891011121314151617181920212223242526272829monkey 是adb下的一个子命令，可以在Android手机屏幕上产生随机的触摸事件，可以对Android app进行压测adb shell monkey -p 包名 -s 6009 --throttle 300 --ignore-crashes --ignore-timeouts --pct-touch 90 -v 300000 &gt;C:\\log\\log.txt-p 包名 ----******-s 6009: 指定种子，值相同，产生的事件序列也相同 ----******--throttle &lt;毫秒&gt; ： 指定用户操作（即事件）间的间隔 ----******--ignore-crashes：忽略崩溃 -----*****--ignore-timeouts：忽略超时，（ANR） -----*****--pct-touch 设置点击事件百分比 -----*****--pct-motion 设置滑动事件百分比 -----*****-v,-v-v,-v-v-v: 日志详细程度300000： 产生的事件个数（一般都是10w+的次数）&gt;C:\\log\\log.txt ： 日志输出的位置时间：3-5H晚上下班 的时候，运行，等到 早上上班 结束了，分析测试结果处理:1.把日志存到电脑上2.查找异常信息 a.XXXException(NUllPointerException, ArrayIndexOutOfBoundsException,FileNotFoundException...) b.ForceClosed(程序强制关闭) （ctrl+f搜索‘Fatal’） c.ApplicationNot Response(应用程序无响应)(搜索anr) d.out of memory (内存溢出) 3.把搜到的异常信息整理一下，发给开发（把异常那行及下面10几行） 接口自动化1.说说你接口自动化是怎么做的12345671.找后端拿到接口文档2.分析接口（接口间业务关系，关联接口的数据，请求参数，请求头(token，os，版本),响应数据（数据格式，字段，错误分析））3.写接口测试用例4.把测试数据放入csv文件5.在unittest的testcase类中（写一个类，继承unittest.TestCase），写test打头的方法，把csv读取的测试数据放入requests做网络请求，然后把拿到的响应数据断言判断，或者使用pymysql连接数据库查询数据并比对6.在另一个py文件中使用TestSuite调用TestCase中的方法，配合HtmlTestRunner 生成测试报告7.将报告以邮件的形式发送给自己和领导 2.自动化的细节 ***123456789response = request.get()/post()# 1.响应码response.status_code# 2.响应json数据response.json()# 3.字符串格式的json 转换为json/字典json = eval(字符串)# 4.json/字典转换为字符串str1 = str（字典/json） UI自动化1.介绍一下你对项目中哪些功能做了自动化，怎么做得123456789101112我们做自动化的话，一般需要选取那种比较固定的功能，比如搜索，登录，注册等，这些功能在我们迭代的时候一直存在，所以选这些功能。自动化说白了就是将手动测试的步骤全部转换成代码，由代码完成对应的操作，比如人可以通过眼睛看到按钮/输入框的位置，代码不行，需要通过元素定位的方式找到按钮/输入框，代码也没有手，点击也是得通过click方法完成，还有其他的像输入框输入内容，需要调用send_keys（）我的脚本使用了PO模型，将元素操作和业务进行了分离，元素操作封装成了BasePage，具体的业务的写入了具体的业务类，比如SearchPage，LoginPage，LocatePage，验证是通过unittest验证的(下面是举例,拿自己的项目业务举例)说一下我写过的搜索功能（拿简书举例）吧，配置浏览器和url信息后，脚本会帮我们启动对应的浏览器，chrome或者火狐等，进入主页面后通过id定位到搜索输入框（可以xpath定位，id定位，class定位...），调用send_keys()输入想要搜索的内容，通过xpath定位到搜索按钮，代码调用点击click()方法，结果会在新的窗口展示通过driver.switch_to.window(handles[n])切换窗口，搜索结果上面部分是用户，下面部分是文章，我们需要验证用户和文章 是和我们搜索关键字相匹配的验证用户很简单，通过class把所有用户的元素获取到，然后获取用户名（元素.text），然后通过断言判断用户名是否包含搜索关键字验证文章的话我们需要验证文章的作者，标题，文章的内容，只要有三者有一个包含关键字，那结果就是正确的，同样我们获取作者，标题，文章内容的文本，断言判断文本中是否包含搜索关键字（怎么判断，find） git1234567891011121314151617181920212223242526272829303132333435363738git和svn都是是项目版本控制的工具, 可以跟踪项目各个文件的变化svn是集中式的版本控制工具,git是分布式的用户配置git config --global user.name &quot;用户名&quot;git config --global user.email &quot;邮箱&quot;初始化仓库git init 克隆仓库git clone 仓库地址添加所有文件git add --all从暂存区提交 -m：注释git commit -m &#x27;注释内容&#x27;拉取远端内容git pull 将本地历史推送到远程git push 创建一个分支git branch 分支名称删除一个分支git branch -d 分支名称切换分支git checkout 分支名称合并分支git merge将当前分支回退到历史某个版本git reset 查看提交历史记录git log对状态的跟踪git status.gitignore忽略文件: 不想被跟踪的文件可以配置到这里","categories":[{"name":"测试高频面试题-自动化测试","slug":"测试高频面试题-自动化测试","permalink":"http://sunjunyu.cn/categories/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"高频面试题","slug":"高频面试题","permalink":"http://sunjunyu.cn/tags/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98/"},{"name":"测试","slug":"测试","permalink":"http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95/"},{"name":"自动化测试","slug":"自动化测试","permalink":"http://sunjunyu.cn/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"}]},{"title":"git命令","slug":"git","date":"2020-08-08T16:00:00.000Z","updated":"2022-10-10T11:03:56.798Z","comments":true,"path":"2020/08/09/git/","link":"","permalink":"http://sunjunyu.cn/2020/08/09/git/","excerpt":"","text":"版本控制工具1234版本控制工具：svn、git图形化工具：sourcrtree、小乌龟、github免费的代码托管网站：github、gitee 分支初始化的仓库都有一个主分支master 1.创建分支的时候，一般都是以一个分支为模板去创建，创建之后新分支和模板分支里面的内容一摸一样 2.一旦创建之后，修改新分支的内容，模板分支里面不在受影响 3.分支是可以合并的，合并后的分支有两个分支所有的内容 分支相关命令1234567git branch : 查看分支git branch 分支名: 创建分支git chekcout 分支名: 切换分支git checkout -b 分支名: 创建并切换分支合并分支: （合并分支时，有时候会有冲突）git merge 分支名 什么是git123svn和git都是项目版本控制工具，可以控制项目中各个文件的变化svn是集中式的项目版本控制，git是分布式的 操作相关命令用户配置12git config --global user.name 用户名git config --global user.email 邮箱 初始化仓库1git init 克隆仓库1git clone 仓库地址 添加所有文件1git add --all 从暂存区提交1git commit -m &quot;注释内容&quot; 拉取远端内容1git pull 将本地历史推送到远程1git push -u origin master 创建一个分支1git branch 分支名称 删除一个分支1git branch -d 分支名称 切换分支1gi checkout 分支名 合并分支1git merge 分支名 将当前分支回退到历史某个版本1git reset 查看提交历史记录1git log 对状态的跟踪1git status .gitignore忽略文件1不想被跟踪的文件可以添加到此文件中。","categories":[{"name":"git命令","slug":"git命令","permalink":"http://sunjunyu.cn/categories/git%E5%91%BD%E4%BB%A4/"}],"tags":[{"name":"git命令","slug":"git命令","permalink":"http://sunjunyu.cn/tags/git%E5%91%BD%E4%BB%A4/"},{"name":"版本控制工具","slug":"版本控制工具","permalink":"http://sunjunyu.cn/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7/"}]},{"title":"软件开发基础","slug":"软件开发基础","date":"2020-08-07T16:00:00.000Z","updated":"2022-10-10T09:13:18.022Z","comments":true,"path":"2020/08/08/软件开发基础/","link":"","permalink":"http://sunjunyu.cn/2020/08/08/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/","excerpt":"","text":"软件开发模式瀑布模型1将软件生命周期的各项活动规定为按固定顺序而连接的若干阶段工作，形如瀑布流水，最终得到软件产品的项目。 快速原型模型1快速原型模型的第一步是建造一个快速原型，实现客户或未来的用户与系统的交互。用户、客户随时提出需求，研发分析进行实现。 螺旋模型1螺旋模型他将瀑布模型和快速原型模型结合了起来，强调了其他模型所忽视的风险分析，特别适合用于大型复杂的系统。 迭代模型12迭代模型是一种于传统的瀑布式开发相反的软件开发过程，它弥补了传统开发方式的一些弱点，成功率和生产率更高。迭代就是反复求精的过程，用绘画举例就是先画整体，在将每个部分进行细化。 增量模型1增量模型于建造大厦类似，都是一步一步来的，在这种模式下软件被分为一系列的增量构建，如设计、实现、集成、测试等，各个组件相辅相成最终形成的特定功能的代码 敏捷开发模式12敏捷开发是一种以人为核心、迭代。循序渐进的开发方法，这种方法把软件项目的构建分成了多个子项目，子项目都具备集成和可运行的特征且每个子项目都可独立使用。敏捷软件开发是一种按短迭代周期的工作，项目成型快，也就导致需要项目人员面对面交流。 软件的分类根据应用场景分1234工具类软件游戏类软件媒体类软件电商类软件 根据软件结构分类12345678单机版软件： 无网络状态下可以直接使用的安装类软件分布式软件： 需要客户端且需要网络才可以使用的软件。 主要有两种架构： C/S架构--客户端需要安装相对应的软件 B/S架构--客户端为浏览器 C：client(客户端)、B：browser(浏览器)、S:sever(服务器)。 软件质量软件质量的概念1234软件质量是指产品满足基本需求及隐藏需求的程度，需要满足产品界面更加美观、用户操作更便捷等。基本可以依据三个方面： - 满足需求规定 - 满足用户需求 - 满足用户隐式需求 软件质量模型123456- 功能性- 可靠性- 可使用性- 效率- 可维护性- 可移植性 影响软件质量的因素1234- 需求模糊- 软件开发缺乏规范性文件指导- 开发人员问题- 缺乏软件质量控制管理 软件开发生态APP12- APP就是应用程序，主要是安装在手机上的软件- ios、安卓、鸿蒙 微信小程序1微信小程序是一种不需要下载就可以使用的应用，用户扫一扫或者搜一下就可以打开使用。 前端1前端也叫作web前端，对于网站来说通常指网站前台部分也就是用户可以看到的部分。 后端1后端开发就是服务器端开发，负责数据调动，数据传输等","categories":[{"name":"软件开发基础","slug":"软件开发基础","permalink":"http://sunjunyu.cn/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"软件开发基础","slug":"软件开发基础","permalink":"http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/"},{"name":"开发模式","slug":"开发模式","permalink":"http://sunjunyu.cn/tags/%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F/"},{"name":"软件分类","slug":"软件分类","permalink":"http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E5%88%86%E7%B1%BB/"},{"name":"软件质量","slug":"软件质量","permalink":"http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E8%B4%A8%E9%87%8F/"},{"name":"软件开发生态","slug":"软件开发生态","permalink":"http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%94%9F%E6%80%81/"}]},{"title":"软件缺陷","slug":"软件缺陷","date":"2020-08-07T16:00:00.000Z","updated":"2022-10-10T09:13:34.646Z","comments":true,"path":"2020/08/08/软件缺陷/","link":"","permalink":"http://sunjunyu.cn/2020/08/08/%E8%BD%AF%E4%BB%B6%E7%BC%BA%E9%99%B7/","excerpt":"","text":"缺陷的定义1软件缺陷就是我们常说的BUG，是指在软件中存在影响程序正常运行的问题。 缺陷产生的原因12345671. 需求不明确和变更2. 软件结构复杂3. 编码问题4. 项目期限短5. 使用新技术6. 软件开发缺乏规范性文件指导7. 缺乏软件质量控制管理 软件缺陷的分类123456789101112131415161718192021221. 测试种类 - 界面类 - 功能类 - 性能类 - 安全类 - 兼容性类2. 缺陷严重程度 - 严重 - 一般 - 次要 - 轻微3. 缺陷优先级 - 立刻解决 - 高优先级 - 正常排队 - 低优先级4. 缺陷发生的阶段 - 需求阶段 - 架构阶段 - 设计阶段 - 编码阶段 - 测试阶段","categories":[{"name":"软件缺陷","slug":"软件缺陷","permalink":"http://sunjunyu.cn/categories/%E8%BD%AF%E4%BB%B6%E7%BC%BA%E9%99%B7/"}],"tags":[{"name":"软件缺陷","slug":"软件缺陷","permalink":"http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E7%BC%BA%E9%99%B7/"},{"name":"缺陷产生原因","slug":"缺陷产生原因","permalink":"http://sunjunyu.cn/tags/%E7%BC%BA%E9%99%B7%E4%BA%A7%E7%94%9F%E5%8E%9F%E5%9B%A0/"},{"name":"缺陷分类","slug":"缺陷分类","permalink":"http://sunjunyu.cn/tags/%E7%BC%BA%E9%99%B7%E5%88%86%E7%B1%BB/"}]},{"title":"网络基础","slug":"网络基础","date":"2020-07-25T16:00:00.000Z","updated":"2022-10-10T09:14:01.742Z","comments":true,"path":"2020/07/26/网络基础/","link":"","permalink":"http://sunjunyu.cn/2020/07/26/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/","excerpt":"","text":"http和https有什么区别123456 简单来说，HTTP协议是由SSL/TLS+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比HTTP协议更安全。主要区别如下： 1.https协议需要到CA申请证书，一般免费的证书比较少，因而需要一定费用。 2.http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。 3.http和https使用的是完全不同的连接方式，使用的默认端口也不一样，http是80,https是443。 4.http的连接很简单是无状态的，https协议由SSL+TLS协议构建的可进行加密传输、身份认证。比http协议安全。 get和post请求的区别1234561.get后退/刷新无害，post数据则会被重新提交（浏览器应该告知用户数据会被重新提交）。2.get作为书签可以被收藏，post作为书签不可被收藏。3.get能被缓存，post不能被缓存4.get历史参数会被保留在浏览器的历史中，post参数不会被保存在浏览器历史和web服务器日志中。5.get对数据长度有限制，URL最大长度是2048，post无限制。6.与post相比，get的安全性较差（get的参数是在url中），post的数据不会显示在URL中。 请求方式有哪些？1get、post、put、delete 常见的状态码有哪些？12345678910111213100：是服务器告诉客户端，部分请求已经接受，应该继续发送请求，如已经完成则忽略并返回结果。200：请求完成，返回结果。202：是服务器已经接受了请求，但还没有处理，最终会不会处理不确定。204：服务器成功处理了请求，但还未返回实体内容。301：永久重定向，资源已经永久分配新URL302：临时重定向，资源已经临时分配新URL400：请求报文语法或参数错误401：需要通过http认证，或认证失败403：请求资源被拒绝404：资源未找到500：服务器异常502：上游服务器收到无效的响应503：服务器超负载或停机维护。 http请求的组成123请求行：请求的第一行是“方法URI协议/版本”请求头（消息报头）：包含许多有关的客户端环境和请求正文中有用的信息请求正文：请求头和请求正文中间是一个空行，表示请求头已经结束，接下来是请求正文的内容，请求正文中包括用户所要查询的字符串信息。","categories":[{"name":"网络基础","slug":"网络基础","permalink":"http://sunjunyu.cn/categories/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"网络基础","slug":"网络基础","permalink":"http://sunjunyu.cn/tags/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"},{"name":"http/https","slug":"http-https","permalink":"http://sunjunyu.cn/tags/http-https/"},{"name":"get/post","slug":"get-post","permalink":"http://sunjunyu.cn/tags/get-post/"},{"name":"状态码","slug":"状态码","permalink":"http://sunjunyu.cn/tags/%E7%8A%B6%E6%80%81%E7%A0%81/"},{"name":"http请求组成","slug":"http请求组成","permalink":"http://sunjunyu.cn/tags/http%E8%AF%B7%E6%B1%82%E7%BB%84%E6%88%90/"}]},{"title":"接口测试","slug":"接口测试","date":"2020-07-07T16:00:00.000Z","updated":"2022-10-10T09:12:25.831Z","comments":true,"path":"2020/07/08/接口测试/","link":"","permalink":"http://sunjunyu.cn/2020/07/08/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/","excerpt":"","text":"接口测试的流程123456781.找后端拿接口文档2.写测试计划3.分析接口（确认接口之间的业务关系）4.写用例，评审用例5.执行用例去测试（自动化：根据用例编写脚本）6.结果分析7.bug提交8.修复后，回归测试 一般的接口文档包含那些1请求参数、返回参数、URL、请求方式 接口case包含哪些内容1用例标题，优先级，所属模块，资源路径，请求参数，请求方式，测试数据，预期结果（应该有结果），实际结果 接口测试需要测什么，关注什么验证什么，测试点1234567891011121314151617接口测试汇总：参数测试、返回值验证、业务数据、接口之间、DB验证1.参数测试： 1.1针对输入参数和输出参数的测试，包括对类型、长度、校验判断等 1.2异常参数：参数不合法输入，考虑接口内部逻辑错误的异常提示，这些体现在完备的responsecode错误代码中。2.返回值验证： 2.1正确返回：返回的code是否正确，返回的数据是否和DB一致 2.2异常返回：是否定义全面，存在遗漏3.业务数据： 3.1单个参数要符合业务数据属性或定义 3.2多个参数值之间要具有业务含义，赋值需要考虑业务上一一对应的业务关系4.接口之间： 多个接口之间的数据是否存在关联5.DB验证： 5.1接口逻辑是否落地到DB 5.2DB存储数据是否准确 有依赖关系&#x2F;关联的接口怎么测试1234567比如B接口的请求参数是A接口的响应数据我们需要请求A接口，拿到数据后，把需要的数据提取出来，放入B接口进行请求具体实现的话使用我们常用的那些工具都可以，像postman，Jmeter，python脚本都行1.postman：请求A接口，在Tests脚本里面写js代码，将数据解析后提取想要的数据，存为全局/环境变量，在B接口请求的时候关联使用（&#123;&#123;id&#125;&#125;）2.Jmeter：请求A接口，给A接口添加后处理器--正则提取器，通过正则的方式，将数据提取出来变成用户变量，在B接口中关联使用（$&#123;id&#125;）3.python: 使用requests请求A接口，拿到响应后解析成json，然后取出想要的数据，进行B接口的请求，将取出的参数塞入即可 postman工具是什么，有什么用1234567891011121314151617181920postman是一款强大的http调试工具，我们一般使用它来做接口测试。常用功能：1.创建测试和生产环境，添加相对的环境变量，比如baseurl2.创建接口集，里面添加项目接口3.添加接口集，可以发起get/post/delete/put等请求4.GET请求查询参数放入params中，post请求参数放入bady中，可以是普通键值对，json/html/xml/文件，请求头都是放入headers里面5.pre-request script预处理脚本，在发起网络请求之前会调用的js代码，可以再里面换取一些动态的参数，比如时间戳，随机数等6.tests脚本，再发起网络请求成功拿到响应之后调用，可以在里面添加断言，判断响应数据是否正确7.mock测试，模拟服务器返回自己想要的测试数据8.参数化：环境变量，全局变量，csv参数化 1.写一个csv/txt文档，把测试数据放入 2.建接口集，里面写接口 3.接口传递的参数不能写死，使用关联的方式（&#123;&#123;key&#125;&#125;），key应该是csv文件表头名字 4.双击接口集，点击右上角的run，打开Runner 5.配置参数： Iterations（迭代次数） Delay: 延迟对应的事件发起请求 data：选择csv文件 Data file type： 选择文件的类型（text/csv） 6.点击运行 Charles抓包什么是抓包，有什么作用12345678910111213抓包: 抓包是将网络传输发送与接收的数据包进行截获、重发、编辑、转存等操作，也可以用来检查网络安全。常见的抓包工具： charlers，fiddler，wires hark等等作用： 1.定位前后端问题： app:通过抓包看网络请求 web:浏览器按F12，点到network，在下面找到对应的网络请求，看url还有参数，如果url和参数不对，就是前端的问题，如果没有问题，看响应数据，如果响应数据有问题，那么就是后端的问题，如果数据没有问题那就是前端的问题。 2.模拟404 3.模拟弱网 4.mock测试 抓包的时候遇到乱码一般是什么原因121.没有信任证书导致的，因为HTTPS是加密传输的2.数据本身还做过加密，除非拿到密钥，否则没办法解密 mock测试，rewrite，map remote&#x2F;local的作用123456789mock测试： 模拟我们想要的请求和测试数据返回charles： 断点：断点可以修改请求数据和响应数据，一般用来临时修改map:本质上都是重定向 map local:拿本地文件替换服务器返回的数据 map remote:拿另一个链接返回的数据替换原来数据rewrite： 通过正则匹配的方式，修改请求/响应数据 Charles具体操作怎么信任证书123456把抓包工具的证书导出，在对应的浏览器/手机中信任charles具体操作：安装:help --&gt; ssl proxying--&gt; install charles root certificate导出:help--&gt;ssl proxying--&gt;save Charles root certificate，选择.cer格式的证书信任:chrome浏览器：设置 → 管理证书（安全） → 导入 移动端怎么抓包12341.PC和手机在同一个网络下2.手机需要设置代理，IP和端口号3.信任证书4.开启app进行抓包 map local使用步骤1Tools--map Local--指定本地文件 map remote使用步骤1tools--map remote --&gt;指定重定向的链接 断点修改请求参数1选中链接--&gt;右键 --&gt;选择“BreakPoints” --&gt;刷新网页 --&gt;Edit Request,修改请求信息--&gt;Execute 断点修改响应数据1选中链接--&gt;右键 --&gt;选择“BreakPoints” --&gt;刷新网页 --&gt;Edit Response”,修改响应数据--&gt;Execute rewrite1Tools-Rewrite --&gt;添加对应的链接,规则 弱网 使用步骤1Proxy--&gt;Throttling Settings(节流阀设置) --&gt;可以选择3G,4G,56kbps,256kbps.... 模拟404 使用步骤1tools——&gt;blocklist--&gt; 添加网址","categories":[{"name":"接口测试","slug":"接口测试","permalink":"http://sunjunyu.cn/categories/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"接口测试","slug":"接口测试","permalink":"http://sunjunyu.cn/tags/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"},{"name":"抓包","slug":"抓包","permalink":"http://sunjunyu.cn/tags/%E6%8A%93%E5%8C%85/"},{"name":"Charles","slug":"Charles","permalink":"http://sunjunyu.cn/tags/Charles/"}]},{"title":"SQL案例","slug":"sql案例","date":"2020-06-18T16:00:00.000Z","updated":"2022-10-10T10:40:12.997Z","comments":true,"path":"2020/06/19/sql案例/","link":"","permalink":"http://sunjunyu.cn/2020/06/19/sql%E6%A1%88%E4%BE%8B/","excerpt":"","text":"两张表，用户表user，订单表orders user表字段：id，name，age，sex 123create database met;use met;create table user(id int,name varchar(20),age int,sex varchar(20)); orders表字段：id，uid（和用户表id对应）,p_name(商品名称),amount(金额),time(购买日期) 1create table orders(id int,uid int,p_name varchar(20),amount float,time varchar(30)); 给用户表插入数据(写1条sql就可以) 1，张三，20，男； 2，lisi，21，女； 3，王五，19，女 4,赵六,33,男 1insert into user values(1,&quot;张三&quot;,20,&quot;男&quot;),(2,&quot;lisi&quot;,21,&quot;女&quot;),(3,&quot;王五&quot;,19,&quot;女&quot;),(4,&quot;赵六&quot;,33,&quot;男&quot;); 插入数据如下 1，1,“苹果”，1111.5，‘2022-01-01’ 2,1,“梨子”,2000,’2022-01-02’ 3，2,“苹果”,1000,’2022-01-02’ 4，2,“苹果”,9000,’2022-01-04’ 5，3,“梨子”,1000,’2022-01-06’ 6，3,“香蕉”,9000,’2022-01-11’ 7，3,“橘子”,2000,’2022-01-11’ 1234567insert into orders values(1,1,&quot;苹果&quot;,1111.5,&quot;2022-01-01&quot;);insert into orders values(2,1,&quot;梨子&quot;,2000,&quot;2022-01-02&quot;);insert into orders values(3,2,&quot;苹果&quot;,1000,&quot;2022-01-02&quot;);insert into orders values(4,2,&quot;苹果&quot;,9000,&quot;2022-01-04&quot;);insert into orders values(5,3,&quot;梨子&quot;,1000,&quot;2022-01-06&quot;);insert into orders values(6,3,&quot;香蕉&quot;,9000,&quot;2022-01-11&quot;);insert into orders values(7,3,&quot;橘子&quot;,2000,&quot;2022-01-11&quot;); 修改id是7 的数据，p_name改为苹果酱，金额改为500 1update orders set p_name=&quot;苹果酱&quot;,amount=500 where id=7; 查询年龄最小的用户姓名 1select min(age),name from user; 查询amount大于5000的订单 1select * from orders where amount&gt;5000; 查询amount在1000到6000的订单 1select * from orders where amount&gt;1000 and amount&lt;6000; 查询p_name中含有苹果的订单 1select * from orders where p_name like &quot;%苹果%&quot;; 查询第一个字是梨的订单 1select * from orders where p_name like &quot;梨%&quot;; 查询所有订单，按amount降序排列 1select * from orders order by amount desc; 查询订单，从第2条开始，查询4条数据 1select * from orders limit 1,4; 查询总金额&gt;7000的商品 及对应总金额 1select * from orders where amount&gt;7000; 查询最大花费的一笔订单对应的用户姓名(如果多个,都显示) 1select * from user where id in (select uid from orders where amount=(select max(amount) from orders)); 查询订单的平均金额 1select avg(amount) from orders; 按男女分组,显示对应的用户名,如下: 1，张三，20，男； 4,赵六,33,男 2，lisi，21，女； 3，王五，19，女 1select id,name,age,sex from user group by sex; 删除2022年1月6号的订单 1delete from orders where time=&quot;2022-01-06&quot;; 什么是子查询 1一个查询的结果是另一个查询的条件。 左外和右外查询是什么，区别 12左查询是以左表为主的查询，查询结合无论是否有交际左表的数据都会显示，右表仅显示和左表有关联的数据。右查询是以右表为主，右表全部显示，左边仅显示有关联的数据。 内联查询是什么 1内联查询是仅展示有关联的数据。","categories":[{"name":"SQL案例","slug":"SQL案例","permalink":"http://sunjunyu.cn/categories/SQL%E6%A1%88%E4%BE%8B/"}],"tags":[{"name":"sql语句","slug":"sql语句","permalink":"http://sunjunyu.cn/tags/sql%E8%AF%AD%E5%8F%A5/"},{"name":"sql案例","slug":"sql案例","permalink":"http://sunjunyu.cn/tags/sql%E6%A1%88%E4%BE%8B/"}]},{"title":"Linux操作","slug":"Linux操作","date":"2020-06-17T16:00:00.000Z","updated":"2022-11-01T02:01:34.513Z","comments":true,"path":"2020/06/18/Linux操作/","link":"","permalink":"http://sunjunyu.cn/2020/06/18/Linux%E6%93%8D%E4%BD%9C/","excerpt":"","text":"Linux简介123456789101112Linux是基于unix的开源免费的操作系统，由于系统的稳定性和安全性几乎成为程序代码运行的最佳环境。Linux的分类1.Linux根据市场需求，分为两个方向 - 图形化界面版：注重用户体验，类似windows操作系统，但目前成熟度不够。 - 服务器版本：没有好看的界面，是以控制台窗口输入命令操作系统的，类似于DOS，是我们假设服务器的最佳选择。 2.Linux根据原生程度分为两种 - 内核版本：在了Linux领导下的内核小组开发维护的系统内核版本号。 - 发行版本：一些组织或公司在内核版基础上进行二次开发而重新发行的版本。3.Linux发行版本不同，又可以分为多种不同的类型Ubuntu、CentOS、中标麒麟、红旗Linux等。 Linux基本命令1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253• 目录操作• cd usr/ 切换到该目录下usr目录• cd .. 切换到上一层目录• cd / 切换到系统根目录• mkdir 目录名称 创建目录 • ls 目录名称 查询该目录下所有的目录和文件 • ls [-a] 目录名称 查询该目录下所有的目录和文件,包含隐藏文件 • ls [-l] 目录名称 查询该目录下所有的目录和文件的详细信息 • find / -name 目录名称 查找/root下的目录(文件)• mv 目录名称 新目录名称 修改目录名称• mv 目录名称 目录的新位置 剪切 • cp -r 目录名称 目录的目标位置 拷贝 • rm -rf 目录 强制删除目录 • 文件操作 • 创建空文件：touch 文件名称 • 查看文件内容：cat/more/less/tail 文件 • 动态查看/实时查看文件(日志)：tail -f 文件 • 查看文件前10行：head -n 10 文件名• 查看文件后5行：tail -n 5 文件名• 关键字搜索 ：grep 要搜索的字符串 要搜索的文件 • 修改文件内容：vi/vim 文件（--&gt;进入文件-----&gt;命令模式------&gt;按i进入编辑模式-----&gt;编辑文件 **-------&gt;按**Esc进入命令模式--输入：进入底行模式-**----&gt;**输入wq/q!）• 强制删除文件：rm -rf 文件 • 文件的打包压缩 :tar -zcvf 文件名.tar 要打包的文件 • 文件的解压:tar -xvf 文件名.tar • 扩充:将文件解压到固定位置 :tar -xvf 文件名.tar -C 指定解压的位置 • 查询当前所在位置 : pwd • 查看进程: ps -ef | grep 进程名称(tomcat/mysql)• 杀死进程:kill -9 进程pid• 查看端口号:netstat -an | grep 端口号(3306) • 查看服务器ip : ifconfig • 查看网络是否能正常使用 • ping 外网地址 查看是否能访问外网 • ping 内网ip 查看是否能访问内网 • 权限命令 :chmod 777 文件 赋权• 查看cpu :top • 查看磁盘信息 : df -h • 查看内存信息: free • 切换管理员账户：su，然后输入密码• 连接另一台服务器ssh 用户名@ip• 从一台服务器推数据到其他服务器scp -r 文件夹 用户名@ip:/opt/soft（目标文件夹）• 从当前服务器拉取目标服务器的数据scp 用户名@ip:/opt/soft/test.txt（目标文件、文件夹） /opt/sofeware(当前服务器存储地址）","categories":[{"name":"Linux","slug":"Linux","permalink":"http://sunjunyu.cn/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://sunjunyu.cn/tags/Linux/"}]},{"title":"SQL操作","slug":"sql操作","date":"2020-05-26T16:00:00.000Z","updated":"2022-10-10T11:01:16.232Z","comments":true,"path":"2020/05/27/sql操作/","link":"","permalink":"http://sunjunyu.cn/2020/05/27/sql%E6%93%8D%E4%BD%9C/","excerpt":"","text":"数据库 1234567数据库顾名思义就是存储数据和特殊文件的仓库，由表组成。1.一列存储相同类型的内容：字段数据2.一行存储某个事物的相关信息：记录数据库分为两种类型分别为*关系型数据库*和*非关系型数据库*关系型数据库：mysql、Oracle、SqlServer等非关系型数据库：MongoDB、Redis等 什么是SQL语句1所有的数据库都是由sql语句来进行控制的。 SQL12安装mysql进行练习，也可直接使用禅道自带的MariaDB，MariaDB是由mysql演变而成的。个人使用的是mysql进行练习。 注！： 121.自己安装的mysql和禅道自带的服务只能开一个2.禅道数据库密码可以开启禅道在“密码”--“数据库密码”中修改。 其他12345678910111213141516登录mysql -uroot -p12345678 -u:user(用户) -p:password(密码)查看数据库编码格式show create database 库名;单独修改表的编码方式alter table 表名 canvert to charset=utf8;显示时间select now();显示数据库版本select version(); 数据”库”操作查看所有数据库 show1show databases; 创建数据库create 酷睿特1234create database 库名 charset=utf8;注！：创建数据库的时候，需要给定编码方式---charset=utf8(中文编码) 切换&#x2F;进入数据库 use 柚子1use 库名; 删除数据库 drop 赵普1drop database 库名; 表操作创建表 create 酷睿特1create table 表名(字段 类型 约束条件,字段2 类型 约束条件,字段3 类型 约束条件); 123456789101112131415161718类型: int(数字) int unsigned(无符号整型),varchar(20):字符串float:浮点decimal:浮点text:文本date:日期datetime:日期+时分秒time: 时分秒enum:枚举约束条件:not null: 不能为空PRIMARY KEY:主键,在表中唯一AUTO_INCREMENT:自增, 配合主键用 UNIQUE:唯一default: 设置默认值的 修改表结构 alter 欧福特12345添加字段alter table 表名 add 字段 类型 约束;删除字段alter table 表名 drop 字段; 增（插入数据）insert 因s儿特1234567insert into 表名 values(数据1，数据2);插入多条数据insert into 表名 values(数据1,数据2),(数据1,数据2);插入部分数据insert into 表名(字段1,字段2) values(数据1,数据2); 删（删除数据）delete 地雷特1delete from 表名 where 条件; 改（修改数据） updata1updata 表名 set 字段=新数据，字段2=新数据 where 条件; 查（查询数据） select 斯莱特12345678查询所有select * from 表名;查询符合条件的数据select * from 表名 where 条件;查询符合条件并只显示部分需要的字段select 字段,字段2 from 表名 where 条件; 12345条件：逻辑运算：and(与) or(或) not(非)比较运算符：&gt;,&lt;,=,&gt;=,&lt;=,!=between and 90:在80~90之间，连续区间in:不连续区间，固定的数字 模糊查询 like 来客12345678查询包含某个字的数据select * from 表名 where 字段 like &quot;%X%&quot;;查询以某个字开头的数据select * from 表名 where 字段 like &quot;X_%&quot;;查询两个字中只知道开头的数据select * from 表名 where 字段 like &quot;X_&quot;; 排序 order by 欧的白12345升序select * from 表名 order by 字段 asc;降序select * from 表名 order by 字段 desc,字段2 desc; 分页 limit n,m 厘米特123456789select * from 表名 where 字段&gt;=XX limit X,X;注！：limit要放在where的后面limit n 查询n条数据limit n,mm:查询的起始位置，索引（从0开始），（页数-1）*每页的数量n:查询的条数 分组 group by，割肉铺白 group_concat() 割肉铺肯卡特1234567891011121314151617男女,未知性别的人各多少select sex,count(*) from stu group by sex;根据性别分组,显示各个组的性别和姓名 select sex,name from stu order by sex; select sex,group_concat(name) from stu group by sex; 查询平均年龄&gt;18的组及对应的姓名 select sex,group_concat(name) from stu group by sex having avg(age)&gt;18;按性别分组并查询年龄大于18的人 select sex,group_concat(name) from stu where age&gt;18 group by sex; 聚合函数/组函数:count(字段) 个数sum(字段) 总数avg 平均数max 最大值min 最小值 子查询1select 字段 from 表名 where 字段=(select 关联字段 from 表名 where 字段=&quot;&quot;); 内连接 inner join on123select * from customer c inner join orders o on c.id=o.customer_id; select * from customer,orders where customer.id=orders.customer_id; select * from customer c,orders o where c.id=o.customer_id; 左外连接 left join on123select * from customer c left join orders o on c.id=o.customer_id;# 从学生表和成绩表中查出学生的总分，要求null显示为0select name,ifNULL(sum(c.score),0) as &quot;总分&quot; from student s left join course c on c.id=s.sid group by s.sid; 右外连接 right join on1select * from customer c right join orders o on c.id=o.customer_id;","categories":[{"name":"SQL","slug":"SQL","permalink":"http://sunjunyu.cn/categories/SQL/"}],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://sunjunyu.cn/tags/SQL/"}]},{"title":"软件测试","slug":"软件测试","date":"2020-05-25T16:00:00.000Z","updated":"2022-10-12T00:52:57.771Z","comments":true,"path":"2020/05/26/软件测试/","link":"","permalink":"http://sunjunyu.cn/2020/05/26/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/","excerpt":"","text":"软件测试模型V模型 W模型 软件测试的分类 测试计划的内容1测试目的、测试资源、测试范围、测试风险、人员分工、测试策略、测试准则、测试进度、测试输出 测试目的12345671.测试编写的结构 - 目的的总体概述 - 包含详细描述2.测试目的编写的内容 - 程序是否满足需求 - 程序是否存在BUG - 系统或产品顺利发布 测试资源12345671.人力资源 - 职务 xxx - 姓名 测试工程师 - 职责 负责某某软件某某模块的测试2.系统资源 - 硬件：cpu、主板、内存... - 软件环境（系统）：windows、CentOS 7、iOS等 测试范围1测试对象、测试的特性、不测试的特性 测试风险1人员不足、技术有限、软件依赖环境不完备、工具不足、需求变更。 案例：本次测试活动从人、料、法、环、时进行风险分析。人，即测试人员： 1231. 业务不熟：测试人员对被测系统的业务流程不熟悉，体现在对需求的理解上把握不准、理解不透彻、理解错误等。2. 测试人员变动：离职、岗位调动、请假等。3. 定位效应：测试过的可靠功能，特别是多次回归且没有发现问题，在此后往往会认为此功能是可靠的。 料，即测试相关文档和资料： 1231. Spec(详细规格说明书)缺失：只有PRD(项目需求概要说明书)，没有Spec。2. 需求变更3. 测试用例/数据设计不充分：由于测试人员的个人因素或时间的限制等方面导致。 法，即测试方法和实施： 1231. 错误或缺失测试方法：对功能点没有采用正确的测试方法，或某些测试方法没有，被忽视，如边界测试等，导致测试不充分。2. 场景的缺失或部分缺失：Spec非常详细，所有的精力放在功能点的测试上，忽视了针对业务场景的测试。3. 测试用例实施不充分：测试用例由于各种原因没有完全测试，如在回归测试中。 环，即测试环境： 12341. 被测软件版本不统一：没有有效的配置管理，这种情况及易出现。2. 测试软件环境不一致：测试员之间或和开发之间的操作系统类型不一致、操作系统的干净程度不一致。3. 测试硬件环境不一致：测试员之间或和开发的设备不一致，如CPU频率，内存大小等。4. 测试硬件未及时到位。 时，即测试时间： 1测试时间不足：里程碑之间留给测试的时间无法满足全测试要求。 人员分工 测试策略1都需要那些测试，如黑盒测试，用那些方式、白盒测试用那些方式等等。 测试准则1234- 启动准则：满足什么情况可以进行测试- 暂停准则：遇到什么情况测试要暂停- 再启动准则：在什么情况下可以重新启动测试- 结束准则：什么情况可以停止测试 测试进度12测试进度需要包含一下数据：测试任务、负责人、预期开始时间、预期结束时间、时间进度、备注等。 例： 测试输出1234这部分需要规划测试任务中所有文档的输出！根据项目特点进行规划：测试计划、测试设计说明书、测试案例说明书、测试规程、测试日志、测试问题报告、测试分析报告。如果需要某些文档合并为一篇文档，例如把测试计划说明和测试案例说明书结合在一篇文档中，需要进行说明最后，使用XMind总结测试计划 测试用例包含那些内容测试用例的定义： 1测试用例就是为某个业务目标，而编制的一些测试数据、执行条件以及预期结果组成的案例。 测试用例包含以下16个要素：（9个核心） 123456789101112131415161718用例ID：用例的编号用例标题：需要做到见名知意所属模块：注明此用例属于那个功能模块优先级： 要分出先后（功能主要程度）前置条件：测试这个功能时需要的一些资源（如管理员账号或普通用户账号等）操作步骤：打开这个界面的顺序测试数据：输入的内容预期结果：知道操作步骤和测试数据后结果就知道了（应该有的结果）实际结果：于预期结果不同（大概率是BUG）通过否： y/nbugID: bug编号编写人员：编写用例的人员名字编写时间：测试人员：测试人员名字测试时间：备注： 设计测试用例的方法：7个方法12345678设计用例的七个方法：- 等价类划分法- 边界值分析法- 场景法- 错误推测法- 判定表- 因果图- 正交实验法 等价类划分法12345678910111213https://sunjunyu.cn/images/等价，顾名思义就是价值相同的意思，等价类划分法就是把可能要使用的数据进行价值分类，每一类取一些具有代表性的数据进行测试。分类：有效等价类：符合《需求说明书》，输入合理的数据集合无效等价类：不符合《需求说明书》，输入不合理的数据集合类型：取值范围：输入学生成绩0-100恒等类型：只有一个结果是正确的，其他都是错误的（彩票一等奖）布尔值型：通过是否进行选择，（同意协议）枚举类型：给出选项内容，只要符合一个就可以（冲话费）规则类型：规定要求，满足要求就可以（邮箱）无要求文本框类型：任意字符都可输入，中文、英文，符号等（反馈信息） 案例： 结果： 边界值分析法1234567891011121314151617181920定义：边界值分析法是取高于或者低于边界的一些数据进行测试。原因：避免程序开发时循环体取数时搞错&gt;&lt;=确定边界值的方法:边界值分为上点、离点、内点。上点：是指边界上的点（一段有序数组的头和尾就是上点）内点：范围内的点（一段有序数组从头到尾之间的所有都是内点）离点：距离上点最近的一个点。（开内闭外取值）开区间: 不包含=的, 可以使用()表示闭区间: 包含等于的, 可以使用[]表示例如成绩:0&lt;=X&gt;=100 左闭右闭 [0,100] 离点：-1 2 1010&lt;X&gt;=100 左开右闭 (0,100] 离点：1 2 1010&lt;=X&gt;100 右闭左开 [0,100) 离点：-1 2 990&lt;X&gt;100 左开右开 (0,100) 离点：1 2 99 场景法12345定义：对功能点或业务场景的描述进行业务模拟，从而提取高效的测试方法。即画业务流程图。基本流:正确完成的流程 (正例)备选流:存在异常的流程，对于基本流每一步都取反 (反例) 原理图： ATM引入场景法： 你提交的BUG都提交那些内容缺陷编号、严重程度、优先级、所属模块、缺陷状态、测试环境、测试机、指派人、缺陷类型、缺陷标题、重现步骤、预期结果、实际结果、提交人、提交时间、测试用例、附件 bug流转的过程&#x2F;bug的状态","categories":[{"name":"软件测试","slug":"软件测试","permalink":"http://sunjunyu.cn/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"软件测试","slug":"软件测试","permalink":"http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"},{"name":"测试模型","slug":"测试模型","permalink":"http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95%E6%A8%A1%E5%9E%8B/"},{"name":"测试分类","slug":"测试分类","permalink":"http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/"},{"name":"测试用例方法","slug":"测试用例方法","permalink":"http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E6%96%B9%E6%B3%95/"}]}],"categories":[{"name":"测试高频面试题-功能测试","slug":"测试高频面试题-功能测试","permalink":"http://sunjunyu.cn/categories/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/"},{"name":"测试高频面试题-性能测试","slug":"测试高频面试题-性能测试","permalink":"http://sunjunyu.cn/categories/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"},{"name":"测试高频面试题-接口测试","slug":"测试高频面试题-接口测试","permalink":"http://sunjunyu.cn/categories/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"},{"name":"测试高频面试题-自动化测试","slug":"测试高频面试题-自动化测试","permalink":"http://sunjunyu.cn/categories/%E6%B5%8B%E8%AF%95%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"},{"name":"git命令","slug":"git命令","permalink":"http://sunjunyu.cn/categories/git%E5%91%BD%E4%BB%A4/"},{"name":"软件开发基础","slug":"软件开发基础","permalink":"http://sunjunyu.cn/categories/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/"},{"name":"软件缺陷","slug":"软件缺陷","permalink":"http://sunjunyu.cn/categories/%E8%BD%AF%E4%BB%B6%E7%BC%BA%E9%99%B7/"},{"name":"网络基础","slug":"网络基础","permalink":"http://sunjunyu.cn/categories/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"},{"name":"接口测试","slug":"接口测试","permalink":"http://sunjunyu.cn/categories/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"},{"name":"SQL案例","slug":"SQL案例","permalink":"http://sunjunyu.cn/categories/SQL%E6%A1%88%E4%BE%8B/"},{"name":"Linux","slug":"Linux","permalink":"http://sunjunyu.cn/categories/Linux/"},{"name":"SQL","slug":"SQL","permalink":"http://sunjunyu.cn/categories/SQL/"},{"name":"软件测试","slug":"软件测试","permalink":"http://sunjunyu.cn/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"高频面试题","slug":"高频面试题","permalink":"http://sunjunyu.cn/tags/%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%98/"},{"name":"测试","slug":"测试","permalink":"http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95/"},{"name":"功能测试","slug":"功能测试","permalink":"http://sunjunyu.cn/tags/%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/"},{"name":"性能测试","slug":"性能测试","permalink":"http://sunjunyu.cn/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"},{"name":"接口测试","slug":"接口测试","permalink":"http://sunjunyu.cn/tags/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"},{"name":"自动化测试","slug":"自动化测试","permalink":"http://sunjunyu.cn/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"},{"name":"git命令","slug":"git命令","permalink":"http://sunjunyu.cn/tags/git%E5%91%BD%E4%BB%A4/"},{"name":"版本控制工具","slug":"版本控制工具","permalink":"http://sunjunyu.cn/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7/"},{"name":"软件开发基础","slug":"软件开发基础","permalink":"http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/"},{"name":"开发模式","slug":"开发模式","permalink":"http://sunjunyu.cn/tags/%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F/"},{"name":"软件分类","slug":"软件分类","permalink":"http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E5%88%86%E7%B1%BB/"},{"name":"软件质量","slug":"软件质量","permalink":"http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E8%B4%A8%E9%87%8F/"},{"name":"软件开发生态","slug":"软件开发生态","permalink":"http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%94%9F%E6%80%81/"},{"name":"软件缺陷","slug":"软件缺陷","permalink":"http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E7%BC%BA%E9%99%B7/"},{"name":"缺陷产生原因","slug":"缺陷产生原因","permalink":"http://sunjunyu.cn/tags/%E7%BC%BA%E9%99%B7%E4%BA%A7%E7%94%9F%E5%8E%9F%E5%9B%A0/"},{"name":"缺陷分类","slug":"缺陷分类","permalink":"http://sunjunyu.cn/tags/%E7%BC%BA%E9%99%B7%E5%88%86%E7%B1%BB/"},{"name":"网络基础","slug":"网络基础","permalink":"http://sunjunyu.cn/tags/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"},{"name":"http/https","slug":"http-https","permalink":"http://sunjunyu.cn/tags/http-https/"},{"name":"get/post","slug":"get-post","permalink":"http://sunjunyu.cn/tags/get-post/"},{"name":"状态码","slug":"状态码","permalink":"http://sunjunyu.cn/tags/%E7%8A%B6%E6%80%81%E7%A0%81/"},{"name":"http请求组成","slug":"http请求组成","permalink":"http://sunjunyu.cn/tags/http%E8%AF%B7%E6%B1%82%E7%BB%84%E6%88%90/"},{"name":"抓包","slug":"抓包","permalink":"http://sunjunyu.cn/tags/%E6%8A%93%E5%8C%85/"},{"name":"Charles","slug":"Charles","permalink":"http://sunjunyu.cn/tags/Charles/"},{"name":"sql语句","slug":"sql语句","permalink":"http://sunjunyu.cn/tags/sql%E8%AF%AD%E5%8F%A5/"},{"name":"sql案例","slug":"sql案例","permalink":"http://sunjunyu.cn/tags/sql%E6%A1%88%E4%BE%8B/"},{"name":"Linux","slug":"Linux","permalink":"http://sunjunyu.cn/tags/Linux/"},{"name":"SQL","slug":"SQL","permalink":"http://sunjunyu.cn/tags/SQL/"},{"name":"软件测试","slug":"软件测试","permalink":"http://sunjunyu.cn/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"},{"name":"测试模型","slug":"测试模型","permalink":"http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95%E6%A8%A1%E5%9E%8B/"},{"name":"测试分类","slug":"测试分类","permalink":"http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/"},{"name":"测试用例方法","slug":"测试用例方法","permalink":"http://sunjunyu.cn/tags/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E6%96%B9%E6%B3%95/"}]}